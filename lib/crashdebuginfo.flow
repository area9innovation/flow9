import ds/tree;
import string;
import math;

export {
	// Example use:
	// You have a stack dump for the crash. You see what functions are invoked, but crashes do happen on client side, and you can not reproduce them.
	// So you can add some stubs to the code for additional activity logging (e.g. last function parameters). When cliend updates an app, it still
	// crashes, but you get more info from this situation. Remember to respect user's privacy:
	//  - log as few info as possible;
	//  - don't forget to remove stub code when issue is resolved.
	setSupplimentaryDebugData(key: string, value: string) -> void;
	dumpSupplimentaryDebugData() -> string;
	appendSupplimentaryDebugData(string) -> string;
}

supplimentaryDebugData : ref Tree<string, string> = ref makeTree();

setSupplimentaryDebugData(key: string, value: string) {
	supplimentaryDebugData := setTree(^supplimentaryDebugData, key, value)
}

dumpSupplimentaryDebugData() {
	strGlue(foldTree(
		^supplimentaryDebugData,
		if (sizeTree(^supplimentaryDebugData) |> i2b) ["Supplimentary debug data:"] else [],
		\ k, v, a -> arrayPush(a, k + " -> <[" + v + "]>")
	), "\n");
}

appendSupplimentaryDebugData(data: string) {
	strGlue([data, dumpSupplimentaryDebugData()], "\n")
}
