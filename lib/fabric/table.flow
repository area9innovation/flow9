import fabric/fabric_types;
import material/material_gui;

export {
	btable2material(rows : [[Material]], style : BTableStyle) -> Material;
}

btable2material(rows : [[Material]], style : BTableStyle) -> Material {
	if (rows == []) MEmpty()
	else {
		widths = map(rows, \row -> map(row, \c -> {
			make(0.0)
		}));
		heights = map(rows, \row -> map(row, \c -> make(0.0)));
		rowHeight : [Transform<double>] = mapi(rows, \y, row -> {
			fmaxA(heights[y], 0.0)
		});
		columnHeight : [Transform<double>] = mapi(rows[0], \x, __ -> {
			fmaxA(map(widths, \row -> row[x]), 0.0)
		});

/*		iteri(rowHeight, \y, rh -> {
			fsubscribe(rh, \h -> {
				println("Row " + i2s(y) + ": " + d2s(h))
			});
			{}
		});*/

		MLines(mapi(rows, \y, row -> {
			MCols(
				mapi(row, \x, c -> {
					MSelect2(columnHeight[x], rowHeight[y], \w, h -> {
						MFixSize(MAttachWidthHeight(c, widths[y][x], heights[y][x]), MFixed(w, h));
					})
				})
			)
		}));
	}
}
