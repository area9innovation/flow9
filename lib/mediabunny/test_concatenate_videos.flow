import mediabunny/mediabunny;
import runtime;
import fs/filesystem;
import ds/arrayutils;

// Example: Concatenate multiple Amazon Chime MP4 recordings
main() {
	videoUrl = "./images/material_test/big_buck_bunny.mp4";
	ext = "." + takeAfterLast(videoUrl, ".", "");
	repeat = 2;
	// Concatenate video
	promises = [
		Promise(\fulfill, reject -> mapiAsync(arrayRepeat(videoUrl, repeat), \i, url, ff, rr -> {
			makeFileByBlobUrl(url, "video_" + i2s(i) + ext, ff, rr)
		}, \files -> {
			name = "big_buck_bunny_x_" + i2s(repeat);
			mbConcatMedia(
				files,
				name,
				\outputFile -> {
					saveNativeFileClient(name, outputFile);
					fulfill(0);
				},
				\err -> {
					println("âœ— Concatenation failed: " + err);
					reject(err);
				}
			)
		}, \err -> {
			println("Async failed");
			reject(err);
		})),
		// Concatenate audio
		Promise(\fulfill, reject -> mapiAsync(arrayRepeat(videoUrl, repeat), \i, url, ff, rr -> {
			makeFileByBlobUrl(url, "video_" + i2s(i) + ext, \nativeFile -> {
				mbConversion(nativeFile, MBAudioWAV(), [], ff, rr)
			}, rr)
		}, \files -> {
			name = "big_buck_bunny_audio_x_" + i2s(repeat);
			mbConcatMedia(
				files,
				name,
				\outputFile -> {
					saveNativeFileClient(name, outputFile);
					fulfill(0);
				},
				\err -> {
					println("âœ— Concatenation failed: " + err); reject(err);
					reject(err);
				}
			)
		}, \err -> {
			println("Async failed");
			reject(err);
		}))
	]

	doneP(allP(promises), \__ -> println("Tests Completed"), \err -> println("Tests Failed: " + err))
}
