import flowstructs;

export {

	native mbGetMediaDuration : (file : native, cb : (duration : int) -> void) -> void = Mediabunny.getMediaDuration;
	mbExtractAudio : (file : native, style : [MBStyle], cb : (audioData : native) -> void, onError : (error : string) -> void) -> void;

	MBStyle ::= MBAudioFormat, MBSampleRate;
		MBSampleRate(sampleRate : int); // Def 16 kHz
		MBAudioFormat ::= MBAudioMP3, MBAudioWAV;
			MBAudioMP3();
			MBAudioWAV();
}

mbAudioFormatToExt(format : MBAudioFormat) -> string {
	switch (format : MBAudioFormat) {
		MBAudioMP3(): "mp3";
		MBAudioWAV(): "wav";
	}
}

native mbExtractAudioNative : (file : native, format : string, sampleRate : int, cb : (audioData : native) -> void, onError : (error : string) -> void) -> void = Mediabunny.ExtractAudio;
mbExtractAudio(file : native, style : [MBStyle], cb : (audioData : native) -> void, onError : (error : string) -> void) -> void {
	format = mbAudioFormatToExt(extractStruct(style, MBAudioMP3()));
	sampleRate = extractStruct(style, MBSampleRate(16000)).sampleRate;
	mbExtractAudioNative(file, format, sampleRate, cb, onError)
}

