import form/form;
import form/paragraphalignments;

export {
	ImageDecorationEditable ::= ImageArrowEditable, ImageCircleEditable, ImageRectangleEditable, ImageCropEditable, ImageBorderEditable, ImageLabelEditable, ImageLabel2Editable,
	ImageAltTextEditable, ImageHeaderEditable, ImageFooterEditable, ImageCopyrightEditable, ImageCaptionEditable, ImagePaddingEditable, ImageTextBoxEditable, ImageDimmerEditable;

		ImageArrowEditable  : (headPoint: DynamicBehaviour<Point>, tailPoint: DynamicBehaviour<Point>, color: DynamicBehaviour<int>, thickness: DynamicBehaviour<double>, label: Form);
		ImageCircleEditable : (centerPoint: DynamicBehaviour<Point>, radius: DynamicBehaviour<double>, bColor: DynamicBehaviour<int>, fColor: DynamicBehaviour<int>, inverted: DynamicBehaviour<bool>);
		ImageRectangleEditable : (
			leftTopPoint : DynamicBehaviour<Point>,
			rightBotPoint : DynamicBehaviour<Point>,
			bColor: DynamicBehaviour<int>,
			fColor: DynamicBehaviour<int>,
			inverted : DynamicBehaviour<bool>
		);
		ImageCropEditable(
			aspectRatio : DynamicBehaviour<Maybe<double>>,
			leftTopPoint: DynamicBehaviour<Point>,
			rightBottomPoint: DynamicBehaviour<Point>,
			adaptiveCrop: DynamicBehaviour<bool>,
			thumbnailCrop: DynamicBehaviour<bool>
		);
		ImageBorderEditable : (radius: DynamicBehaviour<double>, color: DynamicBehaviour<int>, thickness: DynamicBehaviour<double>);
		ImageLabelEditable  : (
			anchoringPoint: DynamicBehaviour<Point>,
			text: DynamicBehaviour<string>, 
			color: DynamicBehaviour<int>,
			fontsize: DynamicBehaviour<double>, 
			bold : DynamicBehaviour<bool>,
			italic : DynamicBehaviour<bool>,
			backColor : DynamicBehaviour<int>);
		ImageLabel2Editable  : (
			anchoringPoint: DynamicBehaviour<Point>,
			hAlign: DynamicBehaviour<double>,
			vAlign: DynamicBehaviour<double>,
			text: DynamicBehaviour<string>,
			color: DynamicBehaviour<int>,
			fontsize: DynamicBehaviour<double>,
			bold : DynamicBehaviour<bool>,
			rotation : DynamicBehaviour<double>,
			stableSize : DynamicBehaviour<bool>
		);
		ImageAltTextEditable  : (text: DynamicBehaviour<string>, bold : DynamicBehaviour<bool>, italic : DynamicBehaviour<bool>);
		ImageHeaderEditable  : (label : DynamicBehaviour<string>, fontsize : DynamicBehaviour<double>, color : DynamicBehaviour<int>);
		ImageFooterEditable  : (label : DynamicBehaviour<string>, fontsize : DynamicBehaviour<double>, color : DynamicBehaviour<int>);
		ImageCopyrightEditable : (copyright : DynamicBehaviour<string>, bold : DynamicBehaviour<bool>, italic : DynamicBehaviour<bool>, filename : DynamicBehaviour<string>, color : DynamicBehaviour<int>);
		ImageCaptionEditable  : (text : DynamicBehaviour<string>, fontsize : DynamicBehaviour<double>, color : DynamicBehaviour<int>, bold : DynamicBehaviour<bool>, italic : DynamicBehaviour<bool>, center : DynamicBehaviour<bool>);
		ImagePaddingEditable : (left : DynamicBehaviour<double>, top : DynamicBehaviour<double>, right : DynamicBehaviour<double>, bottom : DynamicBehaviour<double>);
		ImageTextBoxEditable : (
			topLeft : DynamicBehaviour<Point>,
			bottomRight : DynamicBehaviour<Point>,
			fontsize : DynamicBehaviour<double>,
			bold : DynamicBehaviour<bool>,
			italic : DynamicBehaviour<bool>,
			hAlign : DynamicBehaviour<CommonAlignment>,
			vAlign : DynamicBehaviour<VerticalAlignment>,
			text : DynamicBehaviour<string>,
			textColor : DynamicBehaviour<int>,
			backColor : DynamicBehaviour<int>,
			backOpacity : DynamicBehaviour<double>,
		);
		ImageDimmerType ::= ImageDimmerCircle, ImageDimmerRectangle;
			ImageDimmerCircle();
			ImageDimmerRectangle();
		ImageDimmerEditable : (
			type : DynamicBehaviour<ImageDimmerType>,
			leftTopPoint : DynamicBehaviour<Point>,
			rightBotPoint : DynamicBehaviour<Point>,
			dimmerColor : DynamicBehaviour<int>,
			borderColor : DynamicBehaviour<int>,
			dimmerOpacity : DynamicBehaviour<double>,
			borderOpacity : DynamicBehaviour<double>
		);

	ImageEditorCopyStage ::= NothingToCopy, ReadyToPaste;
		NothingToCopy();
		ReadyToPaste(index : int);

}

