import material/extra/calendar/calendar;

main() {
	manager = makeMaterialManager([]);

	//-----------------------------------------------------------
    //FIRST - We must transfer all our events to this format:
    //start date : Time,
    //end date : Time,
    //id : int,
    //event type : string
    //description (additional) : string
    //-----------------------------------------------------------
	allEvents = make([
        CalendarEvent(Time(2017, 01, 01, 01, 01, 01), Time(2017, 01, 01, 01, 01, 01), 1, "Training", "", "", makeTree()),
        CalendarEvent(Time(2017, 01, 02, 01, 01, 01), Time(2017, 01, 02, 01, 01, 01), 2, "Match", "", "", makeTree()),
        CalendarEvent(Time(2017, 01, 03, 01, 01, 01), Time(2017, 01, 03, 01, 01, 01), 3, "Holiday", "", "", makeTree()),
        CalendarEvent(Time(2017, 01, 04, 01, 01, 01), Time(2017, 01, 04, 01, 01, 01), 4, "Example", "", "Example of description", makeTree()),
        CalendarEvent(Time(2017, 10, 05, 10, 10, 10), Time(2017, 10, 05, 10, 10, 10), 5, "Training", "", "", makeTree()),
        CalendarEvent(Time(2017, 10, 05, 05, 05, 05), Time(2017, 10, 05, 05, 05, 05), 6, "Example", "", "Description", makeTree()),
        CalendarEvent(Time(2018, 01, 01, 01, 01, 01), Time(2018, 01, 01, 01, 01, 01), 7, "Match", "", "", makeTree()),
        CalendarEvent(Time(2016, 01, 01, 01, 01, 01), Time(2016, 01, 01, 01, 01, 01), 8, "Holiday", "", "", makeTree()),

        CalendarEvent(Time(2017, 12, 04, 20, 01, 01), Time(2018, 02, 10, 22, 01, 01), 9, "Training", "", "", makeTree()),
        CalendarEvent(Time(2017, 03, 02, 15, 01, 01), Time(2017, 03, 03, 18, 01, 01), 10, "Holiday", "", "", makeTree()),
        CalendarEvent(Time(2017, 03, 02, 12, 01, 01), Time(2017, 03, 02, 13, 01, 01), 11, "Example", "", "", makeTree()),
        CalendarEvent(Time(2018, 01, 10, 01, 01, 01), Time(2018, 01, 12, 01, 01, 01), 12, "Match", "", "Very important match", makeTree()),

        CalendarEvent(Time(2017, 05, 10, 01, 01, 01), Time(2017, 05, 13, 01, 01, 01), 15, "Match", "", "", makeTree()),
        CalendarEvent(Time(2017, 05, 11, 01, 01, 01), Time(2017, 05, 12, 01, 01, 01), 16, "Training", "", "", makeTree()),
        CalendarEvent(Time(2017, 05, 14, 01, 01, 01), Time(2017, 05, 16, 01, 01, 01), 17, "Example", "", "", makeTree()),
        
        CalendarEvent(Time(2017, 05, 18, 01, 01, 01), Time(2017, 05, 20, 01, 01, 01), 18, "Training", "", "", makeTree()),
        CalendarEvent(Time(2017, 05, 19, 01, 01, 01), Time(2017, 05, 20, 01, 01, 01), 19, "Example", "", "", makeTree()),
        CalendarEvent(Time(2017, 05, 20, 01, 01, 01), Time(2017, 05, 21, 02, 01, 01), 20, "Holiday", "", "", makeTree()),
        CalendarEvent(Time(2017, 05, 20, 04, 01, 01), Time(2017, 05, 22, 05, 01, 01), 21, "Match", "", "", makeTree()),
       
        CalendarEvent(Time(2017, 02, 20, 01, 01, 01), Time(2017, 02, 22, 01, 01, 01), 22, "Example", "", "", makeTree()),
        CalendarEvent(Time(2017, 02, 21, 01, 01, 01), Time(2017, 02, 23, 01, 01, 01), 23, "Holiday", "", "", makeTree()),
        CalendarEvent(Time(2017, 02, 22, 01, 01, 01), Time(2017, 02, 24, 01, 01, 01), 24, "Match", "", "", makeTree()),

        CalendarEvent(Time(2017, 09, 05, 01, 01, 01), Time(2017, 09, 08, 01, 01, 01), 25, "Example", "", "", makeTree()),
        CalendarEvent(Time(2017, 09, 05, 02, 01, 01), Time(2017, 09, 07, 01, 01, 01), 26, "Holiday", "", "", makeTree()),
        CalendarEvent(Time(2017, 09, 05, 03, 01, 01), Time(2017, 09, 06, 01, 01, 01), 27, "Match", "", "", makeTree()),
        CalendarEvent(Time(2017, 09, 05, 04, 01, 01), Time(2017, 09, 09, 01, 01, 01), 28, "Training", "", "", makeTree()),

        CalendarEvent(Time(2017, 09, 12, 01, 01, 01), Time(2017, 09, 13, 01, 01, 01), 29, "Example", "Example title", "", makeTree()),
        CalendarEvent(Time(2017, 09, 12, 02, 01, 01), Time(2017, 09, 13, 01, 01, 01), 30, "Holiday", "Holiday title", "", makeTree()),
        CalendarEvent(Time(2017, 09, 12, 03, 01, 01), Time(2017, 09, 13, 01, 01, 01), 31, "Match", "", "", makeTree()),
        CalendarEvent(Time(2017, 09, 12, 04, 01, 01), Time(2017, 09, 15, 01, 01, 01), 32, "Training", "", "", makeTree()),
        CalendarEvent(Time(2017, 09, 12, 05, 01, 01), Time(2017, 09, 15, 01, 01, 01), 33, "Example", "", "", makeTree()),

        CalendarEvent(Time(2018, 05, 05, 01, 01, 01), Time(2018, 05, 05, 01, 01, 01), 1, "Training", "Title", "", makeTree()),
        CalendarEvent(Time(2018, 05, 06, 01, 01, 01), Time(2018, 05, 06, 01, 01, 01), 1, "Training", "", "", makeTree()),
        CalendarEvent(Time(2018, 05, 07, 01, 01, 01), Time(2018, 05, 07, 01, 01, 01), 1, "Training", "Some really-really-really big Title", "", makeTree()),
    ]);

	//-----------------------------------------------------------
	//SECOND - we need description for all events types in this format:
	//event name : string
	//text Color : MColor 
	//background Color : MColor
	//icon : string (path to icon)
	//action for edit : (idEditedEvent : int) -> void,
    //action for add : (fullDate : Time) -> void,
    //action for delete: (idDeletedEvent : int) -> void,
    //additional actions : array of (icon : string, name : string, action : (id : int) -> void)
	//-----------------------------------------------------------
	emptyEditAction = \id -> println("place to editing action for event with id -" + i2s(id));

	simpleAddAction = \fullDate, eventName -> {
		newId = round(random() * 100.);
        newEvent = CalendarEvent(fullDate, fullDate, newId, eventName, "", "", makeTree());
        nextDistinct(allEvents, arrayPush(getValue(allEvents), newEvent))
	}

	simpleDeleteAction = \id -> {
		evIndex = either(findi(allEvents |> getValue, \p -> p.id == id), -1);
        if (evIndex != -1)
            nextDistinct(allEvents, removeIndex(getValue(allEvents), evIndex));
	}

	currentEventTypes = [
        CalendarEventDecription(
            "Training",
            MRed(900),
            MRed(600),
            "material/extra/calendar/icons_for_test/icon1.png",
            emptyEditAction,
            \fullDate -> simpleAddAction(fullDate, "Training"),
            simpleDeleteAction,
            []
        ),
        CalendarEventDecription(
            "Match",
            MAmber(700),
            MAmber(400),
            "material/extra/calendar/icons_for_test/icon2.png",
            emptyEditAction,
            \fullDate -> simpleAddAction(fullDate, "Match"),
            simpleDeleteAction,
            []
        ),
        CalendarEventDecription(
            "Holiday",
            MGreen(600),
            MGreen(300),
            "material/extra/calendar/icons_for_test/icon3.png",
            emptyEditAction,
            \fullDate -> simpleAddAction(fullDate, "Holiday"),
            simpleDeleteAction,
            [
                CalendarAdditionalAction("launch", "Launch smt", \id -> {println(id)}),
                CalendarAdditionalAction("lock", "Lock smt", \id -> {println(id)}),
            ]
        ),
        CalendarEventDecription(
            "Example",
            MBlue(600),
            MBlue(300),
            "material/extra/calendar/icons_for_test/icon4.png",
            emptyEditAction,
            \fullDate -> simpleAddAction(fullDate, "Example"),
            simpleDeleteAction,
            [CalendarAdditionalAction("launch", "Launch smt", \id -> {println(id)})]
        ),
    ];

    //-----------------------------------------------------------
    //THIRD - run our Calendar! Params:
    //events array : DynamicBehaviour<[CalendarEvent]>,
    //event types array : [CalendarEventDecription],
    //manager : MaterialManager,
    //min date : Date,
    //max date : Date,
    //month number : int
    //count of displayed events in one day : int (>0 or CalendarDefaultDisplayedEventsInOneDay),
    //show only one same type events by day : bool
    //colorize day headers : bool)
    //styles : [CalendarForEventsStyle] (pass empty array for default view)
	//-----------------------------------------------------------
    mrender(manager, true,
    	MGroup([
			TRectangle([Fill(newGreenColor), FillOpacity(1.0)], TFillXY()),
			MBorder(32.0, 16.0, 32.0, 16.0, 
				CalendarForEvents(allEvents, make(currentEventTypes), manager, Date(2012, 03, 20), Date(2022, 10, 10), 
                    10, 4, false, true, [ShowMonthViewSwitchMenu()])
			)
		])
	);
}