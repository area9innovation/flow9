import material/extra/react/material_react;

// Do not forget to switch to 'js/react_bundle_ant.js' in ReactContainer.hx for this testcase

main() {
	setRendererType("html");

	content =
		[
			MText("FLOW TOP TEXT", []),

			makeSimpleParagraph(),
			
			makeAntDatePicker(),

			makeAntTooltip(),

			makeAntButton(),

			makeAntInputNumber(),
			
			MText("FLOW BOTTOM TEXT", []),
		]
		|> (\arr -> map(arr, \el -> MBorder4(8., el)))
		|> MLines
		|> appendAntCss;
	
	mrender(makeMaterialManager([]), true, content);
}

makeSimpleParagraph() -> Material {
	element = "p";
	props = JsonObject([
		Pair("style", JsonObject([
			Pair("marginBottom", JsonString("auto"))
		])),
		Pair("children", JsonString("paragraph text"))
	]);

	MReact(element, props, makeTree(), []);
}

makeAntDatePicker() -> Material {
	MReact("antd.DatePicker", JsonObject([]), makeTree(), []);
}

makeAntTooltip() -> Material {
	MReact("antd.Tooltip", JsonObject([
		Pair("title", JsonString("prompt text")),
		Pair("children", JsonString("Tooltip will show on mouse enter."))
	]), makeTree(), []);
}

makeAntButton() -> Material {
	loading = make(JsonBool(true));
	state = makeTree1("loading", loading);
	timer(5000, \ -> nextDistinct(loading, JsonBool(false)));

	MReact("antd.Button", JsonObject([
		Pair("type", JsonString("primary")),
		Pair("style", JsonObject([
			Pair("marginLeft", JsonString("8px"))
		])),
		Pair("children", JsonString("Button text"))
	]), state, [ReactListener("onClick", \event -> {
		println("react onClick listener. screenX = " + getReactEventAttribute(event, "screenX"));
	})])
}

makeAntInputNumber() -> Material {
	MReact("antd.InputNumber", JsonObject([
		Pair("min", JsonDouble(1.)),
		Pair("max", JsonDouble(10.)),
		Pair("defaultValue", JsonDouble(3.)),
	]), makeTree(), [ReactListener("onChange", \event -> {
		println("onChange Listener");
	})])
}

// For testing purposes : css library is required to be used along with 'antd'
appendAntCss(content : Material) -> Material {
	isReady = make(false);

	link = createElement("link");
	setAttribute(link, "rel", "stylesheet", true);
	setAttribute(link, "href", "https://cdnjs.cloudflare.com/ajax/libs/antd/4.19.5/antd.compact.min.css", true);
	addEventListener(link, "load", \ -> nextDistinct(isReady, true));
	head = getElementBySelector("head");
	appendChild(head, link);

	MShow(isReady, content)
}