import material/material_manager;
import material/extra/docking_ui/internal/material_docking_styles;

export{
	MDockingState(
		// Material Manager
		manager : MaterialManager,
		// stores mouse position in th UI
		mouseXy : DynamicBehaviour<Point>,
		// stores panel's title
		title : DynamicBehaviour<[string]>,
		// stores panel's icon
		panelIcon : DynamicBehaviour<[string]>,
		// stores panel's content
		content : DynamicBehaviour<[[MDockingPanelItem]]>,
		// stores ui layout
		dock : DynamicBehaviour<[[int]]>,
		// stores group's name
		group : DynamicBehaviour<[[string]]>,
		// stores default panel's size
		size : DynamicBehaviour<[Tropic]>,
		// stores mobile panel's size
		mobileSize : DynamicBehaviour<[Tropic]>,
		// stores docked panel's size
		dockedSize : DynamicBehaviour<[Tropic]>,
		// stores panel's position
		positions : DynamicBehaviour<[DynamicBehaviour<Point>]>,
		// stores panel's enable state
		enabled : DynamicBehaviour<[DynamicBehaviour<bool>]>,
		// stores panel's expanded state
		expanded : DynamicBehaviour<[DynamicBehaviour<bool>]>,
		// stores panel's expanded state on a side
		sideExpanded : DynamicBehaviour<[DynamicBehaviour<bool>]>,
		// stores color scheme
		colorScheme : DynamicBehaviour<[int]>,
		// stores panel's style
		style : DynamicBehaviour<[[MDockingStyle]]>,
		// key name to store/load enabled/expanded/sideExpanded
		keyGroupName : string,
	);

	// Create an empty state
	makeMDockingEmptyState(manager : MaterialManager) -> MDockingState;
}

makeMDockingEmptyState(manager : MaterialManager) -> MDockingState {
	MDockingState(manager, make(zeroPoint), make([]), make([]), make([[]]), make([[]]), make([[]]), make([]), make([]), make([]), make([]), make([]), make([]), make([]), make([]), make([[]]), "");
}