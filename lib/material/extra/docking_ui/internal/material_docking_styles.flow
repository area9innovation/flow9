import material/material_color;
import material/material;

export {
	MDockingPanelItem ::= MDockingPanelToolbarItem, MDockingPanelButtonsItem, MDockingPanelCustomItem;
		// Use it for simple toolbars (defined as array of icon buttons). Toolbars are not resizable
		MDockingPanelToolbarItem(icon : string, style : [MDockingPanelItemStyle]);
		// Use it for standard panels (defined as list of buttons). Standard panel are resizable and collpsable
		MDockingPanelButtonsItem(icon : string, label : string, style : [MDockingPanelItemStyle]);
		// Use it for standard panels with custom content
		MDockingPanelCustomItem(item : Material, size : WidthHeight, style : [MDockingPanelItemStyle]);

	MDockingPanelItemStyle ::= MOnClick;

	MDockingStyle ::= MColor, MDockingRightCols, MDockingBottomtLines, MDockingDisabled, MDockingDontMove, MDockingDontResize, MDockingDontScroll, MDockingPanelWidth, MDockingDontShowSeparators,
		MDockingBackground, MDockingHandlesColor, MDockingMobileWatcher, MDockingMobileHorizontal, MDockingDisableButton, MDockingForceDarkTheme,
		MDockingForceLightTheme, MDockingFillSpace, MDockingDontCollapseColumn, MDockingDontCollapsePanel, MDockingScrollPosition, MDockingScrollInspectVisible, MDockingDropSize, MDockingDisablePanelExpander,
		MDockingMinTitleEllipsisWidth, MDockingCustomButtons;

		// Change dragging handles position if MDockingArea cols are aligned to the right
		MDockingRightCols();
		// Change dragging handles position if MDockingArea lines are aligned to the bottom
		MDockingBottomtLines();
		// Starts UI with the panel disabled
		MDockingDisabled();
		// Do not admit undocking and repositioning of a docked panel
		MDockingDontMove();
		// Do not admit resizing of docking areas if applied to MDockingArea (or mobile panels if applied to MDockingPanel)
		MDockingDontResize();
		// Do not admit scrolling
		MDockingDontScroll();
		// Do not show separators between buttons inside a panel
		MDockingDontShowSeparators();
		// Do not collapse/expand dockable columns
		MDockingDontCollapseColumn();
		// Do not collapse/expand dockable column if a panel contain this style
		MDockingDontCollapsePanel();
		// Change panel's width. By defaul it has a fixed value (except for MDockingPanelCustomItem)
		MDockingPanelWidth(width : double);
		// Watch if the panel is mobile or docked
		MDockingMobileWatcher(mobile : DynamicBehaviour<bool>);
		// Flip mobile panels into horizontal position (default is vertical)
		MDockingMobileHorizontal();
		// Add disable button to panel
		MDockingDisableButton();
		// Change background color
		MDockingBackground(lightColor : MColor, darkColor : MColor);
		// Change handle color
		MDockingHandlesColor(lightColor : MColor, darkColor : MColor);
		// Dont show the expander button inside a panel
		MDockingDisablePanelExpander();
		// Force dark theme
		MDockingForceDarkTheme();
		// Force light theme
		MDockingForceLightTheme();
		// When docked the panel will fill che column space
		MDockingFillSpace();
		// Change scrollbar pos
		MDockingScrollPosition(scrollPos : DynamicBehaviour<Point>);
		// Used to inspect where the view is
		MDockingScrollInspectVisible(scrollTopLeft : DynamicBehaviour<Point>, scrollWidthHeight : DynamicBehaviour<WidthHeight>);
		// DropSize thickness for MDockingArea
		MDockingDropSize(size : double);
		// DropSize thickness for MDockingArea
		MDockingMinTitleEllipsisWidth(width : double);
		// Set a custom buttons array in the panel header
		MDockingCustomButtons(buttons : [MDockingCustomButton]);

			// Custom button type
			MDockingCustomButton(icon : string, tooltip : string, onClick : () -> void, style : [MDockingCustomButtonStyle]);

			MDockingCustomButtonStyle ::= MColor; //, MDockingIconOFF, MDockingTooltipOFF, MDockingColorOFF;
				// MDockingIconOFF(icon : string);
				// MDockingTooltipOFF(tooltip : string);
				// MDockingColorOFF(color : MColor);
}
