import material/material_color;
import material/material;

export {
	MDockingPanelContent ::= MDPanelContent, MDPanelToolbar;
		// Use it for standard panels with custom content
		MDPanelContent(content : Material);
		// Dockable toolbar, when docked cols will flip vertical 
		// The toolbar size is not used here, and morevover toolbars are not resizable when mobile
		MDPanelToolbar(buttons : [MDPanelToolbarItem]);
			MDPanelToolbarItem(icon : string, style : [MDPanelItemStyle]);
				MDPanelItemStyle ::= MOnClick;



	MDockingPanelStyle ::= 
		MDPanelDontMove, MDPanelDontResize, MDPanelDontScroll, 
		MDPanelForceDarkTheme, MDPanelForceLightTheme, MDPanelBackground, MDPanelTopbarBackground, MDPanelTitleColor,
		MDPanelForceHorizontalWhenMobile, MDPanelHideSideExpander,
		MDPanelTitleEllipsis, MDPanelCustomButtons, MDPanelHideExpanderBtn, MDPanelShowCloseBtn,
		MDPanelIcon, MDPanelPosition, MDPanelEnabled, MDPanelExpanded, MDPanelSideExpanded, MDPanelAllowedGroups,
		MDPanelScrollPosition, MDPanelScrollInspectVisible,
		MDPanelHideToolbarSeparators;

		// Initial position for a mobile panel
		MDPanelPosition(position : DynamicBehaviour<Point>);
		// Enable or disable a panel by default
		MDPanelEnabled(enabled : DynamicBehaviour<bool>);
		// Expand or not a panel by default
		MDPanelExpanded(expanded : DynamicBehaviour<bool>);
		// Side-expand or not a panel by default
		MDPanelSideExpanded(sideExpanded : DynamicBehaviour<bool>);
		// Dock a panel only on allowed groups
		MDPanelAllowedGroups(allowedGroups : [string]);
		// Panel icon
		MDPanelIcon(icon : string);
		
		// Do not admit undocking and repositioning of a docked panel
		MDPanelDontMove();
		// Do not admit resizing of docking areas if applied to MDockingArea (or mobile panels if applied to MDockingPanel)
		MDPanelDontResize();
		// Do not admit scrolling inside a panel
		MDPanelDontScroll();

		// Force dark theme and it will not change
		MDPanelForceDarkTheme();
		// Force light theme and it will not change
		MDPanelForceLightTheme();

		// Change background color for panel
		MDPanelBackground(lightColor : MColor, darkColor : MColor);
		// Change background color for panel topbar
		MDPanelTopbarBackground(lightColor : MColor, darkColor : MColor);
		// Change color for title
		MDPanelTitleColor(lightColor : MColor, darkColor : MColor);

		// Do not collapse/expand dockable column if a panel contain this style
		MDPanelHideSideExpander();
		// Change scrollbar pos
		MDPanelScrollPosition(scrollPos : DynamicBehaviour<Point>);
		// Used to inspect where the view is
		MDPanelScrollInspectVisible(scrollTopLeft : DynamicBehaviour<Point>, scrollWidthHeight : DynamicBehaviour<WidthHeight>);
		// Flip mobile panels into horizontal position (default is vertical)
		MDPanelForceHorizontalWhenMobile();

		// Do not show separators between buttons inside a docking toolbar 
		MDPanelHideToolbarSeparators();
		// Ellipsis for top bar panel title
		MDPanelTitleEllipsis(width : double);
		// Add disable button to panel
		MDPanelShowCloseBtn();
		// Dont show the expander button inside a panel
		MDPanelHideExpanderBtn();

		// Set a custom buttons array in the panel top bar
		MDPanelCustomButtons(buttons : [MDPanelCustomButton]);
			// Custom button type
			MDPanelCustomButton(icon : string, tooltip : string, onClick : () -> void, style : [MDPanelCustomButtonStyle]);
				MDPanelCustomButtonStyle ::= MColor; //, MDPanelBtnIconOFF, MDPanelBtnTooltipOFF, MDPanelBtnColorOFF;
					// MDPanelBtnIconOFF(icon : string);
					// MDPanelBtnTooltipOFF(tooltip : string);
					// MDPanelBtnColorOFF(color : MColor);


	MDockingAreaStyle ::=
		MDAreaGroupName, MDockingRightCols, MDockingBottomLines, MDAreaBackground, MDAreaDontResize, MDAreaDontScroll, 
		MDAreaHideSideExpander, MDAreaExpandLastPanel;
			// Many docking areas could have the same group name, this is required for panels with MDPanelAllowedGroups
			MDAreaGroupName(groupName : string);
			// Change dragging handles position if MDockingArea cols are aligned to the right
			MDockingRightCols();
			// Change dragging handles position if MDockingArea lines are aligned to the bottom
			MDockingBottomLines();
			// Do not resize a docking area
			MDAreaDontResize();
			// Do not admit scrolling
			MDAreaDontScroll();
			// Do not collapse/expand dockable columns
			MDAreaHideSideExpander();
			// Change background color for a docking area
			MDAreaBackground(lightColor : MColor, darkColor : MColor); // act on area bg
			// In a column takes space from the last panel (TFillY on the bottom)
			// Default is from first panel (takes space from the top)
			MDAreaExpandLastPanel();


	MDockingStyle ::= 
		MDockingPanelStyle, MDockingAreaStyle,			
		MDockingDropSize, MDockingMobileOffset, MDockingEnableLoadAndStoreCache, MDEditorBackground;

		// DropSize thickness for MDockingAreas
		MDockingDropSize(size : double);
		// Offset position for default mobile panels
		MDockingMobileOffset(offsetPosition : Point);		
		// Backgroud color for the working area in the editor
		MDEditorBackground(lightColor : MColor, darkColor : MColor); // act on area bg
		// Enable browser cache usage
		MDockingEnableLoadAndStoreCache(keyGroupName : string, cacheEnabled : bool);
		
}
