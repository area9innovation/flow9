import material/material;

export {
	/*
	// Handle these shortcuts
	// Example:
	    mainUI = MKeyHandler([
			Pair("left", \ -> movePiece(-1, 0)),
			Pair("right", \ -> movePiece(1, 0)),
			Pair("down", \ -> movePiece(0, 1)),
			Pair("up", \ -> rotatePiece()),
			Pair(" ", \ -> dropPiece())
		], ui);
	*/
	MKeyHandler(keys : [Pair<string, () -> void>], m : Material) -> Material;
}

MKeyHandler(keys : [Pair<string, () -> void>], m : Material) -> Material {
	keyFilter = makeTKey(\key : KeyEvent -> {
		exists(keys, \k -> {
			matchShortcut(key, parseShortcut(k.first))
		})
	});

    keyHandler = \key : KeyEvent -> {
		iter(keys, \k -> {
			if (matchShortcut(key, parseShortcut(k.first))) {
				k.second()
			}
		})
	};

    MConstruct(
		[makeSubscribe(keyFilter.pressed, keyHandler)],
		MInteractive(
			[keyFilter],
			m
		)
	);
}

