import material/iscript/material_focus_tree;
export {
	generateIScriptFromCommands(manager : MaterialManager, input : string) -> void;
}

IScriptGeneratorCommands ::= ISGFindFocus, ISGSetFocusContent, ISGPressButton, ISGPressButtonPath, ISGCheckBehaviour;

ISGFindFocus(name : string);
ISGSetFocusContent(focusName : string, content : string);
ISGPressButton(name : string);
ISGPressButtonPath(path : [string]);
ISGCheckBehaviour(focusName : string, behaviourName : string, content : string);

generateIScriptFromCommands(manager : MaterialManager, input : string) -> void {
	commands : [IScriptGeneratorCommands] = deserialize3(input);
	println(commands);

	script = generateIScript(manager, commands);
	next(manager.iscript.script, IScript(0., pairs2tree(mapi(script, \i, s -> Pair(i2d(i), [s])))));
}

generateIScript(manager : MaterialManager, commands : [IScriptGeneratorCommands]) -> [IScriptRecord] {
	mapConcat(commands, \command -> {
		switch(command) {
			ISGFindFocus(id): {
				generateSearchCheckIScriptBehaviour(
					IScriptComponentDescriptor("", getIScriptIdForOnePart(id)),
					"value",
					"false"
				)
			}
			ISGSetFocusContent(focusName, content): {
				descriptor = IScriptComponentDescriptor("MTextInput", getIScriptIdForOnePart(focusName));
				concat3(
					generateMouseClickOnFocusSearch(getIScriptIdForOnePart(focusName)),
					generateSearchKeyboardEventsForText(descriptor, content),
					generateSearchCheckIScriptBehaviour(descriptor, "content", content)
				)
			}
			ISGPressButton(name): {
				generateMouseClickOnFocusSearch(getIScriptIdForOnePart(name))
			}
			ISGPressButtonPath(path): {
				generateMouseClickOnFocusSearch(array2list(map(path, \p -> IScriptId(p))))
			}
			ISGCheckBehaviour(focusName, behaviourName, content): {
				generateSearchCheckIScriptBehaviour(
					IScriptComponentDescriptor("", getIScriptIdForOnePart(focusName)),
					behaviourName,
					content
				)
			}
		}
	})
}

getIScriptIdForOnePart(id : string) -> List<IScriptId> {
	Cons(IScriptId(id), EmptyList())
}

generateSearchCheckIScriptBehaviour(descriptor : IScriptComponentDescriptor, behaviourName : string, content : string) -> [IScriptSearchBehaviourRecord] {
	[IScriptSearchBehaviourRecord(
		IScriptBehaviourDescriptor(
			descriptor,
			behaviourName
		),
		content
	)]
}

generateSearchKeyboardEventsForText(descriptor : IScriptComponentDescriptor, content : string) -> [IScriptSearchBehaviourRecord] {
	map(s2a(content), \c -> {
		IScriptSearchBehaviourRecord(
			IScriptBehaviourDescriptor(
				descriptor,
				"keydown"
			),
			KeyEventRecord(fromCharCode(c), false, false, false, false, 0)
		)
	})
}

generateMouseClickOnFocusSearch(id : List<IScriptId>) -> [IScriptSearchBehaviourRecord] {
	descriptor = IScriptComponentDescriptor("canvas", id);

	[
		IScriptSearchBehaviourRecord(
			IScriptBehaviourDescriptor(
				descriptor,
				"mousedown"
			),
			zeroPoint
		),
		IScriptSearchBehaviourRecord(
			IScriptBehaviourDescriptor(
				descriptor,
				"mouseup"
			),
			zeroPoint
		),
	]
}