
// Hightlight relevant text.
// TODO: Hightlight gets lost on clip update.
import material/material;

export {
	MMark(text : Transform<string>, m : Material) -> Material;
}

MMark(text : Transform<string>, m : Material) -> Material {
	if (js) {
		if (text == const("")) m
		else {
			MGetManager(\manager -> {
				// TODO: Use different id?
				id = i2s(makeTagId(manager.manager));
				querySelectorField = "markText" + "-" + id;
				MConstruct(
					[
						\-> {
							// DOM not ready on first call: Can't find element.
							deferUntilRender(\-> hostCall("performMark", [fgetValue(text), querySelectorField])|>ignore);
							\-> hostCall("performUnMark", [querySelectorField])|>ignore
						},
						makeSubscribe2(text, \t -> {
							hostCall("performMark", [t, querySelectorField])|>ignore;
						}),
					],
					MAccess([ClassName(querySelectorField)], m)
				)
			})
		}
	} else {
		devtrace("MMark supported only in js.");
		m
	}
}