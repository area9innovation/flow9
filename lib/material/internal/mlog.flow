import math/math;
import net/url_parameter;

export {
	materialLog(s : string, level : MaterialLogLevel) -> void;
		MaterialLogLevel ::= MaterialError, MaterialWarning, MaterialInfo, MaterialDebug;
			MaterialError();
			MaterialWarning();
			MaterialInfo();
			MaterialDebug();

	materialLogFn(fn : () -> ?, level : MaterialLogLevel, defFn : () -> ?) -> ?;
	isMaterialLogLevelEnabled(level : MaterialLogLevel) -> bool;
}

debugMaterialLevel = s2i(getUrlParameterDef("debug_material", "0"));
debugMaterialEnabled = debugMaterialLevel > 0;

materialLog(s : string, level : MaterialLogLevel) -> void {
	materialLogFn(\ -> println(s), level, nop)
}

materialLogFn(fn : () -> ?, level : MaterialLogLevel, defFn : () -> ?) -> ? {
	if (debugMaterialEnabled) {
		if (isMaterialLogLevelEnabled(level))
			fn()
		else
			defFn();
	} else {
		defFn();
	}
}

MaterialLogLevel2i(level : MaterialLogLevel) -> int {
	switch (level) {
		MaterialError(): 1;
		MaterialWarning(): 2;
		MaterialInfo(): 3;
		MaterialDebug(): 4;
	}
}

isMaterialLogLevelEnabled(level : MaterialLogLevel) -> bool {
	MaterialLogLevel2i(level) <= debugMaterialLevel
}