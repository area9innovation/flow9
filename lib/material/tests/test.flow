import material/material_ui;

main () {
	close = make(false);
	manager = makeMaterialManager([]);

	content = make("");
	label = "Search";

	autoComplete = MSelect(content, \con -> MTextButton(if (con == "") label else con, \ -> {
		close2 = make(false);
		foc = make(true);

		ShowMDialog(manager, close2, [MDialogFullScreen(), MDialogCustomFrame(100., 100., 100., 100., TEmpty())],
			MConstruct(
				[\ -> subscribe2(foc, \f ->  timer(15, \ -> if (!getValue(foc)) next(close2, true)))],
				MAutoComplete(content, ["#include dictionary/grapes.txt"], [MLabel("Search"), MWidth(400.), MMaxHeight(200.), MShowLeftButton(true)], [TTextInputFocus(foc)])
			)
		);
	}, [], [MOnLongClick(\ -> println("long click")), MOnLongTouch(\ -> println("long touch")), MOnClick(\ -> println("click"))]));

	fn = \ ->
			ShowMDialog(
				manager,
				close,
				[MDialogFullScreen()],
				MBaselineCols([
					TRectangle([Fill(yellow)], TFixed(200., 200.)),
					MTextButton("CLOSE", \ -> next(close, !getValue(close)), [], []),
					autoComplete
				])
			);

	MTextButton(
		"show dialog",
		fn,
		[],
		[]
	)
	|> (\f ->
		MBaselineCols([
			f,
			autoComplete,
			MTextInput(make(""), [], [MInputFilter(\t, foc -> {if (t == "a") fn(); t;})])
		])
	)
	|> (\f ->
		MAppStructure(
			[
				MContent(f),
			],
			[]
		)
	)
	|> (\f -> mrender(manager, true, f))
}

