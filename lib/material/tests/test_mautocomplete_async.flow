import material/material2tropic;

main() {
	manager = makeMaterialManager([]);
	setRendererType("html");

	text = make("");
	fpprint("~~text")(text);

	selected = make(-1);
	fpprint("selected")(selected);

	content =
		MAutoComplete(text, [], [
			MAutoCompleteStartSearch(0, 300),
			// MAutoCompleteShowMoreButton(),
			MAutoCompleteAsync(fakeRequest),

			MCompletionFn(\com, isSelected, setWordFn ->
				MGetFocusGroup(\parent -> {
					wrapSetWordFn = \sm -> {
						switch(sm : SentenceMatch) {
							SentenceHit(__, __, __, __) : {
								println("on SentenceHit");
								// nextDistinct(selected, string2idx(getValue(text)));
								nextDistinct(selected, -2);
								setWordFn(sm);
							}
							SentenceHitExtended(__, __, __, __, idx) : {
								// preventSelectedChange := true;
								setWordFn(sm);
								// preventSelectedChange := false;
								nextDistinct(selected, idx);
							};
						}
					};
					defaultCompletionFn(manager, parent, []).fn(com, isSelected, wrapSetWordFn)
				})
			)
		], []);

	mrender(manager, true, content) |> ignore;
}

counter = ref 0;
fakeRequest(txt : string, onResponse : ([string]) -> void) -> void {
	if (txt == "") onResponse([])
	else {
		println("REQUEST based on '" + txt + "'");
		timer(2000, \ -> {
			itms = generate(^counter, ^counter + 10, \i -> "text " + i2s(i));
			counter := ^counter + 10;
			println("RESPONSE for '" + txt + "'");
			onResponse(itms);
		})
	}
}
