import material/material2tropic;

main() {
	manager = makeMaterialManager([]);

	def = ["test text 1", "test text 2", "test text 3"];

	dynamicSteps = make(def);

	add = \ -> dynArrayPush(dynamicSteps, "new text");
	del = \ -> nextDistinct(dynamicSteps, take(getValue(dynamicSteps), length(getValue(dynamicSteps)) - 1));
	reset = \ -> nextDistinct(dynamicSteps, def);

	rows = make([
		// const(["static text"]),
		// const(["static text"]),
		// const(["static text"]),
		const(["static text"]),
		dynamicSteps,
		const(["static text"]),
		const(["static text"]),
		const(["static text"]),
		const(["static text"])
	]);
	addRow = \ -> dynArrayPush(rows, make([]));

	steps2material = \txt ->
		MBorder4(4.,
			// MText(txt, [MDataRow()])
			MAvailable(
				MTextClickable(txt, nop, [MFullWidth()], []),
				MFixedX(112.)
			)
		);

	row2material = \row -> [
		MText("1", []),
		MSelect(row, \txts ->
			MCols(map(txts, steps2material))
		),
		MText("1", [])
	];


	content : Material =
		MDynamicDataTable(
			[
				MColumn("col1", "", 0, []),
				MColumn("col2", "", 0, [MWidthByContent()]),
				// MColumn("col2", "", 0, []),
				MColumn("col3", "", 0, []),
			],
			fmap(rows, row2material),
			[
				// MCondensed(true),
				MPaginationAutoScaling(),
				// MInCard(),
				// MFullWidth(),
				// MPagination(make(0), [5]),
				// MCheckBoxSelection([]),
				// MRowHeight(20.)
				// TScrollEnabled(const(true))
			]
		)
		|> (\m -> MLines([
				{b : Material = MBorder(16., 16., 16., 16., m); b;},
				MTextButton("ADD", addRow, [], []),
				MTextButton("DELETE LAST", del, [], []),
				{b : Material = MTextButton("RESET", reset, [], []); b},
			]));
	
	mrender(manager, true, content);
}