import material/material;
import material/material_manager;
import material/material_dialog;

main() {
    manager = makeMaterialManager([]);
    setRendererType("html");

    autoCompleteFocus = ref None();

	autoComplete =
		MAutoComplete(make(""), generate(0, 30, \i -> "content" + i2s(i)), [
			MMaxResults(3),
			MWidth(300.),
			MSuggestionsSameZorderMode(),
			MSuggestionsDynamicListMode()
		], [
			MGetFocus(\foc -> autoCompleteFocus := Some(foc))
		])
		|> (\m -> MBorder4(16., m))
		|> (\m -> MConstruct([\ -> \ -> autoCompleteFocus := None()], m));

	showDialog = \ -> {
		close = make(false);
		downInsideFocusUns = initUnsM();
		ShowMDialog(manager, close, [
			MDialogUseFrame(),
			MDialogActions([
				MTextButton("CLOSE", \ -> nextDistinct(close, true), [], [
					MOnMouseDown(\__, i -> if (i) maybeApply(^autoCompleteFocus, \f -> setDownInsideFocusTimer(manager, f, downInsideFocusUns)))
				])
			])
		], autoComplete);
	}

	content = MTextButton("SHOW DIALOG", showDialog, [], []);
    mrender(manager, true, content);
}