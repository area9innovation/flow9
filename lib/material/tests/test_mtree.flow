import material/material2tropic;

start = ref timestamp();

main() {

	manager = makeMaterialManager([]);

	startTime = timestamp();
	hardToRender = false;

	cont2material = \s ->
		MConstruct([
			\ -> {
				if (hardToRender) generate(0, intMax / 1024, \i -> i + 1) |> ignore;
				deferUntilNextFrameRendered(\ -> println("CONS " + s + ",  " + d2s(timestamp() - ^start) + " ms "));
				\ -> println("DISP " + s)
			}],
			MText(s + " content", [])
		);

	selection = make(makeSet());
	itemsLength = make(0);

	fpprint("selection")(selection);
	fpprint("itemsLength")(itemsLength);

	items =
		make(
			generate(0, 2000, \i ->
				MTreeNode(i2s(i), cont2material, const(generate(0, 3, \j -> MTreeNode(i2s(j), cont2material, const([]), []))), [MExpanded(make(i % 3 == 0))])
			)
		);

	tabContent =
		MTree(
			const([MTreeNode("ROOT", \s -> MText(s, []), items, [MExpanded(make(true))])]),
			// items,
			[
				// MTreeOrder(make([])),
				// MTreeSelection(selection),
				// MTreeLazyLoad(20, None()),
				// MTreeOrder(make([])),
				MItemsLength(itemsLength),
				MTreeLazyScrollMode(fgreateri(flength(items), const(400)))
			]
		)
		|> (\m -> MConstruct([\ -> {
			deferUntilNextFrameRendered(\ -> println("CONS TREE,  " + d2s(timestamp() - ^start) + " ms "));
			\ -> println("DISP TREE")
		}], m));

	selectedTab = make(0);
	content = MTabs(
		[
			MTab(MText("first Tab", []), const("first tab"), []),
			MTab(tabContent, const("second tab"), []),
		],
		selectedTab,
		[]
	)
	|> (\m -> MConstruct([
			makeSubscribe2(selectedTab, \__ -> start := timestamp())
		], m));

	mrender(manager, true, content);

	println("time : " + d2s(timestamp() - startTime));
}