import material/material2tropic;
import material/material_dialog;

main() {
	manager = makeMaterialManager([]);
	setRendererType("html");

	def = [
		"afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf",
		"afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf",
		"afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf",
		"afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf",
		"afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf"
	];
	data = make(def);

	add = \ -> dynArrayPush(data, "new text");
	del = \ -> nextDistinct(data, take(getValue(data), length(getValue(data)) - 1));
	reset = \ -> nextDistinct(data, def);
	elText = "veeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeery looooooong text";
	el = MTooltip(MEllipsisText(elText, []), MText("TOOLTIP", []), []);

	col4width = make(100);
	
	enabled = make(true);
	increaseCol4Width = \ -> {
		if (getValue(enabled)) {
			println("HIDE");
		} else {
			println("SHOW");
		}
		nextDistinct(enabled, !getValue(enabled));
	};


	dContent =
		MDynamicDataTable(
			[
				MColumn("col1", "", 100, [
					MAutoSort(),
					// MColumnCustomTitle(\sel -> MParagraph(toString(sel) + " Some long header title", []))
				]),
				MColumn("col2", "", 100, []),
				MColumn("col3", "", 100, []),
				MColumnDynamic(const("col4"), const(""), col4width, [MEnabled(enabled)]),

				MColumn("col5", "", 100, [
					// MWidthByContentLimited(const(50.), make(-1.))
				]),
			],
			fselect(data, FLift(\d -> mapi(d, \i, v -> [
				MText("line " + i2s(i /*floor(100. * random())*/), []),
				MText(v, []),
				MText(v, []),
				MText("some text", []),
				MText(strRepeat("ab", floor(random() * 20.) + 1), [])
			]))),
			// const([[MText("1", [])]]),
			[
				MDataTableInnerScroll(MGluedFirstColumnMode([MGluedColumns(2)]), []),
				// MDataTableInnerScroll(MLiftedFirstColumnMode(), []),
				// MDataTableInnerScroll(MStandardMode(), []),
				MPaginationAutoScaling(),
				// MHideAutoPaginationFooter(),
				// MPagination(make(0), [5, 20]),
				// MCondensed(true),
				// MWidthByContent(),
				// MInCard(),
				// MFullWidth(),

				// MExpandRow(const(true)),
				MCheckBoxSelection([]),
				MSingleSelection(make(1)),
				// MRowHeight(100.),
				// MNoCrop(),
				// MShowRowNumbers(),
				// // MListSelectionEnabled(const([const(false), const(true), const(false)]))
				// MListSelectionEnabled(fselect(data, FLift(\d -> mapi(d, \i, __ -> const(i % 2 == 0)))))
				// MNoSeparators(),
			]
		)
		// |> (\m -> MScroll(m, TFillXY(), []))
		// |> (\m -> MLines2(MText("text", []), m))
		;

	content =
		MLines([
			dContent,
			MTextButton("ADD", add, [], []),
			MTextButton("DELETE LAST", del, [], []),
			MTextButton("INCREASE COL 4 WIDTH", increaseCol4Width, [], []),
		]);
	
	mrender(manager, true, content);
}