import material/material;
import material/material2tropic;


main() {

	m1 = MTabs(
		concatA([
			generate(0, 2, \i -> {
				content =
					MGroup2(
						TRectangle([Fill(gray), FillOpacity(0.25)], TFillXY()),
						MText("Content of text item " + i2s(i), [MDisplay1()]) |> MCenter
					);

				MTab(content, const("Item short one two " + i2s(i)), [])
			}),
			generate(3, 5, \i -> {
				content =
					MGroup2(
						TRectangle([Fill(gray), FillOpacity(0.25)], TFillXY()),
						MText("Content of long caption text item " + i2s(i), [MDisplay1()]) |> MCenter
					);

				MTab(content, const("continuational interpolation definition Item very long captioned long long " + i2s(i)), [])
			})
		]),
		make(0),
		[
			MTabsIndicatorColor(MRed(500)), // indicator color
			MBlue(500), //bar color
			FillOpacity(0.25), // bar opacity
			MItemsColor(MBlack()), //items text color
			MTabsBackgroundStyle([MFill(MGreen(100)) /* color of items */, FillOpacity(0.5) /* opacity of items */])
		]
	);

	m2 = MTabs(
		generate(3, 5, \i -> {
				content =
					MGroup2(
						TRectangle([Fill(gray), FillOpacity(0.25)], TFillXY()),
						MText("Content of icon item " + i2s(i), [MDisplay1()]) |> MCenter
					);

				MTab(content, const(""), [MTabIcon(MIcon("cloud_upload", []))])
		}),
		make(0),
		[MItemsColor(MBlack())]
	);

	m3 = MTabs(concatA([
			generate(3, 5, \i -> {
				content =
					MGroup2(
						TRectangle([Fill(gray), FillOpacity(0.25)], TFillXY()),
						MText("Content of long caption + icon item " + i2s(i), [MDisplay1()]) |> MCenter
					);

				MTab(content, const("Item very long caption with definitional substitution of experimental  + icon " + i2s(i)), [MTabIcon(MIcon("add", []))])
			}),
			generate(3, 5, \i -> {
				content =
					MConstruct([\ -> {println(i); nop}], MGroup2(
						TRectangle([Fill(gray), FillOpacity(0.25)], TFillXY()),
						MText("Content of text + icon item " + i2s(i), [MDisplay1()]) |> MCenter
					));

				MTab(content, const("Drag for fun and profit " + i2s(i)), [MTabIcon(MIcon("chevron_end", []))])
			})
		]),
		make(0),
		[MItemsColor(MBlack()), MPreRender()]
	);

	m = MLines([m1,m2,m3]);
	mrender(makeMaterialManager([]), false, m);
}