import material/material2tropic;

main() {
	manager = makeMaterialManager([]);
	setRendererType("html");

	// def = [
	// 	"afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf",
	// 	"afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf",
	// 	"afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf",
	// 	"afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf",
	// 	"afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf", "asdfdasfdsfasd", "afsdfdsf", "asdfasdfasdf"
	// ];
	// data = make(def);

	// content =
	// 	MDynamicDataTable(
	// 		[
	// 			MColumn("col1", "", 100, [
	// 				// MAutoSort(),
	// 				// MAutoSortCaseInsensitive(),
	// 				MSortByValue(\v : [Material] -> v[0]),
	// 			]),
	// 			MColumn("col2", "", 100, []),
	// 		],
	// 		fselect(data, FLift(\d -> mapi(d, \i, v -> [
	// 			MText(getRandomString(4), []),
	// 			MText("line " + i2s(i), []),
	// 		]))),
	// 		[
	// 			MPaginationAutoScaling(),
	// 		]
	// 	);

	def = generate(0, 30000, \i -> Pair(30000 - i, getRandomString(4)));
	data = make(def);

	content =
		MLightweightDataTable(
			[
				MColumn("col1", "", 100, [
					// MAutoSort(),
					// MAutoSortByRowData(),
					// MSortByValue(\v : Pair -> v.second),
					MAutoSortCaseInsensitive(),
				]),
				MColumn("col2", "", 100, [
					MSortByValue(\v : Pair -> v.first)
				]),
			],
			data,
			\v -> {
				generate(0, 10000, \i -> sqrt(i2d(i)));
				[
					MText(v.second, []),
					MText("line " + i2s(v.first), []),
				]},
			[
				MPaginationAutoScaling(),
			]
		);

	// def = generate(0, 30, \__ -> getRandomString(4));
	// data = make(def);

	// content =
	// 	MLightweightDataTable(
	// 		[
	// 			MColumn("col1", "", 100, [
	// 				// MAutoSort(),
	// 				MAutoSortByRowData(),
	// 				MAutoSortCaseInsensitive(),
	// 			]),
	// 			MColumn("col2", "", 100, []),
	// 		],
	// 		data,
	// 		\v -> [
	// 			MText(v, []),
	// 			MText("line ", []),
	// 		],
	// 		[
	// 			MPaginationAutoScaling(),
	// 		]
	// 	);

	mrender(manager, true, content);
}

getRandomString(n : int) -> string {
	concatStrings(generate(0, n, \__ -> getRandomChar()));
}

getRandomChar() -> string {
	charCode = floor(random() * (90. - 65. + 1.) + 65.) + (if (random() > 0.5 ) 32 else 0);
	fromCharCode(charCode)
}