import material/material2tropic;

main() {
	manager = makeMaterialManager([]);
	setRendererType("html");

	def = generate(0, 30, \i -> Pair(30000 - i, i));
	data = make(def);
	fpprint("data")(data);

	table1 =
		MLightweightDataTable(
			[
				MColumn("col1", "", 100, [
					MAutoSort(),
				]),
				MColumn("col2", "", 100, []),
			],
			data,
			\v -> {
				[
					MText("line " + i2s(v.first), []),
					MText(i2s(v.second), []),
				]
			},
			[
				// MPagination(make(0), [10]),
				MPaginationAutoScaling(),
				// MCondensed(true),
				// MListSelection(const(true), true, true, make([])),
				// MSortingDefault(make(MSortingParam(-1, true))),
				// MCheckBoxSelection([MCheckboxSelectAllPages(const(true))]),
				MFullWidth(),
				// MHeaderActions(buildTableHeaderActionsViewEx(), [])
			]
		);

	table2 =
		MLightweightDataTable(
			[
				MColumn("col1", "", 100, [
					MAutoSort(),
				]),
				MColumn("col2", "", 100, []),
			],
			data,
			\v -> {
				[
					MText("line " + i2s(v.first), []),
					MText(i2s(v.second), []),
				]
			},
			[
				// MPagination(make(0), [10]),
				MPaginationAutoScaling(),
				// MCondensed(true),
				// MSortingDefault(make(MSortingParam(2, true))),
				MFullWidth(),
				// MListSelection(const(true), true, true, make([])),
				// MCheckBoxSelection([MCheckboxSelectAllPages(const(true))]),
				// MHeaderActions(buildTableHeaderActionsViewEx(), [])
			]
		);

	content = MCols2(
		// table1,
		busyMaterial(make(true), table1),
		table2
	);

	mrender(manager, true, content);
}

busyMaterial(isBusyT : Transform<bool>, m : Material) -> Material {
	MAttachToFirst(
		m,
		MShow(isBusyT,
			MGroup2(
				TRectangle([MFill(MGrey(50)), FillOpacity(0.5),], TFillXY()),
				MCenter(MProgressCircle([]))
			)
		)
	);
}

buildTableHeaderActionsViewEx(
	// manager : MaterialManager,
	// titleT : Transform<string>,
	// titleFontM : Maybe<MFontStyle>,
	// actions : [Material]
) -> Material {

	MBorderA(24.0, 8., 24.0, 0.0, MBaselineColsA(
		concat(
			[
				MText("title", [MTitle()]) |> MBorderBottom(16.0),
				MFillX()
			],
			[MIcon("android", [])]
		)
	))
}