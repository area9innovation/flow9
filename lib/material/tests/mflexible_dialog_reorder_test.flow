import material/material_ui;

main() {
	setWindowTitle("MFlexible");

	mManager = makeMaterialManager([]);

	close = make(false);
	selectedB = make(0);

	thumbnailSize = WidthHeight(200.0, 154.0);
	boxWidth = (thumbnailSize.width + 5.0) * i2d(4);
	minBox = TFixed(boxWidth, (thumbnailSize.height + 40.) * i2d(4));

	textinputB = make("");
	inputText = MTextInput(textinputB, [MWidth(boxWidth)], []);

	makeRectangle = \i : int, textB : DynamicBehaviour<string> -> {
		MComponent(
			[
				MOnClick(\ -> {
					nextDistinct(selectedB, i);
					nextDistinct(textinputB, getValue(textB))
				})
			],
			\__ -> {
				MLines2(
					TRectangle([Fill(floor(random() * i2d(0xffffff)))], TFixed(thumbnailSize.width, thumbnailSize.height)),
					MSelect(textB, \text-> MText(text, []))
				)
			}
		)
	}

	flexibleGrid = MFlexibleGrid(const(generate(0, 25, \i -> {
		textB = make("Title " + i2s(i));
		MConstruct(
			[
				makeSubscribe2(textinputB, \ti -> if (getValue(selectedB) == i) nextDistinct(textB, ti))
			],
			makeRectangle(i, textB)
		)
	}
	)), [MAnimationEnabled(true)]);

	deferUntilRender(\-> {
			ShowMDialog(mManager, close, [
				MDialogTitle("MFlexibleGrid Order"),
				MDialogUseFrame(),
				MDialogResizableWithInitialSize(minBox),
			],
			MLines([
				MText("Size element affects grid order. E.g., give long name to second element, it will be moved to the beginning.", []),
				inputText,
				MScroll(
					flexibleGrid,
					TFillXY(),
					[]
				)
			])
		)
	})
}
