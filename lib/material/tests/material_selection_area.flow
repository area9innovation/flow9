import material/material;
import material/material_manager;
import material/material2tropic;

main() {
	manager = makeMaterialManager([]);
	group = MLines([
	    {
	    	pressed = make(false);
	    	isDragging = make(false);
	    	moved = make(false);
	    	xy = make(manager.manager.xy());
	    	startXy = make(zeroPoint);
	    	endXy = make(zeroPoint);
	    	MInteractive([
	    		TMouseDown(pressed),
	    		TMouseXY(xy)],
	    	MConstruct([
	    		makeSubscribe(pressed, \p -> {
		    			if (p) {
		    				println("pressed");
		    				next(startXy, manager.manager.xy());
		    				next(moved, false);
		    				next(isDragging, true);
		    				println(getValue(isDragging));

		    			} else {
		    				if (getValue(isDragging)) {
		    					next(moved, false);
			    				next(isDragging, false);
			    				println("unpressed");
		    					}
		    				}
		    			}),
	    		makeSubscribe(xy, \cxy -> {
		    			if (getValue(isDragging)) {
		    				println("is dragging");
		    				next(endXy, manager.manager.xy());
		    					if(!getValue(moved)) {
		    						next(moved, true);
		    					}
		    				}
	    				}),
	    		],
		    	MGroup([
		    		TRectangle([Fill(orange)], TSized(const(WidthHeight(400.0, 400.0)))),
			    	MLines([
			    		MSelect(xy, \p -> MText(d2s(p.x) + ", " + d2s(p.y), [MHeadline()])),
			    		MIf(pressed, MText("pressed",[MHeadline()]), MText("unpressed",[MHeadline()]))
			   		]),
			   		MIf(
			   			moved,
			   			MSelect(endXy,	\exy -> {
			   				println(getValue(startXy));
			   				println(exy);
			   				sx = getValue(startXy).x;
			   				sy = getValue(startXy).y;
			   				ex = exy.x;
			   				ey = exy.y;
			   				TGraphics([MoveTo(sx, sy), LineTo(ex, sy), LineTo(ex, ey), LineTo(sx, ey), LineTo(sx, sy)], [Fill(blue)])
			   			}),
			   			TEmpty()
			   		)
			   	])
	    	)
	    )},
    ]);
    mrender(manager, true, group);
}
