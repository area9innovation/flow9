import material/material2tropic;
import material/material_dialog;

main() {
	setRendererType("html");
	manager = makeMaterialManager([]);

	content =
		MDownloadCSVButton(manager, [], println) |> MBorderLeft(100.);

	mrender(manager, true, content);
}

MDownloadCSVButton(manager : MaterialManager, state: [MButtonState], handler : (sep : string) -> void) -> Material {
	button = MTextButton(_("DOWNLOAD CSV (,)"), \-> handler(","), [MButtonPaddings(12.0, 12.0, 12.0, 12.0)], state);
	choices = [
		Pair(_("Semicolon-separated"), ";"),
		Pair(_("Tab-separated"), "\t")
	];

	posScale1 = make(zeroPositionScale);
	posScale2 = make(zeroPositionScale);

	buttonWH = makeWH();

	MCopySize2(button, \sz, tr ->
		MColsA([
			tr,
			TRectangle([MThemeFill(manager, MPrimaryColor())], TGroup2(THeight(sz), TFixed(1., 0.))),

			MIconButton("arrow_drop_down", nop, [MPrimaryColor()],
				concat(state, [
					MRippleShape("MTextButton"),
					MTooltipText(const(_("Choose another separator for export")))
				])
			)
			|> (\m -> MMenu(
				m,
				map(choices, \ch -> MMenuSingleLine(ch.first, [MOnClick(\-> handler(ch.second))])),
				[
					MMenuShift(fselect2(posScale1, posScale2, FLift2(\ps1, ps2 -> Point(ps1.pos.x - ps2.pos.x, 40.0)))),
					MMenuCustomButtonSize(buttonWH),
					MWidthByButton()
				]
			))
			|> (\m -> MPositionScale(posScale2, m))
			|> (\m -> MBorderA(-4., -4., -3., -4., m))
		])
	)
	|> (\m -> MPositionScale(posScale1, m))
	|> (\m -> MAttachBox(m, buttonWH))
	|> (\m -> MFrame(0.0, 4.0, [MThemeStroke(manager, MPrimaryColor()), StrokeWidth(1.0)], m))
}