import material/material2tropic;

main() {

	manager = makeMaterialManager([]);

	show = make(true);
	timer(2000, \ -> nextDistinct(show, false));
	timer(15000, \ -> nextDistinct(show, true));

	progress = make(1.);
	fpprint("progress")(progress);

	// content =
	// 	TGroup2(
	// 		TRectangle([MFill(MGreen(500))], TFixed(200., 200.)),
	// 		TText("text", [])
	// 	)
	// 	|> (\t -> TAnimator(manager, manager.focus, t, [
	// 		MAnimationTrigger(show),
	// 		MAnimationDuration(const(10.)),
	// 		// MFadeAnimation(),
	// 		// MScaleAnimation(false, true, true),
	// 		MTranslateAnimation(
	// 			MTranslatePosition(const(Point(500., 500.)))
	// 			// MBottom()
	// 			// MTop()
	// 		),
	// 		MNoCrop()
	// 	]))
	// 	|> (\t -> TDebug(red, t))
	// 	|> MBorderTop(200.);

	// content =
	// 	TLet(
	// 		"rect",
	// 		TGroup2(
	// 			TRectangle([MFill(MGreen(500))], TFixed(200., 200.)),
	// 			TText("text", [])
	// 		),
	// 		TCropSize(
	// 			TGhost("rect"),
	// 			TAnimator(manager, manager.focus, TDisplay("rect"), [
	// 				MAnimationTrigger(show),
	// 				MAnimationDuration(const(10.)),
	// 				// MFadeAnimation(),
	// 				// MScaleAnimation(false, true, true),
	// 				MTranslateAnimation(
	// 					// MTranslatePosition(const(Point(0., 100.)))
	// 					MBottom()
	// 					// MTop()
	// 				)
	// 			])
	// 		)
	// 	)
	// 	|> (\t -> TDebug(red, t))
	// 	|> MBorderTop(200.);

	content =
		MGroup2(
			TRectangle([MFill(MGreen(500))], TFixed(200., 200.)),
			MText("text", []) |> (\m -> MDebug(red, m))
		)
		|> (\m -> MAnimator(m, show, [
			MAnimationDuration(const(10.)),
			// MFadeAnimation(),
			// MScaleAnimation([
			// 	MScaleAnimationCustomFactor(const(Factor(2., 2.))),
			// 	MScaleAnimationCenterMode()
			// ]),
			// MScaleAnimation(false, true, true),
			MTranslateAnimation(
				// MTranslatePosition(const(Point(500., 500.)))
				// MBottom()
				MTop()
				// MLeft()
				// MRight()
			),
			// MRotateAnimation(),
			MExpanderProgress(progress),
			// MNoCrop()
		]))
		|> (\m -> MGroup2(m, MFrame(0., 0., [MStroke(MRed(500))], TFixed(200., 200.))))
		|> MBorderTop(200.)
		|> MBorderLeft(200.)
		;


	// content2 =
	// 	MText("some test text", [])
	// 	|> (\m -> MDebugMetrics(red, m))
	// 	|> (\m -> MAnimator(m, [
	// 		MAnimationTrigger(show),
	// 		MAnimationDuration(const(10.)),
	// 		MRotateAnimation(),
	// 		MNoCrop()
	// 	]))
	// 	|> (\m -> MBorder4(200., m))
	// 	;


	// rotated =
	// 	MText("some test text", [])
	// 	|> (\m ->
	// 		MGroup([
	// 			MRotate(const(0.), m),
	// 			MRotate(const(-45.), m),
	// 			MRotate(const(-90.), m),
	// 			MRotate(const(45.), m),
	// 			MRotate(const(90.), m),
	// 			MRotate(const(180.), m)
	// 		])
	// 	)
	// 	|> (\m -> MBorder4(200., m))
	// ;

	mrender(manager, true, content);
}