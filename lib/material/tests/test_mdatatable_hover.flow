import material/material2tropic;

main() {

	row = 10;
	col = 5;

	columns = generate(0, col, \i -> MColumn("Column " + i2s(i), "Tooltip " + i2s(i), 100, []));

	makeCell = \i, j -> MText(formatString("Cell %1.%2", [i2s(i), i2s(j)]), []);
	makeRow = \i -> generate(0, col, \j -> makeCell(i, j));
	makeRows = \-> const(generate(0, row, makeRow));

	table = {
		hoverIdMB = make(None());
		MLinesA([
			MText("MDynamicDataTable", [MTitle()]),
			MColsA(generate(0, row, \i -> {
				hightlightB = make(false);
				MConstruct(
					[
						\-> fconnectSelect(hoverIdMB, hightlightB, \idM -> eitherMap(idM, \id -> id == i, false))
					],
					MCopySize2(MSelect(hightlightB, \h -> TRectangle([MFill(if (h) randomMColor() else MWhite())], TFixed(48., 16.))), \sz, t -> {
						MLines2(t, MCenterXIn(MText(i2s(i), []), sz))
					})
				)
			})),
			MDynamicDataTable(columns, makeRows(), [
				MOnListClick(const(true), println),
				MOnListHover(const(true), \iM -> {
					nextDistinct(hoverIdMB, iM)
				})
			])
		]);
	}

	lightTable = {
		hoverIdMB = make(None());
		MLinesA([
			MText("MLightweightDataTable", [MTitle()]),
			MColsA(generate(0, row, \i -> {
				hightlightB = make(false);
				MConstruct(
					[
						\-> fconnectSelect(hoverIdMB, hightlightB, \idM -> eitherMap(idM, \id -> id == i, false))
					],
					MCopySize2(MSelect(hightlightB, \h -> TRectangle([MFill(if (h) randomMColor() else MWhite())], TFixed(48., 16.))), \sz, t -> {
						MLines2(t, MCenterXIn(MText(i2s(i), []), sz))
					})
				)
			})),
			MLightweightDataTable(columns, const(generate(0, row, idfn)), makeRow, [
				MOnListClick(const(true), println),
				MOnListHover(const(true), \iM -> {
					nextDistinct(hoverIdMB, iM)
				})
			])
		]);
	};

	// Experimental end not fully working at the moment.
	// domRenderTable = {
	// 	hoverIdMB = make(None());
	// 	MLinesA([
	// 		MText("MDynamicDataTable", [MTitle()]),
	// 		MColsA(generate(0, row, \i -> {
	// 			hightlightB = make(false);
	// 			MConstruct(
	// 				[
	// 					\-> fconnectSelect(hoverIdMB, hightlightB, \idM -> eitherMap(idM, \id -> id == i, false))
	// 				],
	// 				MCopySize2(MSelect(hightlightB, \h -> TRectangle([MFill(if (h) randomMColor() else MWhite())], TFixed(48., 16.))), \sz, t -> {
	// 					MLines2(t, MCenterXIn(MText(i2s(i), []), sz))
	// 				})
	// 			)
	// 		})),
	// 		MDynamicDataTable(columns, makeRows(), [
	// 			MOnListClick(const(true), println),
	// 			MOnListHover(const(true), \iM -> {
	// 				nextDistinct(hoverIdMB, iM)
	// 			}),
	// 			DomRender()
	// 		])
	// 	]);
	// }

	content = MColsA([table, lightTable, domRenderTable]);

	mrender(makeMaterialManager([]), false, content);
}