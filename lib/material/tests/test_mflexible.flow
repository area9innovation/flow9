import flowutils;
import material/material_ui;

main() {

	data = generate(0, 8, \i -> 
		Pair(MGreen(200 * (i % 4 + 1)), WidthHeight(200., 200.))
	);

	items = mapi(data, \i, d -> {
		size = TSized(const(d.second));
		MGroup2(
			MCenterIn(MText(i2s(i), [MDisplay1(), MWhite()]), size),
			size
		)
		|> (\m -> MConstruct([\ -> {
				// generate(0, 10000000, \j -> j * j);
				println("CONS " + i2s(i));
				\ -> println("DISP " + i2s(i))
			}], m))
		|> addMBackground(d.first)
	});

	itemsB = make([]);
	showItemsFn = \ ->
		nextDistinct(itemsB, items);
	
	resetFn = \ -> {
		println("RESET");
		nextDistinct(itemsB, []);
	}

	textWidth = make(0.);

	contentWH = makeWH();
	fpprint("contentWH")(contentWH);

	content = 
		MFlexibleGrid(itemsB, [MKeepOrder(), TFlexibleGridContentSizeInspector(contentWH)])
		|> MDebugBlue
		|> (\m -> MGroup2SameMetrics(
			MBorderT(zero, zero, textWidth, zero, m),
			MBorderT(fwidth(contentWH), zero, zero, zero,
				MText("RIGHT TEXT", [])
				|> (\m2 -> MAttachWidth(m2, textWidth))
			)
		))

		|> addMBackground(MGrey(400))
		|> (\m -> MLines2(m, MText("BOTTOM TEXT", [])))
		
		|> MBorderLeftRight(200.)
		|> (\m -> MGroup2(m, MLines2(
				MTextButton("SHOW ITEMS", showItemsFn, [], []),
				MTextButton("RESET", resetFn, [], [])
			)));

	mrender(makeMaterialManager([]), true, content);
}