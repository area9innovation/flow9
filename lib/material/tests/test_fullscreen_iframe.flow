import material/material2tropic;
import material/material_ui;

main() {
	manager = makeMaterialManager([]);
	setRendererType("html");

	fs = make(false);

	iframe = MLines([
		// MRealHTML(
		// 	// "https://www.google.com.ua/",
		// 	// "https://github.com/area9innovation",
		// 	"http://localhost/rhapsode/flowjs.html?name=curator&master-server=0&ris-master-server=0&rule-interpreter=0#modules",
		// 	const(WidthHeight(400., 400.)),
		// 	[OnPageLoaded(\ -> println("on loaded"))]
		// ),
		MTextButton("RETURN", \ -> {
			println("ON RETURN CLICK");
			nextDistinct(fs, false)
		}, [], [])
		|> MBorderTop(50.),
		MTextButton("DIALOG", \ -> {
			println("SHOW DIALOG");
			ShowMDialog(manager, make(false), [
				MDialogUseFrame()
			], MText("Dialog text", [])
				|> (\m -> MDebugConstruct("DIALOG TEXT", m))
			);

			timer(500, \ -> nextDistinct(fs, true))
		}, [], [])
	]);

	content =
		MLines([
			MText("Text 1", []),
			MText("Text 2", []),
			// MFullScreen(fs, iframe),
			MFullScreenNoReattachments(fs, iframe),
			// MFullScreen2(fs, iframe),
			MText("Text 3", []),
			MText("Text 4", []),
			MTextButton("FULL", \ -> nextDistinct(fs, true), [], [])
		])
		|> MBorderLeft(200.);

	mrender(manager, true, content);
}

MFullScreen2(fs : DynamicBehaviour<bool>, m : Material) -> Material {
	MTransformTAcc(\m2a, parent, sheet, metricsOnly -> {
		wh0 = makeWH();

		fpprint("Wh0")(wh0);

		factor = ffactor2(fmultiply(accessibilityZoom, const(screenDensity)));

		// TScale from trender2 is ignored in fullscreen mode, so let`s scale content here
		whF = fselect2(wh0, factor, FLift2(\stage, f -> WidthHeight(stage.width / f.x, stage.height / f.y)));
		wh = fif(fs, whF, wh0);

		b = m2a(
				m,
				// MGroup2(MShow(fs, TRectangle(interactiveRectangleStyle, TSized(wh)) |> blockMInteractives), m),
				TParentInfo(
					fif(fs, fwidth(wh), parent.maxX),
					fif(fs, fheight(wh), parent.maxY),
					parent.environment,
					fif(fs, fselect(parent.transformMatrix, FLift(\tm -> TransformMatrix(tm with tx = 0., ty = 0.))), parent.transformMatrix)
				),
				sheet,
				metricsOnly
			);

		TAcc(b with form =
			FFullScreen2(fs, wh0,
				FAccess(
					[AccessRole("group")],
					FGroup2(
						FMutable(
							fselect2Lift(fs, wh, \show, sz -> if (show) FRectangle(sz.width, sz.height, [Fill(white)]) else FEmpty())
						),
						FScale(
							fif(fs, ffactorX(factor), const(1.)),
							fif(fs, ffactorY(factor), const(1.)),
							b.form
						),
						false
					)
				),
				false
			)
		);
	});
}