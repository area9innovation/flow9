import material/material_ui;

main() {
	manager = makeMaterialManager([]);
	setRendererType("html");

	data = make(generate(0, 30, \i -> i));
	rowsFn = \v -> if (v == 2) [
		MCell(
			MText("first and second columns " + i2s(v), []),
			2,
			1
		),
		MCell(
			MText("third column " + i2s(v), []),
			1,
			1
		),
	] else if (v == 4) [
		MCell(
			MText("first column " + i2s(v), []),
			1,
			1
		),
		MCell(
			MText("second column " + i2s(v) + " (2 rows) ", []),
			1,
			2
		),
		MCell(
			MText("third column " + i2s(v), []),
			1,
			1
		)
	] else if (v == 5) [
		MCell(
			MText("first column " + i2s(v), []),
			1,
			1
		),
		MCell(
			MText("third column " + i2s(v), []),
			1,
			1
		)
	] else [
		MCell(
			MText("first column " + i2s(v), []),
			1,
			1
		),
		MCell(
			MText("second column " + i2s(v), []),
			1,
			1
		),
		MCell(
			MText("third column " + i2s(v), []),
			1,
			1
		)
	];

	columns = [
		MColumn("col1", "", 200, [MAutoSortByRowData(), CenterAlign()]),
		MColumn("col2", "", 200, []),
		MColumn("col3", "", 50, []),
	];

	style = [
		MPaginationAutoScaling(),
		MNoSeparators(),
		// TScrollEnabled(const(true))
		// MDataTableInnerScroll(MGluedFirstColumnMode([]), [])
	];

	table =
		MSpannableDataTable(
			columns,
			data,
			rowsFn,
			style
		);

	content = MScrollBox(table);

	mrender(manager, true, content);
}