import material/material2tropic;
import material/material_ui;

main() {
	setRendererType("html");
	manager = makeMaterialManager([]);

	email = make("");
	pass = make("");

	fpprint("email")(email);
	fpprint("pass")(pass);

	emailBeenFocused = make(false);
	passwdBeenFocused = make(false);

	content =
		MLines([
			MTextInput(email,
				concatA([
					if (isUrlParameterTrue("debug_email_autofill_email_type")) [TextInputType(EmailType())] else [],
					if (isUrlParameterTrue("debug_email_autofill_ac_type")) [AutoCompleteType(ACUserName())] else [],
					if (isUrlParameterTrue("debug_email_autofill_other")) [MFloatingLabel(), MLabel("emailOrUserName"), MHaveBeenFocused(emailBeenFocused)] else [],
				]),
				if (isUrlParameterTrue("debug_email_autofill_state")) [IScriptId("email"), FAccessAttribute("name", const("username"))] else []

				// [MFloatingLabel(), TextInputType(EmailType()), AutoCompleteType(ACUserName()), MLabel("emailOrUserName"), MHaveBeenFocused(emailBeenFocused),
				// 	// MFilterAction(\__ -> if (fgetValue(emailOk) && fgetValue(passwordOk)) okFn() else yieldFocus(manager, true))
				// ],
				// [
				// 	// MInputError(emailInputError, [MRequiredField(), MInputIsOk(emailOk), MInputErrorColor(make(inputErrorColor)), MInputErrorFont(inputErrorFont)]),
				// 	IScriptId("email"), FAccessAttribute("name", const("username")),
				// 	// MEnabled(const(allowDefaultLogin(oauthProviders.providers, None()))),
				// 	// MFocusEnabled(emailInputFocusEnabled)
				// ]
			),
			if (isUrlParameterTrue("debug_email_autofill_pass_enabled"))
				MTextInput(pass,
					[MFloatingLabel(), TextInputType(PasswordType()), AutoCompleteType(ACCurrentPassword()), MLabel(_("Password")),
						// MFilterAction(\__ -> if (fgetValue(emailOk) && fgetValue(passwordOk)) okFn()),
						MHaveBeenFocused(passwdBeenFocused)
					],
					[
						MInputShowPassword(make(false)),
						// MInputError(passwdInputError, [MMaxLines(-1), MRequiredField(), MInputIsOk(passwordOk), MInputErrorColor(make(inputErrorColor)), MInputErrorFont(inputErrorFont)]),
						IScriptId("password"),
						FAccessAttribute("name", const("password")),
						// MFocused(passwordInFocus)
					]
				)
			else TEmpty()
		])
		|> (\m -> MAccess([
			TagName("form"),
			FAccessAttribute("data-form-type", const("login")),
		], m));
	
	mrender(manager, true, MBorder4(20., content));
}