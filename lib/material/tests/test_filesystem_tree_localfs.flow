import material/extra/filesystem/filesystem_tree_view;

main() {
	setRendererType("html");

	fsApi = localFilesystemExtAPI();
	initDir = resolveRelativePath(".");

	selectedB = make("nothing selected");
	fileContentViewB = make(MText("Nothing", []));

	updateContentView = \selected -> {
		fsApi.isDirectory(
			selected,
			\isDir -> {
				if (isDir) {
					nextDistinct(
						fileContentViewB,
						MText("Directory: " + fileNameOnly(selected), [])
					);
				} else {
					fsApi.fileExists(
						selected,
						\isFile -> {
							nextDistinct(
								fileContentViewB, 
								if (isFile) MText("Content of: " + fileNameOnly(selected), [])
								else MText("Nothing", [])
							);
						}
					)
				}
			}
		);
	}

	content = MFrame(4., 4., [MStroke(MGrey(400))], MBorder4(4., MLinesA([
		MBorderBottom(8.)( 
			MFrame(0., 4., [MFill(MGrey(200))],
				MBorder4(8., 
					MGroup2(
						MSelect(selectedB, \selected -> MText(selected, [])),
						MFillXH(18.)
					)
				)
			)
		),
		MColsA([
			MAvailable(
				// Files tree view
				makeFilesystemTreeView(
					initDir,
					fsApi,
					\path -> nextDistinct(selectedB, strGlue(path, ", ")),
					println
				),
				MFillWY(400.)
			),
			MFrame(0., 4., [MStroke(MGrey(300))],
				MBorder4(8.,
					MLinesA(interleave([
						MCenterX(MText("User the following controls:", [])),
						MColsA(
							interleave(
								map(
									["UP", "DOWN", "LEFT", "RIGHT", "ENTER", "HOME", "END", "MOUSE"],
									\str -> MFrame(0., 4., [MFill(MBlue(100))], MCenterX(MBorder4(8., MText(str, []))))
								),
								MFixedX(8.)
							)
						),
						MConstruct(
							[makeSubscribe(selectedB, updateContentView)],
							MCenter(MMutable(fileContentViewB))
						)
					], MFixedY(8.)))
				)
			)
		])
	])));

	mrender(
		makeMaterialManager([]),
		true,
		MBorder4(16., if (cpp) content else MCenter(MText("CPP target only", [])))
	);
}
