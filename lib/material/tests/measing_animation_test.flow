import material/material2tropic;

main() {
	
	manager = makeMaterialManager([]);
	isPlay = make(true);
	isFreeze = make(false);

	percent = make(0.);
	currentPathIndex = make(1);
	pathArray = [Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.), 
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.),
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.),
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.),
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.), 
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.),
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.),
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.),
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.), 
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.),
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.),
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.),
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.), 
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.),
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.),
				 Point(100., 100.), Point(200., 200.), Point(300., 200.), Point(400., 700.), Point(300., 300.), Point(200., 200.)];
				 //80 -> 8 sec
	time = const(0.1);

	percent2= make(0.);
	currentPathIndex2= make(1);
	pathArray2 = [Point(600., 400.), Point(800., 400.), Point(900., 500.), Point(1000., 300.), Point(900., 400.), 
				 Point(700., 500.), Point(800., 600.), Point(900., 300.), Point(800., 200.)];//8 -> 8 sec
	time2 = const(1.0);

	subscribe(percent, \per -> if (per == 1. && getValue(currentPathIndex) + 1 < length(pathArray)) {
		next(percent, 0.);
		next(currentPathIndex, getValue(currentPathIndex) + 1);
	});

	subscribe(percent2, \per -> if (per == 1. && getValue(currentPathIndex2) + 1 < length(pathArray2)) {
		next(percent2, 0.);
		next(currentPathIndex2, getValue(currentPathIndex2) + 1);
	});

	animation = \_time, _percent : DynamicBehaviour<double>, path : [Point], curInd -> MGetFocusGroup(\parent -> 
		MEasingAnimation(
			manager,
			parent,
			_time,
			make(CubicBezierEasing(0.5, 0.5, 0.5, 0.5)),
			isPlay,
			\showLabel -> {
				if ((showLabel && fgetValue(_percent) == 1.) || (!showLabel && fgetValue(_percent) == 0.)) {
					None();
				} else {
					Some(showLabel)
				}
			},
			\showLabel, val -> next(_percent, val),
			[MAutoStart(), MForceAnimation(), MFreezeAnimation(isFreeze)],
			material2tropic(manager,
				MSelect(_percent, \prc -> {
					curPt = path[curInd - 1];

					nextPt = path[curInd];

					MTranslate(
						const(Point(curPt.x + (nextPt.x - curPt.x) * prc, curPt.y + (nextPt.y - curPt.y) * prc)),
						TRectangle([Fill(black), FillOpacity(1.0)], TFixed(100., 100.))
					)
				})
			)
		)
	);

	MGroup([
		MSelect(currentPathIndex, \curInd ->
			animation(time, percent, pathArray, curInd)
		),
		MSelect(currentPathIndex2, \curInd ->
			animation(time2, percent2, pathArray2, curInd)
		),
		MCenter(
			MTextButton("PAUSE", \-> next(isFreeze, !getValue(isFreeze)), [], [])
		)
	]) |> (\f -> mrender(manager, true, f))
}
