import material/material2tropic;

main() {
	setRendererType("html");
	manager = makeMaterialManager([]);

	makeCard = \i -> MDynamicCard(
		const([
			MRichMediaBlock(TRectangle([MFill(MGreen(900))], TFixed(200., 200.)), [MContentBorders(false)]),
			MRichMediaBlock(TRectangle([MFill(MRed(900))], TFixed(200., 200.)), [MCardBlockBorders(defaultCardMargin, 0., defaultCardMargin, 0.)]),
			MSupportingTextBlock("text", [MCardBlockBorders(defaultCardMargin, 0., defaultCardMargin, 0.)]),
			MRichMediaBlock(TRectangle([MFill(MBlue(900))], TFixed(200., 200.)), []),
			MRichMediaBlock(TRectangle([MFill(MGreen(900))], TFixed(200., 200.)), []),
		]),
		const([MCardWidth(200.), MCardHeight(200.), MContentBorders(true), MGrey(200)]),
		[MOnClick(\ -> println("onclick")), MHighlightOnHover(const(true)), THovering(make(false)), MFocused(make(false)), MElevation(const(0.))]
	);

	content =
		generate(0, 1, makeCard) |> MLines |> MScrollBox
		|> MBorderTop(20.)
		|> MBorderLeft(20.);

	mrender(manager, true, content);
}


wrapCardTweakCorners(card : Material) -> Material {
	MComponentGroup(card, [UpdateMaterialTheme(\theme ->
		MaterialTheme(theme with
			shape = MaterialShapeManager(
				theme.shape with medium = setTree(theme.shape.medium, "card",
					MaterialShape(
						defaultMaterialRoundedCorner,
						defaultMaterialRoundedCorner,
						defaultMaterialSharpCorner,
						defaultMaterialSharpCorner
					)
				)
			)
		)
	)]);
}