import material/material_ui;
import lib/ui/imagedecorated;

main() {
	manager = makeMaterialManager([]);
	setRendererType("html");

	leftTop = make(Point(300., 100.));
	fpprint("leftTop")(leftTop);
	size = make(WidthHeight(200., 200.));
	fpprint("size")(size);

	text = make("aaaaa");
	textHeight = make(0.);
	fpprint("textHeight")(textHeight);

	selectedOption = make(0);

	transl = fselect2Lift(selectedOption, textHeight, \opt, h -> {
				vAlign = if (opt == 0) TopAlign() else if (opt == 1) CenterAlign() else BottomAlign();
				Point(0. , 0. - h * verticalAlign2d(vAlign) + 24. * verticalAlign2d(vAlign))
			});

	sizeB = makeWH();

	content = MGroup([
		MFrame(0., 0., [MFill(MBlue(200))], TFillXY()),
		MTranslate(
			// leftTop,
			transl,
			MGroup([
				MTranslate(
					leftTop,
					MAttachHeight(
					MAvailable(MDynamicParagraph(text, []), TSized(size)),
					textHeight
				)),
				MDebugGreen(MEditableRectangle(leftTop, size,
					fselectLift(selectedOption, \opt ->
						if (opt == 0) [MTopLeft(), MTopRight()]
						else if (opt == 1) [MCenterLeft(), MCenterRight()]
						else [MBottomLeft(), MBottomRight()]
					),
					[
						MPurple(200),
						FillOpacity(0.5),
						MResizableEnabled(const(true), const(false)),
						MResizableMinMax(TSizedHeight(0., textHeight), TFillXHT(textHeight))
					]
				)) |> (\m -> MAvailable(m, TSized(fselect2Lift(sizeB,transl, \sz, tr -> WidthHeight(sz.width, sz.height - tr.y)))))
				|> (\m -> MAttachAvailable(m, sizeB))
			])
		),
		// |> (\m -> MBorder4(100., m)),
		MLines2(
			MTextInput(text, [], []),
			MRadios(selectedOption, [], [MText("TOP", []), MText("CENTER", []), MText("BOTTOM", [])]) |> MCols
		)
	]);


	mrender(manager, true, content);
}