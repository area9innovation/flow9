import material/material2tropic;
import material/form2material;
import material/material_dialog;
import ui/activityindicator;

main() {
	setRendererType("html");
	manager = makeMaterialManager([]);

	availBox = makeWH();

	size = makeWH();

	content =
		MConstruct([
			\-> {
				println("setAccessibilityZoom(1.5)");
				setAccessibilityZoom(1.5);
				\-> {
					println("setAccessibilityZoom(1.0)");
					setAccessibilityZoom(1.0);
				}
			}],
			drawPrimeBackgroundMedia(
				"http://frugalfrolicker.com/wp-content/uploads/2015/07/Kangaroo-Valley-10.jpg",
				// fwhsubtract(availBox, const(WidthHeight(200., 0.))) // Doesn`t reproduce
 				fselect(availBox, FLift(\av -> WidthHeight(600., av.height))) // Reproduces with static width
			)
		)
		|> (\m -> MAttachBox(m, size))
		|> (\m -> MGroup2(m, MLines2(
				MSelect(size, \sz -> MText("Size : " + d2s(sz.width) + " x " + d2s(sz.height), [])),
				MSelect(availBox, \sz -> MText("Available : " + d2s(sz.width) + " x " + d2s(sz.height), []))
			)))
		|> (\m -> MAttachAvailable(m, availBox))
		|> (\m -> MLines2(m, MCols([
				MBorder4(8., MIconButton("android", nop, [MIconSize(40.)], [])),
				MBorder4(8., MIconButton("android", nop, [MIconSize(40.)], [])),
				MBorder4(8., MIconButton("android", nop, [MIconSize(40.)], [])),
				MBorder4(8., MIconButton("android", nop, [MIconSize(40.)], [])),
			])));

	mrender(manager, true, content);
}

drawPrimeBackgroundMedia(url : string, bgSizeT : Transform<WidthHeight>) -> Material {
	bgImageAlign = TAlign(const(0.5), const(0.5));
	bgImageZoom = const(1.);
	bgImageCropRectT = const(Rect(0., 0., 1., 1.));

	bgSizeB = make(zeroWH);

	imgOrigSizeB = makeWH();
	showImgLoaderB = make(true);
	imgLoadingErrorB = make(false);

	bgImgCropIsEnabledT = fselect(bgImageCropRectT, FLift(\rect -> (rect.x2 - rect.x1 < 1.0 || rect.y2 - rect.y1 < 1.0)));
	bgImgCropPosT = fselect2(bgImageCropRectT, imgOrigSizeB, FLift2(\rect, size ->
		Point(rect.x1 * size.width, rect.y1 * size.height)
	));
	bgImgCropSizeT = fselect2(bgImageCropRectT, imgOrigSizeB, FLift2(\rect, size ->
		WidthHeight((rect.x2 - rect.x1) * size.width, (rect.y2 - rect.y1) * size.height)
	));

	MConstruct(
		[
			\ -> fconnect(bgSizeT, bgSizeB)
		],
		MGroup([
			MGroup2(
				MTweak(
					[TFillZoom(true), bgImageAlign, TFillScale(bgImageZoom)],
					MPicture(
						url,
						[
							MPictureShowLoading(false),
							OnLoadingError(\err -> {
								next(imgLoadingErrorB, true);
								devtrace("Error while loading background image: " + err);
							}),
							OnLoaded(\ -> {
								next(imgOrigSizeB, either(getCachedPictureSize(url), fgetValue(bgSizeT)));
								next(showImgLoaderB, false);
							})
						]
					)
					|> (\m -> MSelect(bgImgCropIsEnabledT, \bgImgCropIsEnabled -> {
						if (bgImgCropIsEnabled) {
							MCrop(bgImgCropPosT, bgImgCropSizeT, m)
						} else m
					}))
					,
					TSized(bgSizeT)
				),
				MShow(fand(showImgLoaderB, fnot(imgLoadingErrorB)),
					MCenterIn(form2material(SpinnerActivityIndicator(50.0, 0xAAAAAA)), TSized(bgSizeT))
				)
			),
			TRectangle([MFill(MWhite()), FillOpacity(0.5)], TSized(bgSizeT))
		])
	);
}