import material/material2tropic;

main() {

	columns = [
		MColumn("#", "", 100, []), 
		MColumn("Data", "", 200, [])
	];
	rows50 = generate(0, 50, \i -> 
		[
			MText(i2s(i + 1), []), 
			MText("data " + i2s(i + 1), []), 
		]
	);

	pagination = [[], [MPagination(make(0), [4, 7, 11])], [MPaginationAutoScaling()]];
	paginationS = ["No pagination", "User-defined", "Auto"];
	paginationB = make(0);
	
	footer = [[], [MNoFooter()]];
	footerS = [ "Default (56.0)", "No footer area"];
	footerB = make(0);

	minH = [[], [MMinTableHeigth(0.0)], [MMinTableHeigth(100.0)], [MMinTableHeigth(300.0)], [MMinTableHeigth(400.0)]];
	minHS = ["Default (240.0)", "0.0", "100.0", "300.0", "400.0"];
	minHB = make(0);

	count = [1, 2, 3, 5, 15, 50];
	countS = map(count, i2s);
	countB = make(1);

	makeTables = \rows, s -> {
		m = \f -> MGroup2(
			MOffset(0.0, extractStruct(s, MMinTableHeigth(240.0)).height, 
				MCols2(
					TGraphics([LineTo(50.0, 0.0)], [Stroke(red)]),
					MText("min table height", [MCustomFont(8.0, "Roboto", 0.87), MRed(999)])
				)
			), 
			f
		);
		MCols([
			TFixed(5.0, 0.0),
			MLines2(
				MText("Default rows", [MTitle()]),
				MFrame(2.0, 0.0, [Stroke(black)], MDataTable(columns, rows, s)) |> m
			),
			TFixed(5.0, 0.0),
			MLines2(
				MText("Condensed rows", [MTitle()]),
				MFrame(2.0, 0.0, [Stroke(black)], MDataTable(columns, rows, concat([MCondensed(true)], s))) |> m
			),
			TFixed(5.0, 0.0),
			MLines2(
				MText("Row height = 16.0 ", [MTitle()]),
				MFrame(2.0, 0.0, [Stroke(black)], MDataTable(columns, rows, concat([MRowHeight(16.0)], s))) |> m
			),
			TFixed(5.0, 0.0),
			MLines2(
				MText("Row height = 80.0 ", [MTitle()]),
				MFrame(2.0, 0.0, [Stroke(black)], MDataTable(columns, rows, concat([MRowHeight(80.0)], s))) |> m
			)
		])
	}

	testUi = MBorder(8.0, 8.0, 8.0, 8.0, MLines([
		MCols([
			MLines2(
				MText("Pagination", []),
				MDropDown(paginationB, "", paginationS, [])
			),
			TFixed(32.0, 0.0),
			MLines2(
				MText("Footer area", []),
				MDropDown(footerB, "", footerS, [])
			),
			TFixed(32.0, 0.0),
			MLines2(
				MText("Min table height", []),
				MDropDown(minHB, "", minHS, [])
			),
			TFixed(32.0, 0.0),
			MLines2(
				MText("Row number", []),
				MDropDown(countB, "", countS, [])
			),
		]),
		TFixed(0.0, 16.0),
		MSelect(select4(paginationB, footerB, minHB, countB, \p, f, h, n -> {
				rows = take(rows50, count[n]);
				Pair(rows, concat3(minH[h], pagination[p], footer[f]))
			}), 
			\p -> makeTables(p.first, p.second)
		)
	]));

	mrender(makeMaterialManager([]), true, testUi)
}