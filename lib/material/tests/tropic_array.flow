import tropic/selecttarray;
import tropic/trender;
import material/material2tropic;

main() {
	manager = makeMaterialManager([]);

	// Make a bunch of forms in an array
	// tropics = generate(0, 1, \i -> MText2T(i2s(i), true, []) |> (\f -> {println(f); f;}));

	// // Construct a view of this array of forms
	// f = makeTropicArray(tropics, \f, __, __ -> f, TLinesCombiner);

	// // Display the elements
	// trender(f.tropic, []);

	// insertTropicArray(f, 2, MText2T("2", true, []));
	// insertTropicArray(f, 3, MText2T("3", true, []));
	// insertTropicArray(f, 4, MText2T("4", true, []));
	// insertTropicArray(f, 5, MText2T("5", true, []));
	// insertTropicArray(f, 6, MText2T("6", true, []));
	// insertTropicArray(f, 7, MText2T("7", true, []));
	// insertTropicArray(f, 8, MText2T("8", true, []));
	// insertTropicArray(f, 9, MText2T("9", true, []));
	// insertTropicArray(f, 10, MText2T("10", true, []));

	// debugTropicArray(f);

	// // debugTropicArray(f);
	// // Now remove the third element: Notice this immediately takes effect on the screen
	// removeTropicArray(f, 0);
	// // debugTropicArray(f);
	// insertTropicArray(f, 10, MText2T("11", true, []));

	// removeTropicArray(f, 0);
	// // debugTropicArray(f);
	// insertTropicArray(f, 11, MText2T("12", true, []));

	// removeTropicArray(f, 0);
	// // debugTropicArray(f);
	// insertTropicArray(f, 12, MText2T("13", true, []));

	// debugTropicArray(f);

 	// debugTropicArray(f);

	// Replace an element with a new one. Once again, it takes immediate effect
	// replaceTropicArray(f, 13, MText("Replaced 13", []) |> (\f2 -> material2tropic(manager, f2)));

	// debugTropicArray(f);

	// Inserting an element before the given element in the array
	// insertTropicArray(f, 22, MText("Inserted 22", []) |> (\f2 -> material2tropic(manager, f2)));

	// debugTropicArray(f);

	values = make([1, 2, 3]);

	timer(1000, \ -> next(values, [3, 2, 1, 4, 6, 5]));
	timer(3000, \ -> next(values, [1, 2, 3, 4, 5, 6]));

	SelectTLines(values, \i, id, v -> TSelect(i, \i0 -> MText2T(manager.focus, i2s(i0) + " " + i2s(id) + " " + i2s(v), [])))
	|> (\f -> mrender(manager, true, f))
}