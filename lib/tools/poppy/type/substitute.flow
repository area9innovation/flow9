import tools/poppy/type/env;

export {
	substitutePType(replace : PType, subst : PType, t : PType) -> PType;
}

substitutePType(replace : PType, subst : PType, t : PType) -> PType {
	rec = \tt -> substitutePType(replace, subst, tt);
	if (t == replace) subst
	else switch (t) {
		PTypeName(name, typars): PTypeName(name, map(typars, rec));
		PTypeEClass(eclass): t;
		PTypeWord(inputs, outputs): PTypeWord(map(inputs, rec), map(outputs, rec));
		PTypeOverload(overloads): PTypeOverload(map(overloads, rec));
		PTypeEval(): t;
		PTypeCompose(left, right): PTypeCompose(rec(left), rec(right));
	}
}
