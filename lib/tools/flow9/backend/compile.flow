import tools/flow9/backend/fiprogram;
import tools/flowc/incremental/fiprogram;
import tools/flowc/backends/build;

export {
	// Compiles a DModule to FiProgram and processes it with flowc backend
	// This can be called with a single line from compileQueue
	compileDProgram(state : CompileState, fullpath : string, onDone : () -> void) -> void;
}

// Integrated function that converts to FiProgram and processes with flowc backend
compileDProgram(state : CompileState, fullpath : string, onDone : () -> void) -> void {
	mfiprogram = dmodule2fiprogram(state, fullpath);

	switch (mfiprogram) {
		None(): {
			if (state.config.verbose >= 1) {
				println("Failed to convert " + fullpath + " to FiProgram");
			}
			onDone();
		}
		Some(fiprogram): {
			if (state.config.verbose >= 2) {
				println("Successfully converted " + fullpath + " to FiProgram");
			}

			// Process with flowc backend
			buildFiProgram(fiprogram, initFcTypeEnvGlobal(), \__ -> {
				if (state.config.verbose >= 2) {
					println("Successfully processed " + fullpath + " with flowc backend");
				}
				onDone();
			});
		}
	}
}