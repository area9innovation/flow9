import runtime;

export {
    // Define a union type with two constructors
    U ::= Foo, Bar;
        Foo(value: int);
        Bar(text: string);
    
    // Function that creates a Foo constructor
    makeFoo(x : int) -> Foo;
    
    // Function that checks if something is a U type
    isValidU(u : U) -> bool;
}

// Implementation of makeFoo
makeFoo(x : int) -> Foo {
    Foo(x);
}

// Implementation of isValidU
isValidU(u : U) -> bool {
    switch (u) {
        Foo(__): true;
        Bar(__): true;
    }
}
