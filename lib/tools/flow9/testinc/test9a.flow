import math/math;

export {
	// Recursive type that will be modified
	TreeNode<?> ::= Leaf<?>, Node<?>;
		Leaf(value: ?);
		Node(value: ?, left: TreeNode<?>, right: TreeNode<?>);

	// Function to calculate tree depth
	treeDepth(tree: TreeNode<?>) -> int;
}

treeDepth(tree: TreeNode<?>) -> int {
	switch (tree) {
		Leaf(__): 1;
		Node(__, left, right): 1 + max(treeDepth(left), treeDepth(right));
	}
}