import tools/flow9/desugar/dexp;

export {
	getDExpChildren(e : DExp) -> [DExp];
}

getDExpChildren(e : DExp) -> [DExp] {
	switch (e) {
		DVoid(info): [];
		DInt(value, info): [];
		DDouble(value, info): [];
		DBool(value, info): [];
		DString(value, info): [];
		DLambda(args, body, info): [body];
		DVar(name, info): [];
		DArray(values, info): values;
		DCall(fn, args, info): arrayPush(args, fn);
		DLet(name, value, body, info): [value, body];
		DIfElse(condition, then, else_, info): [condition, then, else_];
		DMaybe(condition, then, else_, info): [condition, then, else_];
		DSwitch(value, cases, defaultCase, info): {
			def = switch (defaultCase) { None(): []; Some(ee) : [ee]};
			concat3(def, [value], map(cases, \c -> c.body));
		}
		DBuiltin(op, args, info): args;
		DWith(uid, wexp, fieldassigns, info): arrayPush(map(fieldassigns, \fa -> fa.exp), wexp);
	}
}
