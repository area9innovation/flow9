native length : ([?]) -> int = Native.length;
native fold : (xs : [?], init : ??, fn : (??, ?)->??) -> ?? = Native.fold;


native list2string :(l : List<string>) -> string = Native.list2string;

array2list(a : [?]) -> List<?> {
	fold(a, EmptyList(), \ac, e -> Cons(e, ac));
}

concatStrings(strings : [string]) -> string;

	List<?> ::= EmptyList, Cons<?>;
		EmptyList();
		// Add head to the list "tail"
		Cons(head : ?, tail : List<?>);


concatStrings(strings) {
	l = length(strings);
	if (l == 0) ""
	else if (l == 1) strings[0]
	else if (l < 35) {
		fold(strings, "", \acc, val -> acc + val)
	} else {
		// list2string is much faster for big arrays
		strings |> array2list |> list2string;
	}
}

