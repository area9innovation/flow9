import tools/flowc/typechecker2/gtype;
/*
import tools/flowc/fctype;
import tools/flowc/incremental/fitype;
import tools/flowc/typechecker2/gsubtype_graph_type;
*/

addStructsAndUnionsToGSubtypeGraph(
	graph : GSubtypeGraph, 
	unions : Tree<string, FcTypeUnion>) -> void {

	// From struct to unions
	supertypes0 = foldTree(unions, graph.supertypes, \unionname : string, union : FcTypeUnion, acc -> {
		// Special case: If the union has only one struct, these struct is also a supertype of the union
		nacc = if (length(union.typenames) == 1) {
			fold(union.typenames, acc, \acc2, typename -> {
				addSimpleEdge(acc2, unionname, typename.name, true, 1)
			});
		} else acc;
		
		fold(union.typenames, nacc, \acc2, typename2 -> {
			addSimpleEdge(acc2, typename2.name, unionname, true, 1)
		});
	});

	// From unions to structs
	subtypes0 = foldTree(unions, graph.subtypes, \unionname : string, union : FcTypeUnion, acc -> {
		// Special case: If the union has only one struct, these struct is also a supertype of the union
		nacc = if (length(union.typenames) == 1) {
			fold(union.typenames, acc, \acc2, typename -> {
				addSimpleEdge(acc2, typename.name, unionname, true, 1)
			});
		} else acc;
		fold(union.typenames, nacc, \acc2, typename -> {
			addSimpleEdge(acc2, unionname, typename.name, true, 1)
		});
	});
	{}
}
