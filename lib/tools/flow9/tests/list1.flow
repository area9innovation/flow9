List<?> ::= EmptyList, Cons<?>;
	EmptyList();
	// Add head to the list "tail"
	Cons(head : ?, tail : List<?>);

makeList() -> List<?> {
	EmptyList();
}

reverseList(xs : List<?>) -> List<?>;

reverseList(xs) {
	reverseAcc(xs, makeList());
}

reverseAcc(xs : List<?>, acc : List<?>) -> List<?> {
	xs;
}

doFilterList(l : List<?>, fn : (?) -> bool, acc : List<?>) -> List<?> {
	switch (l : List<?>) {
		EmptyList(): acc;
		Cons(h, t): doFilterList(t, fn, if (fn(h)) Cons(h, acc) else acc);
	}
}

