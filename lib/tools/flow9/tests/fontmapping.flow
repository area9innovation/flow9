import stylestructs;
	FontFace(name : string, family : string, weight : int, slope : string, families : [string]);

strReplace(s : string, old : string, new : string) -> string {
	s;
}

getAlphabetScaling(alphabet : string, fontFamily : string) -> double {
	if (alphabet == "arb") 1.2 else 1.0
}

defaultFontSize_ = 11.0;
applyAlphabetStyles(alphabet: string, styles: [CharacterStyle]) -> [CharacterStyle] {
	getStyles = \ffc -> {
		fsz = extractStruct(styles, FontSize(defaultFontSize_)).size;
		ratio = getAlphabetScaling(alphabet, ffc);
		[FontSize(fsz * getAlphabetScaling(alphabet, ffc))/*, SetRTL(contains(rtlAlphabets, alphabet))*/];
	};
	currentFontFamilies = extractStructMany(styles, FontFamily(""));
	if (currentFontFamilies != []) {
		fff = currentFontFamilies[0];
		styles0 = replaceStructMany(styles, getStyles(fff.name));
			if (alphabet == "arb") {
			concat(removeAllStructs(styles0, FontFamily("")), map(currentFontFamilies, \ff -> FontFamily(strReplace(ff.name, "RobotoMedium", "RobotoBold"))))
			} else styles0

	} else styles
}
