import ds/easygraph;
import tools/flow9/type/egraph/egraph;

export {
	egraph2easyGraph(g : EGraph, useSubtypes : bool) -> EasyGraph<TypeNode, Set<EContext>>;
}

egraph2easyGraph(g : EGraph, useSubtypes : bool) -> EasyGraph<TypeNode, Set<EContext>> {
	// Initialize empty graph
	graph = makeEasyGraph();

	// First add all root nodes
	graph1 = foldTree(^(g.classes), graph, \id, eclass, acc -> {
		if (findEGraphRoot(g, id) == id) {
			addEGNode(acc, GNode(id, eclass.node))
		} else acc;
	});

	// Then add all edges based on subtype/supertype relationships
	foldTree(^(g.classes), graph1, \fromId, eclass, acc -> {
		// Choose which relationships to use
		relationships = if (useSubtypes) eclass.subtypeContexts else eclass.supertypeContexts;

		// Add an edge for each relationship
		foldSet(relationships, acc, \gacc, relation -> {
			toId = relation.id;
			// Create edge with no data and weight 1
			edge = GEdge(fromId, toId, relation.contexts, 1);
			addEGEdge(gacc, edge)
		})
	});
}
