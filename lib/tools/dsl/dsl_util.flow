import tools/dsl/dsl_ast;

export {
	getDslBool(a : DslAst) -> bool;
	getDslInt(a : DslAst) -> int;
	getDslDouble(a : DslAst) -> double;
	getDslString(a : DslAst) -> string;
	getDslNode(a : DslAst) -> DslNode;
	getDslList(a : DslAst) -> List<DslAst>;

	makeDslNode0(name : string) -> DslNode;
	makeDslNode1(name : string, arg0 : DslAst) -> DslNode;
	makeDslNode2(name : string, arg0 : DslAst, arg1 : DslAst) -> DslNode;
	makeDslNode3(name : string, arg0 : DslAst, arg2 : DslAst, arg3 : DslAst) -> DslNode;
}

getDslBool(a : DslAst) -> bool {
	switch (a) {
		DslBool(v): v;
		default: false;
	}
}

getDslInt(a : DslAst) -> int {
	switch (a) {
		DslInt(v): v;
		default: 0;
	}	
}

getDslDouble(a : DslAst) -> double {
	switch (a) {
		DslDouble(v): v;
		default: 0.0;
	}	
}

getDslString(a : DslAst) -> string {
	switch (a) {
		DslString(s): s;
		default: "";
	}
}

getDslNode(a : DslAst) -> DslNode {
	switch (a) {
		DslNode(v, args, pos): a;
		default: DslNode("", [a], 0);
	}
}

getDslList(a : DslAst) -> List<DslAst> {
	switch (a) {
		DslList(v): v;
		default: makeList1(a);
	}
}

makeDslNode0(name : string) -> DslNode {
	DslNode(name, [], 0);
}

makeDslNode1(name : string, arg0 : DslAst) -> DslNode {
	DslNode(name, [arg0], 0);
}

makeDslNode2(name : string, arg0 : DslAst, arg1 : DslAst) -> DslNode {
	DslNode(name, [arg0, arg1], 0);
}

makeDslNode3(name : string, arg0 : DslAst, arg1 : DslAst, arg2 : DslAst) -> DslNode {
	DslNode(name, [arg0, arg1, arg2], 0);
}
