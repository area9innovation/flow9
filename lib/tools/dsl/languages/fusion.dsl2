map(f,fill(x,N)) == fill(apply(f,x), N)
fill(x,N)[y] --> x
length(fill(x,N)) --> N
reverse(reverse(x)) --> x
sum(fill(x,N)) --> x * N
map(f,reverse(x)) == reverse(map(f, x))
filter(f,reverse(x)) == reverse(filter(f,x))
reverse(fill(x,N)) == fill(x,N)
filter(f, fill(x,N)) == (apply(f, x) ? fill(x,N) : fill(x,0))
filter(f, filter(g, x)) == filter(fand(f,g), x)
cat(fill(x,N),fill(x,M)) == fill(x,N + M)
cat(map(f,x), map(f,y)) == map(f, cat(x,y))
map(f, cat(x,y)) == cat(map(f,x), map(f,y))
map(f,map(g,x)) == map(f  g, x)
reverse( cat(x,y) ) == cat(reverse(y), reverse(x))
map(f,x)[y] == apply(f,x[y])
apply(f  g, x) == apply(f, apply(g, x))
reduce(g, map(f, x)) == mapreduce(f, g, x)
foldl(g, map(f, x)) == mapfoldl(f, g, x)
foldr(g, map(f, x)) == mapfoldr(f, g, x)
