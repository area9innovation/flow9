import ds/tree;
import string;

export {
	parseConfig(content : string) -> Tree<string, string>;
}

parseConfig(content : string) -> Tree<string, string> {
	// Skip comment lines and empty lines
	lines = filtermap(strSplit(content, "\n"), \line0 -> {
		line = trim2(line0, " \t\r");
		if (line == "" || startsWith(line, "#")) None() else Some(line)
	});
	fold(lines, makeTree(), \acc, line -> {
		eqPos = strIndexOf(line, "=");
		if (eqPos <= 0) acc else {
			// Check if actually there's '+=' operator or just '='
			isPlus = (getCharAt(line, eqPos - 1) == "+");
			optEnd = if (isPlus) eqPos - 1 else eqPos;
			opt = trim2(substring(line, 0, optEnd), " \t");
			val = trim2(substring(line, eqPos + 1, strlen(line) - (eqPos + 1)), " \t");
			if (isPlus) {
				// Add a value to the already stored value. Values are stored as CSV.
				val0 = lookupTreeDef(acc, opt, "");
				setTree(acc, opt, if (val0 == "") val else val0 + "," + val);
			} else {
				// Set the value. If there already was a value - overwrite it.
				setTree(acc, opt, val);
			}
		}
	});
}
