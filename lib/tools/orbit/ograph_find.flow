import tools/orbit/orbit_types;
import tools/orbit/ograph;
import tools/orbit/orbit_simple_ograph;
import tools/orbit/orbit_compare;

export {
    // Find a node ID in an OGraph that structurally matches the given expression without modifying the graph
    // Returns the ID if found, or -1 if not found
    findOGraphId(graphName : string, expr : OrMath_expr) -> int;
}

// Implementation of findOGraphId function
findOGraphId(graphName : string, expr : OrMath_expr) -> int {
	// Get the ograph from the registry
	switch (lookupTree(^ographRegistry, graphName)) {
		Some(ograph): {
			// Use direct comparison without modifying the graph
			foundId = ref -1;
			
			// Look through all nodes in the graph for a match
			traverseOGraph(ograph, \id, __ -> {
				if (^foundId == -1) { // Stop searching if we found a match
					if (compareOrbitWithNode(expr, ograph, id)) {
						foundId := id;
					}
				}
			});
			
			// Return the found ID or -1 if not found
			^foundId;
		}
		None(): -1;
	}
}