import tools/orbit/sexpr/sexpr_types;
import text/blueprint;
import string;

export {
	prettySexpr(e : Sexpr) -> string;
}

prettySexpr(e : Sexpr) -> string {
	switch (e) {
		SSBool(b): b2s(b);
		SSConstructor(name): name;
		SSDouble(d): d2s(d);
		SSInt(i): i2s(i);
		SSList(exprs): "(" + superglue(exprs, prettySexpr, " ") + ")";
		SSOperator(op): op;
		SSSpecialForm(name, sexprs): {
			if (name == SBegin()) {
				blueprint("
					(begin
						%exps%
					)", ["exps", superglue(sexprs, prettySexpr, "\n")]);
			} else {
				"(" + prettySpecialForm(name) + " " + superglue(sexprs, prettySexpr, " ") + ")";
			}
		}
		SSString(s): toString(s);
		SSVariable(name): name;
	}
}

prettySpecialForm(n : Special_name) -> string {
	switch (n) {
		SAnd(): "and";
		SBegin(): "begin";
		SClosure(): "closure";
		SDefine(): "define";
		SEval(): "eval";
		SIf(): "if";
		SImport(): "import";
		SLambda(): "lambda";
		SLet(): "let";
		SLetRec(): "letrec";
		SList(): "list";
		SMatch(): "match";
		SOr(): "or";
		SQuasiQuote(): "quasiquote";
		SQuote(): "quote";
		SSet(): "set!";
		SUnQuote(): "unquote";
		SUnQuoteSplicing(): "unquote-splicing";
	}
}