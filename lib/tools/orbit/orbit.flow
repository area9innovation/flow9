// Produced by  flowcpp mango/mango.flow -- file=orbit.mango compile=1 main=orbit_compiled linter=1
import tools/mango/mcode_lib;
import string;
import net/url_parameter;
import tools/orbit/orbit_compiled_parser;
import tools/orbit/orbit_types;
import tools/orbit/orbit_interpreter;
import tools/orbit/prettyprint;
import tools/orbit/orbit_ast;
import tools/orbit/ograph;
import tools/orbit/orbit_simple_ograph;

main() {
	files = filtermap(getAllUrlParametersArray(), \a -> if (a[1] == "") Some(a[0]) else None());
	if (files == []) {
		println("Usage: orbit <file>");
		println("Optional parameters:");
		println("  trace=1 - Enable detailed tracing of interpretation steps");
	}
	
	// Check if tracing is enabled via URL parameter
	tracingEnabled = getUrlParameter("trace") == "1";
	if (tracingEnabled) {
		println("Tracing enabled: Will show all interpretation steps");
	}
	
	errors = sum(map(files, \f -> {
		program = getFileContent(f);
		res : Pair<OrMath_expr, string> = parseCompiledMango(f, program, orbit_parse_orbit_compiled, flow(0));
		if (res.second != "") {
			println(f + ": " + res.second);
			1
		} else {
			//println("Interpreting:");
			//println(prettyOrbit(res.first));
			
			// Create environment with tracing enabled/disabled according to URL parameter
			env = setTracing(emptyOrbEnv(), tracingEnabled);
			
			val = interpretOrbit(env, res.first);
			println("Result: " + prettyOrbit(val.result));
			0;
		}
	}));
	quit(errors);
}
