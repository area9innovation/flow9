// Automatically generated from Mango grammar
export {
	OrMath_expr ::= OrAdd, OrApproxEquals, OrApproxLessEquals, OrArray, OrBool, OrCompose, OrDerivative, OrDirectProduct, OrDivide, OrDouble, OrElementOf, OrEllipsis, OrEmptySet, OrEntailment, OrEquals, OrEquivalence, OrExists, OrExponent, OrField, OrFnDef, OrForall, OrFunction, OrFunctionType, OrGradient, OrGreaterEquals, OrGreaterThan, OrGroupAction, OrGroupOrder, OrHomomorphism, OrIdeal, OrIdentifier, OrIfElse, OrImport, OrIndex, OrInt, OrIntegral, OrIntersection, OrIsomorphism, OrLambda, OrLeftSemiDirectProduct, OrLessEquals, OrLessThan, OrLet, OrLogicalAnd, OrLogicalNot, OrLogicalOr, OrMatch, OrModulo, OrMultiply, OrNegate, OrNorm, OrNormalSubgroup, OrNotEquals, OrNotTypeAnnotation, OrOperatorSymbol, OrPartialDerivative, OrRightSemiDirectProduct, OrRule, OrSequence, OrSetComprehension, OrSetDifference, OrSetLiteral, OrString, OrSubscript, OrSubset, OrSubtract, OrSummation, OrSuperscript, OrTensorProduct, OrTypeAnnotation, OrTypeSubstitution, OrTypeVar, OrUId, OrUnion;

	OrAdd(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrApproxEquals(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrApproxLessEquals(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrArray(math_exprs : [OrMath_expr]);
	OrBool(bool1 : bool);
	OrCompose(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrDerivative(id : string, math_expr : OrMath_expr);
	OrDirectProduct(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrDivide(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrDouble(double1 : double);
	OrElementOf(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrEllipsis();
	OrEmptySet();
	OrEntailment(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr, ormath_expr : OrMath_expr);
	OrEnvBinding(id : string, math_expr : OrMath_expr);
	OrEquals(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrEquivalence(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr, ormath_expr : OrMath_expr, bool1 : bool);
	OrExists(math_exprs : [OrMath_expr]);
	OrExponent(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrField(math_expr : OrMath_expr, id : string);
	OrFnDef(id : string, id_types : [OrIdType], type_annotations : [OrType], math_expr : OrMath_expr);
	OrForall(math_exprs : [OrMath_expr]);
	OrFunction(math_expr : OrMath_expr, math_exprs : [OrMath_expr]);
	OrFunctionType(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrGradient(math_expr : OrMath_expr);
	OrGreaterEquals(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrGreaterThan(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrGroupAction(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrGroupOrder(math_expr : OrMath_expr);
	OrHomomorphism(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrIdType(id : string, type_annotations : [OrType]);
	OrIdeal(math_exprs : [OrMath_expr]);
	OrIdentifier(variable_atom : string);
	OrIfElse(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr, math_expr3 : OrMath_expr);
	OrImport(path : string);
	OrIndex(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrInt(int1 : int);
	OrIntegral(math_expr : OrMath_expr);
	OrIntersection(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrIsomorphism(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrLambda(env_bindings : [OrEnvBinding], id_types : [OrIdType], math_expr : OrMath_expr);
	OrLeftSemiDirectProduct(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrLessEquals(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrLessThan(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrLet(id_type : OrIdType, math_expr : OrMath_expr);
	OrLogicalAnd(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrLogicalNot(math_expr : OrMath_expr);
	OrLogicalOr(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrMatch(math_expr : OrMath_expr, paren : OrMath_expr);
	OrModulo(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrMultiply(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrNegate(math_expr : OrMath_expr);
	OrNorm(math_expr : OrMath_expr);
	OrNormalSubgroup(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrNotEquals(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrNotTypeAnnotation(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrOperatorSymbol(string1 : string);
	OrPartialDerivative(id : string, math_expr : OrMath_expr);
	OrRightSemiDirectProduct(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrRule(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr, ormath_expr : OrMath_expr, bool1 : bool);
	OrSequence(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrSetComprehension(math_exprs : [OrMath_expr], math_expr : OrMath_expr);
	OrSetDifference(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrSetLiteral(math_exprs : [OrMath_expr]);
	OrString(string1 : string);
	OrSubscript(math_expr : OrMath_expr, subscript : string);
	OrSubset(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrSubtract(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrSummation(math_expr : OrMath_expr);
	OrSuperscript(math_expr : OrMath_expr, superscript : string);
	OrTensorProduct(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrType(math_expr : OrMath_expr);
	OrTypeAnnotation(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrTypeSubstitution(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr, math_expr3 : OrMath_expr);
	OrTypeVar(string1 : string);
	OrUId(constructor_atom : string);
	OrUnion(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
}
