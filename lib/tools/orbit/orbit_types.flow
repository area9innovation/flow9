// Automatically generated from Mango grammar
export {
	OrMath_expr ::= OrAdd, OrCompose, OrDirectProduct, OrDivide, OrDouble, OrElementOf, OrEquals, OrExists, OrExponent, OrForall, OrFunction, OrFunctionType, OrGreaterEquals, OrGreaterThan, OrGreekLetter, OrIdentifier, OrInt, OrIntersection, OrLambda, OrLambdaMulti, OrLessEquals, OrLessThan, OrLogicalAnd, OrLogicalNot, OrLogicalOr, OrMultiply, OrNegate, OrNotEquals, OrSetComprehension, OrSetLiteral, OrString, OrSubscript, OrSubset, OrSubtract, OrSuperscript, OrTypeAnnotation, OrTypeSubstitution, OrTypeVar, OrUnion, OrVariable;

	OrRewrite ::= OrEntailment, OrEquivalence, OrMath_expr, OrRule;

	OrAdd(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrCompose(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrConditional(math_expr : OrMath_expr);
	OrDirectProduct(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrDivide(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrDouble(double1 : double);
	OrElementOf(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrEntailment(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr, conditionals : [OrConditional]);
	OrEquals(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrEquivalence(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr, conditionals : [OrConditional]);
	OrExists(math_exprs : [OrMath_expr], math_expr : OrMath_expr);
	OrExponent(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrForall(math_exprs : [OrMath_expr], math_expr : OrMath_expr);
	OrFunction(math_expr : OrMath_expr, math_exprs : [OrMath_expr]);
	OrFunctionType(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrGreaterEquals(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrGreaterThan(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrGreekLetter(greek_letter : string);
	OrIdentifier(id : string);
	OrInt(int1 : int);
	OrIntersection(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrLambda(id : string, math_expr : OrMath_expr);
	OrLambdaMulti(ids : [string], math_expr : OrMath_expr);
	OrLessEquals(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrLessThan(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrLogicalAnd(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrLogicalNot(math_expr : OrMath_expr);
	OrLogicalOr(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrMultiply(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrNegate(math_expr : OrMath_expr);
	OrNotEquals(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrRewriteSystem(rewrites : [OrRewrite]);
	OrRule(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr, conditionals : [OrConditional]);
	OrSetComprehension(math_exprs : [OrMath_expr], math_expr : OrMath_expr);
	OrSetLiteral(math_exprs : [OrMath_expr]);
	OrString(string1 : string);
	OrSubscript(math_expr : OrMath_expr, subscript : string);
	OrSubset(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrSubtract(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrSuperscript(math_expr : OrMath_expr, superscript : string);
	OrTypeAnnotation(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrTypeSubstitution(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr, math_expr3 : OrMath_expr);
	OrTypeVar(string1 : string);
	OrUnion(math_expr1 : OrMath_expr, math_expr2 : OrMath_expr);
	OrVariable(uid : string);
}
