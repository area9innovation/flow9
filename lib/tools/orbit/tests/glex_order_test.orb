import lib/glex_order;
import lib/reflect;

// Test function for glex ordering implementation
fn test_glex_ordering() = (
    println("Testing Improved Graded Lexicographic Ordering for Polynomials");
    println("=============================================\n");
    
    // Test Stage 1: Canonicalizing multiplicative terms
    println("TEST STAGE 1: CANONICALIZING MULTIPLICATIVE TERMS");
    println("==============================================\n");
    
    // Create some test cases for multiplicative terms
    let mult_tests = [
        quote(5 * 7 * x^2 * x^3 * y),  // Example from the problem statement
        quote(a * b * a^2 * c),         // Variables in different order
        quote(3 * x * 4 * y * x^2),     // Constants and variables mixed
        quote(2 * (a * b)^2 * a),       // Complex expression
        quote(x^2 * y^3 * x * y)        // Powers with same variable
    ];
    
    // Test each multiplicative term
    iter(mult_tests, \term. (
        println("Original term: " + prettyOrbit(term));
        let canonical_pairs = debug_canonical_pairs(term);
        println("Canonical pairs: " + prettyOrbit(canonical_pairs) + "\n");
    ));
    
    // Test Stage 2: Ordering additive terms (full polynomials)
    println("\nTEST STAGE 2: ORDERING ADDITIVE TERMS");
    println("===================================\n");
    
    // Create test polynomials
    let polys = [
        quote(x * y + z^3 + 1 + x^3 + y * z + x^2 * y),
        quote(3 * a^2 * b + 2 * a * b^2 + a * b * c + 5),
        quote(x * y * z + x^2 + y^2 + z^2 + x * y + y * z + x * z)
    ];
    
    // Test each polynomial
    iter(polys, \poly. (
        println("Original polynomial: " + prettyOrbit(poly));
        
        // Extract terms
        let terms = extract_terms(poly);
        println("Extracted terms: ");
        iter(terms, \term. println("  " + prettyOrbit(term)));
        
        // Sort the terms using glex ordering
        let sorted_terms = sort_terms_by_glex(terms);
        println("\nSorted terms (graded lexicographic order): ");
        iter(sorted_terms, \term. println("  " + prettyOrbit(term)));
        
        println("\n");
    ));
);

// Run the test function
test_glex_ordering();