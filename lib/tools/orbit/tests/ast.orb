fn is_number(expr : ast) = (astname(expr) == "Int" || astname(expr) == "Double");
fn is_var(expr : ast) = (astname(expr) == "Variable" || astname(expr) == "Identifier");
fn is_glex(expr) = astname(expr) == "Int" || astname(expr) == "Double" 
	|| astname(expr) == "Variable" || astname(expr) == "Identifier"
	|| (
	expr is (
		a * b => is_glex(a) && is_glex(b);
		a ^ b => (
			is_glex(a) && (astname(b) == "Int" || astname(b) == "Double";)
		);
		a => false
	)
);
fn quote(e : ast) = e;
println(is_glex(quote(x^2)));
println(is_glex(quote(a*x^2)));
println(is_glex(quote(x^2*x^4*1*5)));
println(is_glex(quote(a+b)));
