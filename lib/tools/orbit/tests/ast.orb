// Definition for the quote function, so orbit2sexpr can handle it.
fn quote(e : ast) = e;

fn is_number_ast(e_ast) = (astname(e_ast) == "Int" || astname(e_ast) == "Double");
fn is_var_ast(e_ast) = (astname(e_ast) == "UId" || astname(e_ast) == "Identifier");

// expr_param is the AST structure (because calls will be quote(...))
fn is_glex(expr_param) = (
    // If expr_param is 'x' (Identifier) or 5 (Int), these will be true.
    // No eval needed here as astname operates on the structure.
	is_var_ast(expr_param) || is_number_ast(expr_param) ||
	expr_param is (
		a * b => is_glex(a) && is_glex(b); // a and b are structures
		a ^ b => (
			is_glex(a) && is_number_ast(b) // a and b are structures
		);
		_ => false // Default fall-through for the 'is' expression
	)
);

println(is_glex(quote(x^2)));
println(is_glex(quote(a*x^2)));
println(is_glex(quote(x^2*x^4*1*5)));
println(is_glex(quote(a+b)));
