// import lib/rewrite;

import lib/array;

let rules = '[
	Rule("Simple Addition 1", (a+b => `(Added($a, $b)))),
	Rule("Simple Addition 2", (a+b => `(Added($a, $b)) if cond)),
	a * b => `(Multiplied($a, $b)),
	a * b => `(Multiplied($a, $b)) if c,
];

iter(rules, \rule -> (
	let cond = rule is (
		Rule(name, (p => q)) => (
			println(name + ":");
			println("  Pattern: " + prettyOrbit(p));
			println("  Result: " + prettyOrbit(q));
		);
		Rule(name, (p => q if cond)) => (
			println(name + ":");
			println("  Pattern: " + prettyOrbit(p));
			println("  Result: " + prettyOrbit(q));
			println("  Condition: " + prettyOrbit(cond));
		);
		(p => q) => (
			println("Anonymous rule:");
			println("  Pattern: " + prettyOrbit(p));
			println("  Result: " + prettyOrbit(q));
		);
		(p => q if cond) => (
			println("Anonymous rule with condition:");
			println("  Pattern: " + prettyOrbit(p));
			println("  Result: " + prettyOrbit(q));
			println("  Condition: " + prettyOrbit(cond));
		);
	);
));

/*
let r = applyRules('(c + d), [
	prepareSimpleRule("Simple Addition", '(a + b), '`(Added($(a), $(b)))),
]);
println(r);
*/
