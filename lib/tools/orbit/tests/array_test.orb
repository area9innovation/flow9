// Test program for the array library functions
import lib/array;

fn main() = (
    // Test data
    let numbers = [1, 2, 3, 4, 5];
    let words = ["apple", "banana", "cherry", "date", "elderberry"];
    let mixed = [1, 2, 2, 3, 2, 4, 5];
    
    // Test map
    println("map - double each number: " + prettyOrbit(map(numbers, \x.x * 2)));
    
    // Test filter
    println("filter - even numbers: " + prettyOrbit(filter(numbers, \x.x % 2 = 0)));
    
    // Test fold
    println("fold - sum: " + i2s(fold(numbers, 0, \(acc, x).acc + x)));
    
    // Test mapi
    println("mapi - multiply by index: " + prettyOrbit(mapi(numbers, \(i, x).x * i)));
    
    // Test filteri
    println("filteri - elements at even indices: " + prettyOrbit(filteri(numbers, \(i, x).i % 2 = 0)));
    
    // Test foldi
    println("foldi - sum of values * indices: " + i2s(foldi(numbers, 0, \(i, acc, x).acc + x * i)));
    
    // Test tail
    println("tail: " + prettyOrbit(tail(numbers)));
    
    // Test tailFrom
    println("tailFrom(2): " + prettyOrbit(tailFrom(numbers, 2)));
    
    // Test take
    println("take(3): " + prettyOrbit(take(numbers, 3)));
    
    // Test iter
    println("iter - printing each number:");
    iter(numbers, \x.println("  " + i2s(x)));
    
    // Test iteri
    println("iteri - printing each number with index:");
    iteri(numbers, \(i, x).println("  [" + i2s(i) + "] " + i2s(x)));
    
    // Test filtermap
    println("filtermap - square even numbers, filter odd: " + 
        prettyOrbit(filtermap(numbers, \x.if x % 2 = 0 then Some(x * x) else None())));
    
    // Test filtermapi
    println("filtermapi - keep values > index: " + 
        prettyOrbit(filtermapi(numbers, \(i, x).if x > i then Some(x) else None())));
    
    // Test removeIndex
    println("removeIndex(2): " + prettyOrbit(removeIndex(numbers, 2)));
    
    // Test removeRange
    println("removeRange(1, 3): " + prettyOrbit(removeRange(numbers, 1, 3)));
    
    // Test removeFirst
    println("removeFirst(2): " + prettyOrbit(removeFirst(mixed, 2)));
    
    // Test removeAll
    println("removeAll(2): " + prettyOrbit(removeAll(mixed, 2)));
    
    // Test contains
    println("contains(3): " + prettyOrbit(contains(numbers, 3)));
    println("contains(10): " + prettyOrbit(contains(numbers, 10)));
    
    // Test exists
    println("exists(x > 4): " + prettyOrbit(exists(numbers, \x.x > 4)));
    println("exists(x > 10): " + prettyOrbit(exists(numbers, \x.x > 10)));
    
    // Test forall
    println("forall(x > 0): " + prettyOrbit(forall(numbers, \x.x > 0)));
    println("forall(x > 2): " + prettyOrbit(forall(numbers, \x.x > 2)));
    
    // Test with strings
    println("\nString array tests:");
    println("map - uppercase: " + prettyOrbit(map(words, \s.capitalize(s))));
    println("filter - length > 5: " + prettyOrbit(filter(words, \s.strlen(s) > 5)));
    
    println("\nAll tests completed!")
);

main()