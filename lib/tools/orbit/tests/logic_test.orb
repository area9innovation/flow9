import lib/logic;

// TODO: Implement sort and uniq in the logic library

// Test CNF (Conjunctive Normal Form) with duplicates and unsorted terms
let cnf_expr = quote((a || c || b || c) && (b || d || b) && (c || a || c));
let canonical_cnf = to_cnf(cnf_expr);

println("Original CNF expression:");
println(prettyOrbit(cnf_expr));
println("Canonical CNF (sorted and unique):");
println(prettyOrbit(canonical_cnf));

// Test DNF (Disjunctive Normal Form) with duplicates and unsorted terms
let dnf_expr = quote((a && c && b && c) || (b && d && b) || (c && a && c));
let canonical_dnf = to_dnf(dnf_expr);

println("\nOriginal DNF expression:");
println(prettyOrbit(dnf_expr));
println("Canonical DNF (sorted and unique):");
println(prettyOrbit(canonical_dnf));
