import lib/sort;

// Main function to run tests
fn main() = (
    println("Stable Merge Sort Implementation");
    println("==============================\n");
   
    // Test 1: Small array
    println("Test 1: Small array");
    println("------------------");
    let arr1 = [3, 1, 4, 2];
    println("Original: " + prettyOrbit(arr1));
    println("Sorted:   " + prettyOrbit(mergeSort(arr1)));
    println("");
    
    // Test 2: Array with duplicates to demonstrate stability
    println("Test 2: Array with duplicates (demonstrating stability)");
    println("------------------------------------------------");
    let arr2 = [3, 1, 3, 2];
    println("Original: " + prettyOrbit(arr2));
    println("Sorted:   " + prettyOrbit(mergeSort(arr2)));
    println("In the sorted result, the first 3 should be from position 0");
    println("and the second 3 should be from position 2 (stable sort property).");
    println("");
    
    // Test 3: Edge cases
    println("Test 3: Edge cases");
    println("------------------");
    println("Empty array: " + prettyOrbit([]));
    println("Sorted:      " + prettyOrbit(mergeSort([])));
    println("Single element: " + prettyOrbit([42]));
    println("Sorted:         " + prettyOrbit(mergeSort([42])));
    println("");
    
    // Test 4: Already sorted array
    println("Test 4: Already sorted");
    println("---------------------");
    let arr4 = [1, 2, 3];
    println("Original: " + prettyOrbit(arr4));
    println("Sorted:   " + prettyOrbit(mergeSort(arr4)))
);

// Execute the main function
main();