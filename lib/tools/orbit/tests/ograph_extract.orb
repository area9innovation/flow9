// Test file for OGraph extraction with merged nodes

// Create a new OGraph
let g = makeOGraph("extract_test");

// Add some expressions to the graph
let expr1 = addOGraph(g, a + b);
let expr2 = addOGraph(g, b + a);
let expr3 = addOGraph(g, (a + b) * c);

println("Expression 1 (a + b) ID: " + expr1);
println("Expression 2 (b + a) ID: " + expr2);
println("Expression 3 ((a + b) * c) ID: " + expr3);

// Now merge expr1 and expr2 to establish their equivalence
println("\nMerging expr1 (a + b) and expr2 (b + a)");
let merge_result = mergeOGraphNodes(g, expr1, expr2);
println("Merge result: " + prettyOrbit(merge_result));

// Extract again to verify the merged expressions
println("\nExpressions after merge:");
println("Expression 1: " + prettyOrbit(extractOGraph(g, expr1)));
println("Expression 2: " + prettyOrbit(extractOGraph(g, expr2)));

// Let's also verify that expr3 still has its original form
println("Expression 3: " + prettyOrbit(extractOGraph(g, expr3)));

// Now let's make another merge with expr3
// First let's create a new expression: c * (a + b)
let expr4 = addOGraph(g, c * (a + b));
println("\nAdded Expression 4 (c * (a + b)) ID: " + expr4);
println("Expression 4: " + prettyOrbit(extractOGraph(g, expr4)));

// Merge expr3 ((a + b) * c) and expr4 (c * (a + b))
println("\nMerging expr3 ((a + b) * c) and expr4 (c * (a + b))");
let merge_result2 = mergeOGraphNodes(g, expr3, expr4);
println("Merge result: " + prettyOrbit(merge_result2));

// Extract again to verify the merged expressions
println("\nExpressions after second merge:");
println("Expression 3: " + prettyOrbit(extractOGraph(g, expr3)));
println("Expression 4: " + prettyOrbit(extractOGraph(g, expr4)));

// Visualize the graph structure
println("\nGraph visualization (partial):");
println("See full visualization by saving the dot output to a file");

println("\nExtraction test completed");