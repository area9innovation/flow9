import lib/logic;

// ----- EXAMPLE DEMONSTRATION -----

// Demonstrate CNF and DNF transformations
fn main() = (
    println("==== CNF and DNF Canonical Forms with Gather/Scatter ====");
    
    // Test expressions
    let test_expressions = [
        quote(!(a && b)),           // De Morgan's law test
        quote(a || (b && c)),       // OR over AND distribution (CNF)
        quote(a && (b || c)),       // AND over OR distribution (DNF)
        quote((a || b) && (!a || c)),  // A practical example - resolution candidate
        quote(a || b || c || (d && e && f))  // Multiple nested operators
    ];
    
    // Process each test case
    let count = 1;
    fold(test_expressions, count, \i, expr.(
        println("\n----- Test Case " + i2s(i) + " -----");
        println("Original: " + prettyOrbit(expr));
        println("CNF: " + prettyOrbit(to_cnf(expr)));
        println("DNF: " + prettyOrbit(to_dnf(expr)));
        i + 1
    ));
    
    "Done"
);

// Run the demonstration
main();