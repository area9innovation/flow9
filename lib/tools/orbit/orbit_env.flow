import tools/orbit/orbit_types;
import tools/runcore/core_lib;
import tools/runcore/value_types;
import tools/runcore/value_util; // For utility functions
import ds/tree;

export {
	// Environment for Orbit with bindings and result value
	OrbEnv(
		bindings : Tree<string, OrMath_expr>,
		result : OrMath_expr
	);

	// Create an empty environment
	emptyOrbEnv() -> OrbEnv;

	// Helper to retrieve variable from environment
	lookupVar(env : OrbEnv, name : string) -> Maybe<OrMath_expr>;

	// Helper to add a binding to environment
	bindVar(env : OrbEnv, name : string, value : OrMath_expr) -> OrbEnv;
}

emptyOrbEnv() -> OrbEnv {
	OrbEnv(makeTree(), OrInt(0))
}

lookupVar(env : OrbEnv, name : string) -> Maybe<OrMath_expr> {
	lookupTree(env.bindings, name)
}

bindVar(env : OrbEnv, name : string, value : OrMath_expr) -> OrbEnv {
	OrbEnv(setTree(env.bindings, name, value), env.result)
}
