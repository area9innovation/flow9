// Stable Merge Sort implementation in Orbit

// Merge function that merges two sorted arrays
// The stability is maintained by using <= instead of <
// This ensures that elements from the left array are selected first when equal
fn merge(a, b) = (
    if length(a) = 0 then b
    else if length(b) = 0 then a
    else (
        if a[0] <= b[0] then
            [a[0]] + merge(subrange(a, 1, length(a) - 1), b)
        else
            [b[0]] + merge(a, subrange(b, 1, length(b) - 1))
    )
);

// Merge sort implementation
fn mergeSort(arr) = (
    if length(arr) <= 1 then arr
    else (
        let mid = length(arr) / 2;
        let left = mergeSort(subrange(arr, 0, mid));
        let right = mergeSort(subrange(arr, mid, length(arr) - mid));
        merge(left, right)
    )
);
