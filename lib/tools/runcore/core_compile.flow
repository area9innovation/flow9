import tools/runcore/core_lib;

export {
	compileCoreFn(runcore : RunCore, fn : string) -> string;
}

compileCoreFn(runcore : RunCore, fn : string) -> string {
	if (isCoreDefined(runcore, fn)) {
		op = if (contains(["&&", "||", "==", "!=", "<=", ">", ">=", "+", "-", "*", "/"], fn)) fn else "";
		if (op != "") {
			// OK, it is an operator
			arity = getCoreArity(runcore, fn);
			if (arity == 1) {
				"\\e -> " + op + "(e)";
			} else if (arity == 2) {
				"\\a, b -> a " + op + " b";
			} else {
				println("TODO: RunCore Compile " + fn);
				"TODO: Compile " + fn;
			}
		} else if (contains(["i2s", "d2s", "i2b", "b2i", "s2i", "s2d", "list2array"], fn)) {
			fn;
		} else if (fn == "parsehex") { "parseHex"
		} else if (fn == "unescape") {
			"\\l -> deserializeString(l).first";
		} else {
			println("TODO: RunCore Compile " + fn);
			"TODO: Compile " + fn;
		}
	} else {
		println("ERROR: Can not RunCore compile unknown " + fn);
		"ERROR: " + fn + " unknown";
	}
}
