import tools/mango/mango_types;
import runtime;

export {
	invertTerm(t : Term) -> Term;
}

// Reverses sequences, and drops terms that are not useful for
// pretty printing
invertTerm(t : Term) -> Term {
	switch (t) {
		Choice(term1, term2): Choice(invertTerm(term1), invertTerm(term2));
		Construct(uid, int_0): t;
		Error(term): invertTerm(term);
		GrammarFn(id, term1, term2, term3): invertTerm(term3);
		GrammarCall(id, term): String("");
		Lower(term): Lower(invertTerm(term));
		Negate(term): String("");
		Optional(term): Optional(invertTerm(term));
		Plus(term): Plus(invertTerm(term));
		Precedence(term1, term2): Precedence(invertTerm(term1), invertTerm(term2));
		PushMatch(term): PushMatch(String(""));
		Range(char1, char2): t;
		Rule(id, term1, term2): Rule(id, invertTerm(term1), invertTerm(term2));
		Sequence(term1, term2): Sequence(invertTerm(term2), invertTerm(term1));
		StackOp(id): t;
		Star(term): Star(invertTerm(term));
		String(stringq): t;
		Variable(id): t;
	}
}
