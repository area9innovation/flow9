import tools/mango/mango_types;
import ds/set;

export {
	// Reduce to the constructs used in regexps
	mango2regexp(t : Term) -> Term;
}

mango2regexp(t : Term) -> Term {
	none = String("");
	switch (t) {
		Choice(term1, term2): Choice(mango2regexp(term1), mango2regexp(term2));
		Construct(uid, int_0): none;
		Error(term): switch (term) {
			Negate(__): none;
			default: mango2regexp(term);
		}
		GrammarFn(id, term1, term2, term3): mango2regexp(term3);
		GrammarCall(id, term): none;
		Lower(term): mango2regexp(term);
		Negate(term): Negate(mango2regexp(term));
		Optional(term): Optional(mango2regexp(term));
		Plus(term): Plus(mango2regexp(term));
		Precedence(term1, term2): Choice(mango2regexp(term1), mango2regexp(term2));
		PushMatch(term): mango2regexp(term);
		Range(char1, char2): t;
		Rule(id, term1, term2): {
			Rule(id,
				mango2regexp(term1),
				mango2regexp(term2)
			);
		}
		Sequence(term1, term2): Sequence(mango2regexp(term1), mango2regexp(term2));
		StackOp(id): none;
		Star(term): Star(mango2regexp(term));
		String(stringq): t;
		Variable(id): none;
	}
}
