import ds/tuples;
import tools/mango/mango_types;

export {
	// The core definition of a textmate language
	TmLanguage(
		// Lower-case name of the language
		name : string, 
		// What version of the plugin? 1.0.0
		version : string,
		// Human readable description of the language
		description : string,
		// What filename extensions are used? Include the .
		extensions : [string],
		// What are considered brackets in the language
		brackets : [TmBracket],
		// What is the token for line comments? //
		lineComment : string,
		// What are the tokens for block comments? /*  */
		blockComment : Pair<string, string>,
		// What are the tokens for strings? " '
		strings : [string],
		// What are the different lexing patterns?
		patterns : [TmPattern],
		// What tasks to construct
		commands : [VsCommand],
	);

	TmBracket(open : string, close : string, notIn : [string]);

	TmPattern ::= TmMatch, TmNested;
	// Name is given by https://macromates.com/manual/en/language_grammars#naming_conventions
	// Regexp is given by https://macromates.com/manual/en/regular_expressions
	TmMatch(id : string, name : string, term : Term, regexp : string);
	// For nested patterns, there is a beginning regexp and ending regexp, and another pattern inside
	// The onlyInside token decides whether the name applies to begin and end as well
	TmNested(id : string, name : string, onlyInside : bool, begin : string, end : string, insidePattern : string);

	// A command
	VsCommand(
		name : string,
		command : string,
		keybinding: string,
	);
}
