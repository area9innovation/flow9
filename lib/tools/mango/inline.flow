import tools/mango/mango_types;
import ds/tree;

export {
	// Inline these terms
	inlineTerms(inlines : Tree<string, Term>, t : Term) -> Term;
}

inlineTerms(inlines : Tree<string, Term>, t : Term) -> Term {
	rec = \tt -> inlineTerms(inlines, tt);
	switch (t) {
		Choice(term1, term2): Choice(rec(term1), rec(term2));
		Construct(uid, int_0): t;
		Error(term): Error(rec(term));
		GrammarFn(id, term1, term2, term3): {
			println("Did not expect grammar fn here: " + id);
			t;
		}
		GrammarCall(id, term): t;
		Lower(term): Lower(rec(term));
		Negate(term): Negate(rec(term));
		Optional(term): Optional(rec(term));
		Plus(term): Plus(rec(term));
		Precedence(term1, term2): Precedence(rec(term1), rec(term2));
		PushMatch(term): PushMatch(rec(term));
		Range(char1, char2): t;
		Rule(id, term1, term2): {
			if (containsKeyTree(inlines, id)) rec(term2)
			else Rule(id, rec(term1), rec(term2));
		}
		Sequence(term1, term2): Sequence(rec(term1), rec(term2));
		StackOp(id): t;
		Star(term): Star(rec(term));
		String(stringq): t;
		Variable(id): lookupTreeDef(inlines, id, t);
	}
}
