import mango/mango_types;


term2string(ttt : Term) -> string {
	switch (ttt) {
	Choice(term1, term2): {
		term2string(term1) + "|" + term2string(term2)
	}
	Construct(uid, int1): {
		uid + "/" + int1
	}
	Error(term): {
		"#" + term2string(term)
	}
	GrammarMacro(id, term): {
		"\x40" + id + "<" + term2string(term) + ">"
	}
	Lower(term): {
		"<" + term2string(term)
	}
	Negate(term): {
		"!" + term2string(term)
	}
	Optional(term): {
		term2string(term) + "?"
	}
	Plus(term): {
		term2string(term) + "+"
	}
	Precedence(term1, term2): {
		term2string(term1) + "|>" + term2string(term2)
	}
	PushMatch(term): {
		"\x24" + term2string(term)
	}
	Range(char1, char2): {
		"'" + char1 + "'-'" + char2 + "'"
	}
	Rule(id, term1, term2): {
		id + "=" + term2string(term1) + ";" + term2string(term2)
	}
	Sequence(term1, term2): {
		term2string(term1) + term2string(term2)
	}
	StackOp(id): {
		"\x40" + id
	}
	Star(term): {
		term2string(term) + "*"
	}
	String(string1): {
		"\"" + string1 + "\""
	}
	Variable(id): {
		id
	}
}

}


