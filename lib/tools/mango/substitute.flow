import tools/mango/mango_types;
import ds/tree;

export {
	substituteTerms(vars : Tree<string, string>, term : Term) -> Term;
}

substituteTerms(vars : Tree<string, string>, body : Term) -> Term {
	rec = \tt -> substituteTerms(vars, tt);
	switch (body) {
		Choice(term1, term2): Choice(rec(term1), rec(term2));
		Construct(uid, int1): body;
		Error(term): Error(rec(term));
		GrammarCall(id, term): GrammarCall(id, rec(term));
		GrammarFn(id, term1, term2, term3): GrammarFn(id, rec(term1), rec(term2), rec(term3));
		Lower(term): Lower(rec(term));
		Negate(term): Negate(rec(term));
		Optional(term): Optional(rec(term));
		Plus(term): Plus(rec(term));
		Precedence(term1, term2): Precedence(rec(term1), rec(term2));
		PushMatch(term): PushMatch(rec(term));
		Range(char1, char2): body;
		Rule(id, term1, term2): Rule(lookupTreeDef(vars, id, id), rec(term1), rec(term2));
		Sequence(term1, term2): Sequence(rec(term1), rec(term2));
		StackOp(id): body;
		Star(term): Star(rec(term));
		String(string1): body;
		Variable(id): Variable(lookupTreeDef(vars, id, id));
	}
}
