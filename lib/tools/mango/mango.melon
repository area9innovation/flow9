import mango/mango_types;
import mango/mango_grammar;
import mango/mango_interpreter;
import mango/mango_interpreter;
import mango/precedence;
import mango/rewrites;
import mango/macros;
import mango/mango_pretty;
import args;

grammarName = getUrlParameter("grammar");
if (grammarName == "") {
	println("Usage: ");
	println("mango grammar=<language.mango> [name=<name>]");
} else {
	grammar = getFileContent(grammarName);
	fullGrammarAst = mangoParse(mangoGrammar(), grammar, String(""));
	if (fullGrammarAst != String("")) {
		macro = expandMangoMacros(ref makeTree(), fullGrammarAst);
		if (false) {
			println("After macros:");
			println(macro);
			println("\nExpanding precedence:");
		};
		grammarAst = rewriteTerm(expandPrecedence(macro));

		if (getUrlParameter("savereduced") != "") {
			println(term2string(grammarAst));
		};

		if (false) {
			println("\nAfter precedence:");
			println(grammarAst);
		};
		println("Parsed " + grammarName);

		name = takeBefore(takeAfter(grammarName, "/"), ".");
		melonName = getUrlParameter("savemelon");
		if (name != "" && melonName != "") {
			melon = "import mango/mango_types;

" + name + "Grammar() -> Term {
	" + toString(grammarAst) + ";
}
";
			setFileContent(melonName, melon);
			println("Saved " + melonName);
			{}
		};
		flowName = getUrlParameter("savegrammar");
		if (name != "" && flowName != "") {
			flo = "import mango/mango_types;

export {
	" + name + "Grammar() -> Term;
}

" + name + "Grammar() -> Term {
	" + toString(grammarAst) + ";
}
";
			setFileContent(flowName, flo);
			println("Saved " + flowName);
			{}
		}
	}
}
