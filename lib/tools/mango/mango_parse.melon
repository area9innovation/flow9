import mango/mango_interpreter;
import reflection;

mangoParse(grammar : Term, content : string, def : ?) -> ? {
	env = parseMango(grammar, content, \n : string, vals -> {
		makeStructValue(n, vals, def);
	});

	// Print any errors we collected with the Error construct first:
	foldTree(env.errors, 0, \pos, error, acc -> {
		println(error + " at line " + getLinePos(content, pos, 1, 0));
	});
	// If we failed the parse, or did not parse everything, print an error 
	if (env.fail || env.i < strlen(content)) {
		println("Failed parsing at pos " + i2s(env.maxi) + ", line " + getLinePos(content, env.maxi, 1, 0));
		def;
	} else {
		headList(env.result, def);
	}
}

getLinePos(c : string, pos : int, line : int, i : int) -> string {
	if (i >= strlen(c)) {
		// The position is beyond the end of the file. Give up
		i2s(line) + ":\n";
	} else {
		// Find the next line break
		eol = strRangeIndexOf(c, "\n", i, strlen(c));
		if (eol == -1) {
			// We reached the end of the file.
			i2s(line) + ":" + i2s(pos - i + 1) + ":\n" + substring(c, i, strlen(c));
		} else if (eol >= pos) {
			// We have the position on this line, great!
			i2s(line) + ":" + i2s(pos - i + 1) + ":\n" + substring(c, i, eol - i);
		} else {
			// We need to go further - go to the next line
			getLinePos(c, pos, line + 1, eol + 1);
		}
	}
}
