import fs/filesystem;
import text/blueprint;

export {
	makeLinterCode(file : string) -> string;
}

makeLinterCode(file : string) -> string {
	name = changeFileExt(fileNameOnly(file), "");
	main = getUrlParameterDef("main", name) + "_compiled";

	parserPath = changeFileExt(file, "_compiled_parser");
	typesPath = changeFileExt(file, "_types");

	blueprint("
		// Produced by  flowcpp mango/mango.flow -- file=%file% compile=1 main=%main% linter=1
		import tools/mango/mcode_lib;
		import string;
		import net/url_parameter;
		import %parser%;
		import %types%;
		
		main() {
			files = filtermap(getAllUrlParametersArray(), \\a -> if (a[1] == \"\") Some(a[0]) else None());
			if (files == []) {
				println(\"Usage: %name%_linter <file>\");
			}
			errors = sum(map(files, \\f -> {
				program = getFileContent(f);

				res : Pair<flow, string> = parseCompiledMango(f, program, %pf%parse_%main%, flow(0));
				if (res.second != \"\") {
					println(f + \": \" + res.second);
					1
				} else 0;
			}));
			quit(errors);
		}

		"
		, [
			"file", file,
			"main", main,
			"pf", getUrlParameter("prefix"),
			"main", main,
			"parser", parserPath,
			"name", name,
			"types", typesPath,
		]
	);

}
