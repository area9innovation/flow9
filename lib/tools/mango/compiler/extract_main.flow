import tools/mango/compiler/mango2opcode;
import tools/mango/rules;

export {
	mango2opcodeWithMain(main : string, t : Term) -> MOpCode;
}

mango2opcodeWithMain(main : string, t : Term) -> MOpCode {
	rules = findRules(makeTree(), t);
	top = getTopLevel(t);

	mainCode = MoFunction(main, mango2opcode(top), MoSequence([]));
	foldTree(rules, mainCode, \r, b, acc -> {
		MoFunction(r, mango2opcode(b), acc)
	});
}

getTopLevel(t : Term) -> Term {
	switch (t) {
		Choice(term1, term2): Choice(getTopLevel(term1), getTopLevel(term2));
		Construct(uid, string1): t;
		Error(term): t;
		GrammarCall(id, term): t;
		GrammarFn(id, term1, term2, term3): t;
		Lower(term): t;
		Negate(term): t;
		Optional(term): t;
		Plus(term): t;
		Precedence(term1, term2): t;
		PushMatch(term): t;
		Range(char1, char2): t;
		Rule(id, term1, term2): getTopLevel(term2);
		Sequence(term1, term2): Sequence(getTopLevel(term1), getTopLevel(term2));
		StackOp(id): t;
		Star(term): t;
		String(string1): t;
		Variable(id): t;
	}
}
