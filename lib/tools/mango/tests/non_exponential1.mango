// Test for non-exponential grammar
// Alternatives have different first-sets
stmt = "if" expr "then" stmt "else" stmt If/3
     | "while" expr "do" stmt While/2
     | "begin" stmts "end" Block/1
     | id ":=" expr Assign/2;

stmts = stmt ";" stmts Stmts/2 | stmt Stmt/1;
expr = id Id/1 | num Num/1 | expr op expr BinOp/3;
id = 'a'-'z'+;
num = '0'-'9'+;
op = "+" Add/0 | "-" Sub/0 | "*" Mul/0 | "/" Div/0;

stmt