import runtime;

export {
	MatchValue<?> ::= MatchBool, MatchInt, MatchDouble, MatchString, MatchArray<?>, MatchNode<?>;
		MatchBool(v : bool);
		MatchInt(v : int);
		MatchDouble(v : double);
		MatchString(v : string);
		MatchArray(values : [MatchValue<?>]);
		MatchNode(v : ?);

	matchBool(v : MatchValue<?>) -> bool;
	matchInt(v : MatchValue<?>) -> int;
	matchDouble(v : MatchValue<?>) -> double;
	matchString(v : MatchValue<?>) -> string;
	matchArray(v : MatchValue<?>, fn : (MatchValue<?>) -> ?) -> [?];
	matchNode(v : MatchValue<?>) -> ?;
}

matchBool(v : MatchValue<?>) -> bool {
	switch (v) {
		MatchBool(vv): vv;
		default: false;
	}
}

matchInt(v : MatchValue<?>) -> int {
	switch (v) {
		MatchInt(vv): vv;
		default: 0;
	}
}

matchDouble(v : MatchValue<?>) -> double {
	switch (v) {
		MatchDouble(vv): vv;
		default: 0.0;
	}
}

matchString(v : MatchValue<?>) -> string {
	switch (v) {
		MatchString(vv): vv;
		default: "";
	}
}

matchArray(v : MatchValue<?>, fn : (MatchValue<?>) -> ?) -> [?] {
	switch (v) {
		MatchArray(vs): map(vs, fn);
		default: [];
	}
}

matchNode(v : MatchValue<?>) -> ? {
	switch (v) {	
		MatchNode(vv): vv;
		default: flow(0);
	}
}
