export {
	// ****** Here is a functionality for receiving PUSH notifications with Firebase Cloud Messaging service *****/

	// *** Setting up *** //
	// To setup a Firebase for your application just register it on https://console.firebase.google.com/

	// Android: to set up firebase messaging for server builds easily add a parameter firebase_notifications_json
	// which should be equal to a path to Firebase Config file (you can download it in Firebase Console https://console.firebase.google.com/ )

	// iOS: to set up firebase messaging for your application follow instructions on https://firebase.google.com/docs/cloud-messaging/ios/certs
	// For builds you have to add a parameter firebase_notifications_plist
	// which should be equal to a path to Firebase Config file (you can download it in Firebase Console https://console.firebase.google.com/ )

	// JS: to set up firebase messaging for your application
	// 1) Register web app in firebase project (https://firebase.google.com/docs/web/setup#register-app)
	// 2) Get config object (https://support.google.com/firebase/answer/7015592#web) and copy it to "www/js/firebase/firebase-config.js"
	// 3) Generate VAPID keys (https://firebase.google.com/docs/cloud-messaging/js/client#configure_web_credentials_with_fcm)
	//		and copy public key to "www/js/firebase/firebase-config.js" as const vapidKey = "<public key>"
	// 4) Copy Server key to "www/php/firebase/messaging.php"
	// 5) Update your manifest.json(https://firebase.google.com/docs/cloud-messaging/js/client#configure_the_browser_to_receive_messages) 


	// *** How to send a message using Firebase API *** //
	// Please, follow next page describing Firebase Messaging API: https://firebase.google.com/docs/cloud-messaging/http-server-ref#send-downstream
	//
	// Just to note, there is three ways to send notification (JSON-structure):
	//  1. message = { notification = { "title = "...", body = "...", "click_action" = "...", ...} }
	//  2. message = { data = { notification = { "title = "...", body = "...", "click_action" = "...", ...} } }
	//  3. message = { "title = "...", body = "...", "click_action" = "...", ...}
	//   where "click_action" is an application url to search it in the browser windows/tabs
	//
	// The first one will fire notification callback only if the application is active and focused.
	// The second one will show notification and fire notification callback only if the application is not focused or closed.
	//  Clicking on the notification windows will open exists application windows or create new one.
	// The third one should works for both cases - for focused or inactive/closed application.
	// Tested only on JS target.
	// 

	// Loads Firebase libs and initializes Firebase app.
	// JS: Required to be used before subscribe/unsubscribe
	native initializeFBApp : io (onReady : () -> void) -> void = NotificationsSupport.initializeFBApp;

	// Adds a receiver for Firebase Messages
	native addFBNotificationListener : io (
		(id : string, title : string, body : string, from : string, stamp : int, data : [[string]]) -> void
	) -> () -> void = NotificationsSupport.addFBNotificationListener;

	// Sets up a refresh token callback which is called once Firebase server refreshes a token.
	// Token can be used to identify the application on the device.
	// JS: Not implemented in SDK
	native onRefreshFBToken : io ((token : string) -> void) -> () -> void = NotificationsSupport.onRefreshFBToken;

	// Returns user token in callback
	native getFBToken : io ((token : string) -> void) -> void = NotificationsSupport.getFBToken;

	// Required to call if you wish to send messages by topics.
	// Subscribes an applcation to receive messages by given topic name.
	native subscribeToFBTopic : io (name : string) -> void = NotificationsSupport.subscribeToFBTopic;

	// Unsubscribes an application from receiving messages for given topic.
	native unsubscribeFromFBTopic : io (name : string) -> void = NotificationsSupport.unsubscribeFromFBTopic;

	//
	native subscribeOnBackgroundMessages : io (
        delay : int,
        onOK : () -> void,
        onError : (string) -> void
    ) -> () -> void = NotificationsSupport.subscribeOnBackgroundMessages;
}