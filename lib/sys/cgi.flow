export {
	// Add response header
	native addHttpHeader : io (string) -> void = Native.addHttpHeader;

	// Get server parameter
	native getCgiParameter : io (string) -> string = Native.getCgiParameter;

	getCgiBaseAppUrl() -> string;
}

// Mock getCgiParameter for non-cgi targets
getCgiParameter(name : string) -> string { "" }

getCgiBaseAppUrl() -> string {
	serverName = getCgiParameter("SERVER_NAME");

	getParameter = \parameter, alternative -> {
		param = getCgiParameter(parameter);
		if (param == "") {
			getCgiParameter(alternative)
		} else {
			param
		}
	}

	prefix = getParameter("HTTP_X_FORWARDED_PROTO", "REQUEST_SCHEME");
	port = getParameter("HTTP_X_FORWARDED_PORT", "SERVER_PORT");

	isDefaultPort =
		port == "" ||
		(prefix == "http" && port == "80") ||
		(prefix == "https" && port == "443");
	port2 = if (isDefaultPort) "" else ":" + port;

	prefix + "://" + serverName + port2 + "/";
}
