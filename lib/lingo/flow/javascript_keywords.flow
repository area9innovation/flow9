import ds/set;

export {
	js_keyword_set = fold(
		// https://developer.mozilla.org/en/JavaScript/Reference/Reserved_Words
		[
			"break", "case", "catch", "console", "continue", "debugger", "default", "delete",
			"do", "else", "finally", "for", "function", "if", "in", "instanceof", "new", "return",
			"switch", "this", "throw", "try", "typeof", "var", "void", "while", "with",

			"class", "const", "enum", "export", "extends", "import", "super", "implements",
			"interface", "let", "null", "package", "private", "protected", "public", "static", "yield",

			// https://github.com/Microsoft/TypeScript/issues/2536
			"any", "as", "boolean", "constructor", "declare", "enum", "from", "get", "module", "null", "number", "of", "require", "set", "string", "symbol", "type", "FALSE", "TRUE",
		],
		makeSet(), insertSet
	);

	js_debug_renamings = foldSet(js_keyword_set, makeTree(), \t,v -> setTree(t,v,v+"__"));
	js_debug_keywords = fold(
		[
			"arguments",

			// Built in methods on functions
			"arity", "caller", "constructor", "length", "name",

			// Built in name of a library
			"js",

			// Names that google closure compiler does not like
			"char", "byte",

			// And some of our shortcuts
			"OTC", "CMP"
		],
		js_keyword_set, insertSet
	);

	js_identifier_chars = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	js_identifier_char_cnt = strlen(js_identifier_chars);

	formatId(id : int) -> string {
		char = getCharAt(js_identifier_chars, id % js_identifier_char_cnt);
		remv = id / js_identifier_char_cnt;
		if (remv > 0) char + formatId(remv-1) else char;
	}

	js_identifier_chars1 = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	js_identifier_char1_cnt = strlen(js_identifier_chars1);

	formatIdSmall(id : int) -> string {
		char = getCharAt(js_identifier_chars1, id % js_identifier_char1_cnt);
		remv = id / js_identifier_char1_cnt;
		out = if (remv > 0) char+formatId(remv-1) else char;

		if (containsSet(js_keyword_set, out)) out+"_" else out;
	}

	js_release_renamings = {
		inits = fold(
			// This list of fields is guaranteed to get single-letter names:
			[
				"value", "first", "second", "third", "fourth",
				"key", "form",  "x", "y", "width", "height",
				"style", "name", "color", "text", "size",
				"left", "right", "top", "bottom", "widthHeight",
				"alpha", "layers", "path", "op", "args",
				"id", "type", "a", "b", "l", "r", "v", "f", "fn"
			],
			Pair(0, makeTree()),
			\prev,name -> Pair(prev.first+1, setTree(prev.second, name, formatIdSmall(prev.first)))
		);

		Pair(
			inits.first,
			fold(
				// These are used by natives and must not be obfuscated:
				[
					"head", "tail" // List
				],
				inits.second,
				\t,n -> setTree(t,n,n)
			)
		);
	};
}