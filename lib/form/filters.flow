// Â© Copyright 2011 Area9 Technologies.

import form/form;
import form/gui;

export {
	// Simplified, commonly occuring bevel filter
	BevelFilter(radius : double, form : Form) -> Form;
	
	// Add a shadow right, below
	ShadowFilter(form : Form) -> Form;
	ShadowFilter2(strength: double, form: Form) -> Form;
	
	// Same as shadow filter but with a hair wide shadow on the right to look ok on white background
	WhiteSafeShadowFilter(form : Form) -> Form;
	
	// Add a shadow around in all directions
	ShadowAround(form : Form) -> Form;

	// Workaround for fast shadows, behind we have Group([Graphics])
	BehindShadowAround(makeFrame : (width : double, height : double) -> Graphics, ui : Form) -> Form;
	
	// Add a customized shadow around in all directions
	CustomShadowAround(color: int, alpha: double, radius: double, place: double, content: Form) -> Form;
	CustomShadowAround2(color: int, alpha: double, radius: double, place: double, fallback: bool, content: Form) -> Form;
	
	// Concave filter
	ConcaveBevelFilter(form : Form) -> Form;
}

BevelFilter(radius : double, form : Form) {
	Filter(
		[ Bevel([Placement(45.0, 1.0), Color(0xffffff, 0.5), ShadowColor(0x000000, 0.5), Spread(2.0), Radius(radius)]) ],
		form
	);
}

ConcaveBevelFilter(form : Form) {
	Filter([
		Bevel([Placement(45.0, 0.3), Color(0x000000, 0.7), ShadowColor(0xffffff, 0.9), Spread(4.0), Radius(4.0)])], 
		form
	)
}


WhiteSafeShadowFilter(form : Form) {
	Filter([DropShadow([Placement(220.0, 1.0), Color(0x222222, 0.9), Radius(0.0), Spread(0.2)])],
		Filter(
			[
				DropShadow([Placement(45.0, 5.0), Color(0x555555, 0.9), Radius(5.0), Spread(1.0)])
			],
			form
		)
	)
}

ShadowFilter(form : Form) {
	Filter(
		[
			DropShadow([Placement(45.0, 5.0), Color(0x555555, 0.9), Radius(5.0), Spread(1.0)])
		],
		form
	);
}

ShadowFilter2(strength, form) {
	Filter(
		[
			DropShadow([Placement(45.0, strength), Color(0x555555, 0.9), Radius(strength), Spread(1.0)])
		],
		form
	);	
}

CustomShadowAround(color: int, alpha: double, radius: double, place: double, content) {
	CustomShadowAround2(color, alpha, radius, place, false, content)
}

CustomShadowAround2(color: int, alpha: double, radius: double, place: double, fallback: bool, content) {
	if (fallback || targetNoFilters()) {
		Rounded(radius,
			[Stroke(color), StrokeOpacity(alpha), StrokeWidth(place), Fill(0xf8f8f8)],
			content
		)
	} else {
		Filter(
			map([45.0, -45.0, 135.0, -135.0], \dir -> DropShadow([Color(color, alpha), Radius(radius), Placement(dir, place), UseBoxShadow()])),
			content
		)			
	}
}

ShadowAround(content) {
	CustomShadowAround(0x00000, 0.15, 5.0, 5.0, content);
}

BehindShadowAround(makeFrame : (width : double, height : double) -> Graphics, ui : Form) -> Form {
	Behind(
		\w, h -> {
			frame = makeFrame(w, h);

			Group(concat(
				map([45.0, -45.0, 135.0, -135.0], \dir -> {
					Filter([DropShadow([Color(0x595959, 0.05), Radius(5.0), Placement(dir, 5.0)])],
						frame
					)
				}),
				[frame]
			))
		},
		ui
	)

}
