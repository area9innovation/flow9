import behaviour;
import frp;

rbConnectStarCommon(
	cell : FrpValue<?>,
	behaviours : [DynamicBehaviour<flow>],
	getFn : () -> ?,
	setFn : (?) -> void,
) -> void {
	eventFn = \event : FrpEventType -> {
		switch(event) {
			FrpEventSetValue(): {
				if (rIsUpdated(cell)) setFn(rget(cell));
			}
			FrpEventSetElement(index): {}
			FrpEventUpdated(): {}
			FrpEventOutdated(): {}
		}
	}

	bEventFn = \__-> {

	}
	uns = rAddEventListeners([cell], eventFn); // return?
	unsArr = map(behaviours, \b -> subscribe(b, bEventFn));
	rAddDisposer(cell, \-> applyall(unsArr));
}
