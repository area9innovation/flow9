import behaviour;
export {
	CharacterStyle ::= BasicCharacterStyle, Underlined, Sharpness, EscapeHTML, SetRTL, TextWidthInspector, SkipOrderCheck, PreventTextNodeWidthCalculation;
	BasicCharacterStyle ::= FontFamily, FontSize, Fill, FillOpacity, LetterSpacing, WordSpacing, LineHeightPercent, NeedBaseline, BackgroundFill, BackgroundFillOpacity;
		FontFamily : (name : string);
			emptyFontFamily = FontFamily("");
		FontSize : (size : double);
		// Text color. This is 0x00RRGGBB, and can not have alpha channel. Use FillOpacity for that
		Fill : (color : int);
		// This is the alpha channel from 0.0 to 1.0
		FillOpacity : (opacity : double);
		LetterSpacing : (spacing : double);
		WordSpacing : (spacing : Behaviour<double>);
		LineHeightPercent : (percent : double);
		// Enable fine character positioning in center of text line, true by default
		NeedBaseline : (need : bool);
		Sharpness : (sharpness : int, antiAliasType : FontAntiAliasType, gridFitType : FontGridFitType);
			FontAntiAliasType ::= FontAntiAliasNormal, FontAntiAliasAdvanced;
				FontAntiAliasNormal : ();
				FontAntiAliasAdvanced : ();

			FontGridFitType ::= FontGridFitNone, FontGridFitPixel, FontGridFitSubpixel;
				FontGridFitNone : ();
				FontGridFitPixel : ();
				FontGridFitSubpixel : ();

		// This is 0x00RRGGBB, and can not have alpha channel.
		BackgroundFill : (color : int);
		BackgroundFillOpacity : (opacity : double);
		Underlined(style : [GraphicsStyle]);
		EscapeHTML(escape : bool);
		SetRTL(rtl : bool);
		TextWidthInspector(width : DynamicBehaviour<double>); // Inspector
		SkipOrderCheck(); // Intended for using into wigi. Increases efficiency of long texts rendering.
		PreventTextNodeWidthCalculation(); // Intended for using into wigi. Disables using more accurate width calculation. Could be deleted later.

	GraphicsStyle ::= Fill, FillOpacity, GradientFill, RadialGradient, Stroke, StrokeOpacity, StrokeWidth, StrokeLineGradient, UseSvg;
		// This is 0x00RRGGBB, and can not have alpha channel. Use StrokeOpacity for that.
		Stroke : (colour : int);
		// This is the alpha channel from 0.0 to 1.0
		StrokeOpacity : (opacity : double);
		StrokeWidth : (width : double);
		// Linear Gradients - rotation is in degrees
		GradientFill : (rotation : double, points : [GradientPoint]);
		RadialGradient : ();
		StrokeLineGradient : (rotation : double, points : [GradientPoint]);
			// Alpha is 0-1, offset is 0-1 as well
			GradientPoint : (color : int, alpha : double, offset : double);
		// JS + html renderer only. Force <svg> instead of <div>.
		UseSvg();
		StaticGraphicOp ::= MoveTo, LineTo, CubicBezierTo, QuadraticBezierTo, ClosePath, StaticGraphicShape;
			MoveTo : (x : double, y : double);
			LineTo : (x : double, y : double);
			CubicBezierTo : (x : double, y : double, controlX : double, controlY : double);
			QuadraticBezierTo : (x : double, y : double, controlX : double, controlY : double);
			ClosePath : ();

			StaticGraphicShape ::= GRect, GRoundedRect, GEllipse, GCircle;
				GRect : (x : double, y : double, width : double, height : double);
				GRoundedRect : (x : double, y : double, width : double, height : double, radius : double);
				GEllipse : (x : double, y : double, width : double, height : double);
				GCircle : (x : double, y : double, radius : double);
}
