import tropic/tropic;
import sys/target;

export {
	tparagraphStyle2charStyle(s : [TParagraphStyle]) -> [CharacterStyle];
	tcharacterStyle2charStyle(s : [TCharacterStyle]) -> [CharacterStyle];
	tcharacterStyle2FTextStyle(style : [TCharacterStyle]) -> [FTextStyle];
	tgraphicsStyle2graphicsStyle(s : [TGraphicsStyle]) -> [GraphicsStyle];

	// Make a zero-width space character.
	tzeroWidthSpace(s : [TCharacterStyle]) -> Tropic;

	// Makes Transform constant if isCons true
	makeConst(isCons : bool) -> (Transform<?>) -> Transform<?>;

	maxMetrics(fm1 : TFormMetrics, fm2 : TFormMetrics) -> TFormMetrics {
		TFormMetrics(
			fmax(fm1.width, fm2.width),
			fmax(fm1.height, fm2.height),
			fmax(fm1.baseline, fm2.baseline)
		);
	};

	minMetrics(fm1 : TFormMetrics, fm2 : TFormMetrics) -> TFormMetrics {
		TFormMetrics(
			fmin(fm1.width, fm2.width),
			fmin(fm1.height, fm2.height),
			fmin(fm1.baseline, fm2.baseline)
		);
	}

	fnMetrics(fm1 : TFormMetrics, fm2 : TFormMetrics, fn : FFn2<double, double, double>) -> TFormMetrics;

	wh2TFormMetrics(wh : Transform<WidthHeight>) -> TFormMetrics;
}

tparagraphStyle2charStyle(style : [TParagraphStyle]) -> [CharacterStyle] {
	filtermap(style, \st ->
		switch (st) {
			CharacterStyle() : {a : Maybe<CharacterStyle> = Some(st); a}
			default : None()
		}
	)
}

tcharacterStyle2charStyle(style : [TCharacterStyle]) -> [CharacterStyle] {
	filtermap(style, \st ->
		switch (st) {
			CharacterStyle() : {a : Maybe<CharacterStyle> = Some(st); a}
			default : None()
		}
	)
}

tcharacterStyle2FTextStyle(style : [TCharacterStyle]) -> [FTextStyle] {
	filtermap(style, \st ->
		switch (st) {
			FTextStyle() : {a : Maybe<FTextStyle> = Some(st); a}
			default : None()
		}
	)
}

tgraphicsStyle2graphicsStyle(style : [TGraphicsStyle]) -> [GraphicsStyle] {
	filtermap(style, \st ->
		switch (st) {
			GraphicsStyle() : {a : Maybe<GraphicsStyle> = Some(st); a}
			default : None()
		}
	)
}

tzeroWidthSpace(s : [TCharacterStyle]) -> Tropic {
	// The zero-width space character \u200b does not work in c++, and the soft hyphen is 3 pixels wide
	t = TText("\u200b", s);
	if (cpp) {
		TScale(const(Factor(0.0, 1.0)), t);
	} else {
		t;
	}
}

makeConst(isCons : bool) -> (Transform<?>) -> Transform<?> {
	if (isCons)
		\tr -> const(fgetValue(tr))
	else
		idfn
}

fnMetrics(fm1 : TFormMetrics, fm2 : TFormMetrics, fn : FFn2<double, double, double>) -> TFormMetrics {
	TFormMetrics(
		fselect2(fm1.width, fm2.width, fn),
		fselect2(fm1.height, fm2.height, fn),
		fselect2(fm1.baseline, fm2.baseline, fn)
	);
}

wh2TFormMetrics(wh : Transform<WidthHeight>) -> TFormMetrics {
	TFormMetrics(
		fwidth(wh),
		fheight(wh),
		fheight(wh)
	)
}
