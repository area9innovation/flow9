import behaviour;
import rendersupport;

export {
	setGlobalPrintModeListeners() -> void;
	getGlobalPrintModeState() -> Transform<bool>;
}

globalPrintModeB : DynamicBehaviour<bool> = make(false);
globalPrintListenersInitialized : ref bool = ref false;

getGlobalPrintModeState() -> Transform<bool> {
	globalPrintModeB
}

setGlobalPrintModeListeners() -> void {
	if (!^globalPrintListenersInitialized) {
		globalPrintListenersInitialized := true;
		addEventListener(getStage(), "beforeprint", \ -> {
			nextDistinct(globalPrintModeB, true);
		}) |> ignore;

		addEventListener(getStage(), "afterprint", \ -> {
			nextDistinct(globalPrintModeB, false);
		}) |> ignore;

		devtrace("setGlobalPrintModeListeners: beforeprint and afterprint event listeners inizialized");
	}
}