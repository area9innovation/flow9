import form/paragraph;
import tropic/tropic_paragraph_types;

export {
	makeTZeroSpaceElement(style : [CharacterStyle]) -> Tropic;
	makeTEmptyLineInspectElement(indexing : int, style : [CharacterStyle]) -> TInspectElement;
	addUnderlineToTropic(tropic : Tropic, color : int, doubleLine : bool) -> Tropic;
}

TLineByWidth(color : int, width : Tropic) -> Tropic {
	TRectangle([Fill(color)], TGroup2(TWidth(width), TFixed(0., 1.)))
}

addUnderlineToTropic(tropic : Tropic, color : int, doubleLine : bool) -> Tropic {
	TCopySize2(tropic, \size, view -> if (doubleLine)  TLines([
		TBorder(0., 0., 0., -2., view),
		TBorder(0., 0., 0., 1., TLineByWidth(color, size)),
		TLineByWidth(color, size)
	]) else TLines2(
		TBorder(0., 0., 0., -1., view),
		TLineByWidth(color, size)
	));
}

makeTSpace(space : string, style : [CharacterStyle]) -> TWord {
	if (space == "\u200b") TZeroWidthSpace(style) else TSpace(style)
}

makeTZeroSpaceElement(style : [CharacterStyle]) -> Tropic {
	spaceMetrics = getStaticFormSize(Text(" ", style));
	TBaselineOffset(const(spaceMetrics.baseline), TFixed(0., spaceMetrics.height));
}

makeTEmptyLineInspectElement(indexing : int, style : [CharacterStyle]) -> TInspectElement {
	TInspectElement(
		ParaElementInspector(make(indexing), make(0.), make(0.), makeWH(), make(0.0), make(-1), make(false)),
		makeTZeroSpaceElement(style)
	)
}