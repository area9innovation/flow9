import preprocessor/preprocessor;

testCases = [
	Pair("", ""),
	Pair("#ifdef FALSE_CONDITION #endif", ""),
	Pair("#ifdef FALSE_CONDITION abc = 'abc'+ { Some(one()) };#endif", ""),
	Pair("#ifdef TRUE_CONDITION abc = 'abc'+ { Some(one()) }; #else bac = 'bac'+ { Some(two()) }; #endif", "abc = 'abc'+ { Some(one()) }; "),
	Pair("#ifdef FALSE_CONDITION abc = 'abc'+ { Some(one()) }; #else bac = 'bac'+ { Some(two()) }; #endif", "bac = 'bac'+ { Some(two()) }; "),
	Pair("#ifdef FALSE_CONDITION abc = 'abc'+ { Some(one()) }; #elif TRUE_CONDITION cab = 'cab'+ { Some(three()) }; #else bac = 'bac'+ { Some(two()) };  #endif", "cab = 'cab'+ { Some(three()) }; "),
	Pair("
//#ifdef FALSE_CONDITION
abc = 'abc'+ { Some(one()) };
//#else
//bac = 'bac'+ { Some(two()) };
//#endif",
		"//#ifdef FALSE_CONDITION
abc = 'abc'+ { Some(one()) };
//#else
//bac = 'bac'+ { Some(two()) };
//#endif"),
];

main() {
	println("Testing total cases of " + i2s(length(testCases)));

	iteri(testCases, \i, case -> {
		header = "Test case " + i2s(i + 1) + " ";
		res = preprocessSource(case.first, PreprocessorInfo(["TRUE_CONDITION"]));

		if (res != case.second)
			println(header + "FAILED" + "\nExpected:\n" + case.second + "\nGot:\n" + res)
		else
			println(header + "PASSED");
	})
}
