import string;

export {

	// Create a binary hash of a binary string (only lower 8 bytes can be used)
	// Support algorithms "md5", "sha1", "sha256"
	// Return None on unknown algorithms or none 8 bit strings.
	hashAlgorithmM(binarySource: string, algorithm: string) -> Maybe<string>;
}

hashAlgorithmM(binarySource: string, algorithm: string) -> Maybe<string>
{
	r: string = hashAlgorithm(binarySource, algorithm);
	if (strlen(r) == 0) {
		// hashAlgorithm failed, or not implemented
		None();
	} else {
		Some(r);
	}
}

// Returns a empty string on errors.
native hashAlgorithm: (binarySource: string, algorithm: string) -> string = FlowHash.hashAlgorithm;

// Fallback is to always fail
hashAlgorithm(binarySource: string, algorithm: string) -> string {
	"";
}

