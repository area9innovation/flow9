export {
	/*

	This module provides FastCGI server native.
	Currently it only works in Java backend.

	Suggested usage is something like this:

	import server/fastcgi;
	import string;

	main() {
		rn = fromCharCode(13) + fromCharCode(10);
		runFastCGIServer (
			9000,
			\path : string, method : string, query : string, request_data : string, props : [string] -> {
				"Status: 200" + rn +
				"Content-Type: text/plain" + rn + rn +
				"Path: " + path + rn +
				"Method: " + method + rn +
				"Query: " + query + rn +
				"Data: " + request_data + rn;
			},
			\ -> {
				"Status: 404" + rn +
				"Content-Type: text/plain" + rn + rn + "error!";
			}
		);
	}

	FastCGI server expects two methods:
	- callback, which returns full HTTP response (i.e. text, conforming HTTP standard).
	- error response, returning full HTTP response as well.

	(Things may change in the future and full response might not be required).

	Implemented server is single threaded and function runFastCGIServer() normally never returns.

	*/
	native runFastCGIServer : (
		port : int,
		onMessage : (path : string, method : string, query : string, request_data : string, props : [string]) -> string,
		onError : () -> string
	) -> void = FastCgi.runFastCGIServer;
}