export {
	// Normally all these functions are eliminated from program before passing it to backends.

	// Speculative function, used to ask to compute a constant value during compilation.
	// In case a compile-time computation fails, the error will be reported
	compileTime(v: ?) -> ? {
		v
	}

	// Speculative function, used to ask to compute a constant value during compilation.
	// In case a compile-time computation fails, the default value is returned
	compileTimeDef(v: ?, def: ?) -> ? {
		def
	}

	// Speculative function, used to make output of computed constant values during compilation.
	messageConstEval(msg: string, v: ?) -> ? {
		v
	}

	// Speculative function, used to print a message during compilation.
	printlnConstEval(msg: string) -> void {
	}

	// Speculative function, used to force a run-time computation of an exression.
	forbidConstEval(v: ?) -> ? {
		v
	}

	// Speculative function, used to force a compile-time computation of an exression.
	forceConstEval(v: ?) -> ? {
		v
	}
}
