export {
	native createPasswordHash : (password : string) -> string = FlowPassword.createHash;

	native validatePasswordHash : (
		password : string, 
		hash : string 
	) -> bool = FlowPassword.validateHash;

	// < 0: means no expiration
	// 0: use default expiration time (84600 sec -> 1 day)
	// > 0: use specified value 
	native getPasswordValidationStringExp : (exp: int) -> string = FlowPassword.getPasswordValidationString;
	// get validation string without expiration (create_reset_password_validation_string(null))
	getPasswordValidationString : () -> string;

	native getValidationStringExpiration : (vs : string) -> int = FlowPassword.getValidationStringExpiration;
	native checkValidationStringExpirationExp : (vs : string, exp: int) -> bool = FlowPassword.checkValidationStringExpiration;
	checkValidationStringExpiration : (vs : string) -> bool;
}

createPasswordHash(password : string) -> string {
	""; // Not implemented
}

validatePasswordHash(password : string, hash : string) -> bool {
	false; // Not implemented
}

getPasswordValidationStringExp(exp : int) -> string {
	""; // Not implemented
}

getPasswordValidationString() -> string {
	getPasswordValidationStringExp(-1);
}

getValidationStringExpiration(vs : string) -> int {
	0; // Not implemented
}

checkValidationStringExpirationExp(vs : string, exp: int) -> bool {
	false; // Not implemented
}

checkValidationStringExpiration(vs : string) -> bool {
	checkValidationStringExpirationExp(vs, 0);
}
