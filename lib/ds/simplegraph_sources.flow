import ds/simplegraph;

export {
    // A structure to represent a graph component with its sources and sinks
    SimpleSourceGraph(g : SimpleGraph<?, ??>, sources : [?], sinks : [?]);
    
    // Splits a SimpleGraph into components and identifies sources and sinks for each one
    findSimpleGraphComponentsSourcesSinks(graph : SimpleGraph<?, ??>) -> [SimpleSourceGraph<?, ??>];
}

// Finds all source nodes (nodes with no incoming edges) using pre-calculated data
findSimpleGraphSources(nodes : [?], edges : [SimpleEdge2<?, ??>]) -> [?] {
    // Create a set of all nodes that have incoming edges
    nodesWithIncoming = fold(edges, makeSet(), \acc, edge -> {
        insertSet(acc, edge.to)
    });
    
    // Sources are nodes that don't have incoming edges
    filter(nodes, \node -> !containsSet(nodesWithIncoming, node));
}

// Finds all sink nodes (nodes with no outgoing edges) using pre-calculated data
findSimpleGraphSinks(nodes : [?], edges : [SimpleEdge2<?, ??>]) -> [?] {
    // Create a set of all nodes that have outgoing edges
    nodesWithOutgoing = fold(edges, makeSet(), \acc, edge -> {
        insertSet(acc, edge.from)
    });
    
    // Sinks are nodes that don't have outgoing edges
    filter(nodes, \node -> !containsSet(nodesWithOutgoing, node));
}

// Splits a graph into components and identifies sources and sinks for each component
findSimpleGraphComponentsSourcesSinks(graph : SimpleGraph<?, ??>) -> [SimpleSourceGraph<?, ??>] {
    // Split the graph into connected components
    components = splitSimpleGraphComponents(graph);
    
    // For each component, find sources and sinks
    map(components, \component -> {
        // Calculate these expensive operations once per component
        nodes = getTreeKeys(component.nodes);
        edges = getSimpleGraphEdges2(component);
        
        // Pass pre-calculated data to the helper functions
        sources = findSimpleGraphSources(nodes, edges);
        sinks = findSimpleGraphSinks(nodes, edges);
        
        SimpleSourceGraph(component, sources, sinks)
    });
}