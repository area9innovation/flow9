import ds/frp;

export {
	rconnect1(from : Frp1<?>, to : FrpValue1<?>) -> () -> void;
	rconnectf1(from : Frp1<?>, to : FrpValue1<?>) -> () -> void;

	rmakeSubscribe1(v : Frp1<?>, fn : (?) -> void) -> () -> () -> void;
	rmakeSubscribe2(v : Frp2<?, ??>, fn : (?, ??) -> void) -> () -> () -> void;

	// Helpers to set up a subscription, but record the disposer into the target
	rsubscribe1To1(v : Frp1<?>, fn : (?) -> void, target : FrpValue1<??>) -> void;
	rsubscribe1To2(v : Frp1<?>, fn : (?) -> void, target : FrpValue2<??, ???>) -> void;
	rsubscribe2To1(v : Frp2<?, ??>, fn : (?, ??) -> void, target : FrpValue1<???>) -> void;
}

rconnect1(from : Frp1<?>, to : FrpValue1<?>) -> () -> void {
	rsubscribef1(from, \v -> rnext1(to, v));
}

rconnectf1(from : Frp1<?>, to : FrpValue1<?>) -> () -> void {
	rsubscribef1(from, \v -> rnextf1(to, v));
}


rmakeSubscribe1(v : Frp1<?>, fn : (?) -> void) -> () -> () -> void {
	\ -> {
		rsubscribe1(v, fn);
	}
}

rmakeSubscribe2(v : Frp2<?, ??>, fn : (?, ??) -> void) -> () -> () -> void {
	\ -> {
		rsubscribe2(v, fn);
	}
}

rsubscribe1To1(v : Frp1<?>, fn : (?) -> void, target : FrpValue1<??>) -> void {
	u = rsubscribe1(v, fn);
	raddDisposer1(target, u);
}

rsubscribe1To2(v : Frp1<?>, fn : (?) -> void, target : FrpValue2<??, ???>) -> void {
	u = rsubscribe1(v, fn);
	raddDisposer2(target, u);
}

rsubscribe2To1(v : Frp2<?, ??>, fn : (?, ??) -> void, target : FrpValue1<???>) -> void {
	u = rsubscribe2(v, fn);
	raddDisposer1(target, u);
}
