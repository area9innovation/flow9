import date;

export {
	Timezone(
		id : string,
		name : string
	);

	getTimezones() -> [Timezone];

	// all native functions are implemented only in js and java
	// if timezoneId is empty string UTC timezone is used
	native getTimezoneOffset : (utcStamp : double, timezoneId : string) -> double = Native.getTimezoneOffset;
	native getTimezoneTimeString : (utcStamp : double, timezoneId : string, language : string) -> string = Native.getTimezoneTimeString;
	native getLocalTimezoneId : () -> string = Native.getLocalTimezoneId;

	getTimezoneOffsetString(offset : double) -> string;
}

timezones = [
	Timezone("America/Adak", "Aleutian"), // (UTC-10:00)
	Timezone("Pacific/Honolulu", "Hawaii"), // (UTC-10:00)
	Timezone("Pacific/Marquesas", "Marquesas Islands"), // (UTC-09:30)
	Timezone("America/Anchorage", "Alaska"), // (UTC-09:00)
	Timezone("Pacific/Gambier", "Coordinated Universal Time-09"), // (UTC-09:00)
	Timezone("America/Tijuana", "Baja California"), // (UTC-08:00)
	Timezone("Pacific/Pitcairn", "Coordinated Universal Time-08"), // (UTC-08:00)
	Timezone("America/Los_Angeles", "Pacific Time (US & Canada)"), // (UTC-08:00)
	Timezone("America/Phoenix", "Arizona"), // (UTC-07:00)
	Timezone("America/Chihuahua", "La Paz, Mazatlan"), // (UTC-07:00)
	Timezone("America/Denver", "Mountain Time (US & Canada)"), // (UTC-07:00)
	Timezone("America/Whitehorse", "Yukon"), // (UTC-07:00)
	Timezone("America/Guatemala", "Central America"), // (UTC-06:00)
	Timezone("America/Chicago", "Central Time (US & Canada)"), // (UTC-06:00)
	Timezone("Pacific/Easter", "Easter Island"), // (UTC-06:00)
	Timezone("America/Mexico_City", "Guadalajara, Mexico City, Monterrey"), // (UTC-06:00)
	Timezone("America/Regina", "Saskatchewan"), // (UTC-06:00)
	Timezone("America/Bogota", "Bogota, Lima, Quito, Rio Branco"), // (UTC-05:00)
	Timezone("America/Cancun", "Chetumal"), // (UTC-05:00)
	Timezone("America/New_York", "Eastern Time (US & Canada)"), // (UTC-05:00)
	Timezone("America/Port-au-Prince", "Haiti"), // (UTC-05:00)
	Timezone("America/Havana", "Havana"), // (UTC-05:00)
	Timezone("America/Indianapolis", "Indiana (East)"), // (UTC-05:00)
	Timezone("America/Grand_Turk", "Turks and Caicos"), // (UTC-05:00)
	Timezone("America/Asuncion", "Asuncion"), // (UTC-04:00)
	Timezone("America/Halifax", "Atlantic Time (Canada)"), // (UTC-04:00)
	Timezone("America/Caracas", "Caracas"), // (UTC-04:00)
	Timezone("America/Cuiaba", "Cuiaba"), // (UTC-04:00)
	Timezone("America/La_Paz", "Georgetown, La Paz, Manaus, San Juan"), // (UTC-04:00)
	Timezone("America/Santiago", "Santiago"), // (UTC-04:00)
	Timezone("America/St_Johns", "Newfoundland"), // (UTC-03:30)
	Timezone("America/Araguaina", "Araguaina"), // (UTC-03:00)
	Timezone("America/Sao_Paulo", "Brasilia"), // (UTC-03:00)
	Timezone("America/Cayenne", "Cayenne, Fortaleza"), // (UTC-03:00)
	Timezone("America/Argentina/Buenos_Aires", "City of Buenos Aires"), // (UTC-03:00)
	Timezone("America/Godthab", "Greenland"), // (UTC-03:00)
	Timezone("America/Montevideo", "Montevideo"), // (UTC-03:00)
	Timezone("America/Punta_Arenas", "Punta Arenas"), // (UTC-03:00)
	Timezone("America/Miquelon", "Saint Pierre and Miquelon"), // (UTC-03:00)
	Timezone("America/Bahia", "Salvador"), // (UTC-03:00)
	Timezone("America/Noronha", "Coordinated Universal Time-02"), // (UTC-02:00)
	Timezone("Atlantic/Azores", "Azores"), // (UTC-01:00)
	Timezone("Atlantic/Cape_Verde", "Cabo Verde Is."), // (UTC-01:00)
	Timezone("America/Danmarkshavn"/* UTC??? */, "Coordinated Universal Time"), // (UTC+00:00)
	Timezone("Europe/London", "Dublin, Edinburgh, Lisbon, London"), // (UTC+00:00)
	Timezone("Atlantic/Reykjavik", "Monrovia, Reykjavik"), // (UTC+00:00)
	Timezone("Africa/Sao_Tome", "Sao Tome"), // (UTC+00:00)
	Timezone("Africa/Casablanca", "Casablanca"), // (UTC+01:00)
	Timezone("Europe/Berlin", "Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna"), // (UTC+01:00)
	Timezone("Europe/Budapest", "Belgrade, Bratislava, Budapest, Ljubljana, Prague"), // (UTC+01:00)
	Timezone("Europe/Paris", "Brussels, Copenhagen, Madrid, Paris"), // (UTC+01:00)
	Timezone("Europe/Warsaw", "Sarajevo, Skopje, Warsaw, Zagreb"), // (UTC+01:00)
	Timezone("Africa/Lagos", "West Central Africa"), // (UTC+01:00)
	Timezone("Europe/Bucharest", "Athens, Bucharest"), // (UTC+02:00)
	Timezone("Asia/Beirut", "Beirut"), // (UTC+02:00)
	Timezone("Africa/Cairo", "Cairo"), // (UTC+02:00)
	Timezone("Europe/Chisinau", "Chisinau"), // (UTC+02:00)
	Timezone("Asia/Damascus", "Damascus"), // (UTC+02:00)
	Timezone("Asia/Hebron", "Gaza, Hebron"), // (UTC+02:00)
	Timezone("Africa/Johannesburg", "Harare, Pretoria"), // (UTC+02:00)
	Timezone("Europe/Kiev", "Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius"), // (UTC+02:00)
	Timezone("Asia/Jerusalem", "Jerusalem"), // (UTC+02:00)
	Timezone("Europe/Kaliningrad", "Kaliningrad"), // (UTC+02:00)
	Timezone("Africa/Khartoum", "Khartoum"), // (UTC+02:00)
	Timezone("Africa/Tripoli", "Tripoli"), // (UTC+02:00)
	Timezone("Africa/Windhoek", "Windhoek"), // (UTC+02:00)
	Timezone("Asia/Amman", "Amman"), // (UTC+03:00)
	Timezone("Asia/Baghdad", "Baghdad"), // (UTC+03:00)
	Timezone("Europe/Istanbul", "Istanbul"), // (UTC+03:00)
	Timezone("Asia/Riyadh", "Kuwait, Riyadh"), // (UTC+03:00)
	Timezone("Europe/Minsk", "Minsk"), // (UTC+03:00)
	Timezone("Europe/Moscow", "Moscow, St. Petersburg"), // (UTC+03:00)
	Timezone("Africa/Nairobi", "Nairobi"), // (UTC+03:00)
	Timezone("Europe/Volgograd", "Volgograd"), // (UTC+03:00)
	Timezone("Asia/Tehran", "Tehran"), // (UTC+03:30)
	Timezone("Asia/Dubai", "Abu Dhabi, Muscat"), // (UTC+04:00)
	Timezone("Europe/Astrakhan", "Astrakhan, Ulyanovsk"), // (UTC+04:00)
	Timezone("Asia/Baku", "Baku"), // (UTC+04:00)
	Timezone("Europe/Samara", "Izhevsk, Samara"), // (UTC+04:00)
	Timezone("Indian/Mauritius", "Port Louis"), // (UTC+04:00)
	Timezone("Europe/Saratov", "Saratov"), // (UTC+04:00)
	Timezone("Asia/Tbilisi", "Tbilisi"), // (UTC+04:00)
	Timezone("Asia/Yerevan", "Yerevan"), // (UTC+04:00)
	Timezone("Asia/Kabul", "Kabul"), // (UTC+04:30)
	Timezone("Asia/Tashkent", "Ashgabat, Tashkent"), // (UTC+05:00)
	Timezone("Asia/Yekaterinburg", "Yekaterinburg"), // (UTC+05:00)
	Timezone("Asia/Karachi", "Islamabad, Karachi"), // (UTC+05:00)
	Timezone("Asia/Qyzylorda", "Qyzylorda"), // (UTC+05:00)
	Timezone("Asia/Kolkata", "Chennai, Kolkata, Mumbai, New Delhi"), // (UTC+05:30)
	Timezone("Asia/Colombo", "Sri Jayawardenepura"), // (UTC+05:30)
	Timezone("Asia/Kathmandu", "Kathmandu"), // (UTC+05:45)
	Timezone("Asia/Almaty", "Astana"), // (UTC+06:00)
	Timezone("Asia/Dhaka", "Dhaka"), // (UTC+06:00)
	Timezone("Asia/Omsk", "Omsk"), // (UTC+06:00)
	Timezone("Asia/Yangon", "Yangon (Rangoon)"), // (UTC+06:30)
	Timezone("Asia/Bangkok", "Bangkok, Hanoi, Jakarta"), // (UTC+07:00)
	Timezone("Asia/Barnaul", "Barnaul, Gorno-Altaysk"), // (UTC+07:00)
	Timezone("Asia/Hovd", "Hovd"), // (UTC+07:00)
	Timezone("Asia/Krasnoyarsk", "Krasnoyarsk"), // (UTC+07:00)
	Timezone("Asia/Novosibirsk", "Novosibirsk"), // (UTC+07:00)
	Timezone("Asia/Tomsk", "Tomsk"), // (UTC+07:00)
	Timezone("Asia/Shanghai", "Beijing, Chongqing, Hong Kong, Urumqi"), // (UTC+08:00)
	Timezone("Asia/Irkutsk", "Irkutsk"), // (UTC+08:00)
	Timezone("Asia/Singapore", "Kuala Lumpur, Singapore"), // (UTC+08:00)
	Timezone("Australia/Perth", "Perth"), // (UTC+08:00)
	Timezone("Asia/Taipei", "Taipei"), // (UTC+08:00)
	Timezone("Asia/Ulaanbaatar", "Ulaanbaatar"), // (UTC+08:00)
	Timezone("Australia/Eucla", "Eucla"), // (UTC+08:45)
	Timezone("Asia/Chita", "Chita"), // (UTC+09:00)
	Timezone("Asia/Tokyo", "Osaka, Sapporo, Tokyo"), // (UTC+09:00)
	Timezone("Asia/Pyongyang", "Pyongyang"), // (UTC+09:00)
	Timezone("Asia/Seoul", "Seoul"), // (UTC+09:00)
	Timezone("Asia/Yakutsk", "Yakutsk"), // (UTC+09:00)
	Timezone("Australia/Adelaide", "Adelaide"), // (UTC+09:30)
	Timezone("Australia/Darwin", "Darwin"), // (UTC+09:30)
	Timezone("Australia/Brisbane", "Brisbane"), // (UTC+10:00)
	Timezone("Australia/Sydney", "Canberra, Melbourne, Sydney"), // (UTC+10:00)
	Timezone("Pacific/Port_Moresby", "Guam, Port Moresby"), // (UTC+10:00)
	Timezone("Australia/Hobart", "Hobart"), // (UTC+10:00)
	Timezone("Asia/Vladivostok", "Vladivostok"), // (UTC+10:00)
	Timezone("Australia/Lord_Howe", "Lord Howe Island"), // (UTC+10:30)
	Timezone("Pacific/Bougainville", "Bougainville Island"), // (UTC+11:00)
	Timezone("Asia/Srednekolymsk", "Chokurdakh"), // (UTC+11:00)
	Timezone("Asia/Magadan", "Magadan"), // (UTC+11:00)
	Timezone("Pacific/Norfolk", "Norfolk Island"), // (UTC+11:00)
	Timezone("Asia/Sakhalin", "Sakhalin"), // (UTC+11:00)
	Timezone("Pacific/Guadalcanal", "Solomon Is., New Caledonia"), // (UTC+11:00)
	Timezone("Asia/Kamchatka", "Anadyr, Petropavlovsk-Kamchatsky"), // (UTC+12:00)
	Timezone("Pacific/Auckland", "Auckland, Wellington"), // (UTC+12:00)
	Timezone("Pacific/Fiji", "Fiji"), // (UTC+12:00)
	Timezone("Pacific/Chatham", "Chatham Islands"), // (UTC+12:45)
	Timezone("Pacific/Tongatapu", "Nuku'alofa"), // (UTC+13:00)
	Timezone("Pacific/Apia", "Samoa"), // (UTC+13:00)
	Timezone("Pacific/Kiritimati", "Kiritimati Island"), // (UTC+14:00)
];

getTimezones() -> [Timezone] {
	stamp = timestamp();
	timezonesOffsets = map(timezones, \tz -> Pair(tz, getTimezoneOffset(stamp, tz.id)));
	sorted = sortCustom(timezonesOffsets, secondOfPair, true);
	map(sorted, \tzo -> Timezone(tzo.first with name = "(" + getTimezoneOffsetString(tzo.second) + ") " + tzo.first.name));
}

getLocalTimezoneId() -> string {
	"";
}

getTimezoneOffset(utcStamp : double, timezoneId : string) -> double {
	0.0;
}

getTimezoneTimeString(utcStamp : double, timezoneId : string, language : string) -> string {
	date2string(stamp2date(utcStamp)) + "T" + getTimeOnlyString(stamp2time(utcStamp), true, false) + "Z";
}

getTimezoneOffsetString(offset : double) -> string {
	o = ceilTo(offset / (1000.0 * 60.0), 5.0) / 60.0;
	"UTC" + (if (o >= 0.0) "+" else "-") +
		lpad(i2s(trunc(abs(o))), "0", 2) + ":" +
		lpad(i2s(floor(frac(o) * 60.0)), "0", 2);
}
