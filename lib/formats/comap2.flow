import math/md5;
import net/http;
import formats/xml;
import formats/comap;

export {
	downloadComap(email : string, password : string, mapid : int, onOK : (string) -> void, onError : (string) -> void) -> void;
	comap2topicTree(comap : string) -> TopicTree;
}

downloadComap(email : string, password : string, mapid : int, onOK : (string) -> void, onError : (string) -> void) -> void {
	httpRequest3("http://go.comapping.com/cgi-bin/comapping.n?action=login&login=" + email + "&loginMethod=simple", \ok -> {
		xml = parseXml2(ok);
		salt = getXmlAttribute(getXmlAttributes(xml), "salt", "");
		passwordmd5 = md5(password + salt);
		httpRequest3("http://go.comapping.com/cgi-bin/comapping.n?action=login&login=" + email + "&loginMethod=withSalt&password=" + passwordmd5, \ok2 -> {
			xml2 = parseXml2(ok2);
			clientId = getXmlAttribute(getXmlAttributes(xml2), "clientID", "");
			httpRequest3("http://go.comapping.com/cgi-bin/comapping.n?action=download&clientID=" + clientId + "&format=comap&mapid=" + i2s(mapid), \ok3 -> {
				onOK(ok3);
			}, onError);
		}, onError);
	}, onError);
} 

comap2topicTree(comap : string) -> TopicTree {
	xml = parseXml2WithStrategy(comap, [StandardEscaping()]);
	dummyXml = XmlElement("", [], []);
	root = either(getXmlElement(xmlElements(getXmlChildren(xml)), "node"), dummyXml);
	doComap2TopicTree(root);
}

doComap2TopicTree(xml : XmlNode) -> TopicTree {
	xmlchildren = getXmlChildren(xml);
	dummyXml = XmlElement("", [], []);
	text = xmlUnescape(xml2text(either(getXmlElement(xmlElements(xmlchildren), "text"), dummyXml)));
	children = filterElements(xmlchildren, "node");
	attributes = 
		map(getXmlAttributes(xml), \a -> {
			Pair(a.key, a.value);
		});
	TopicTree(text, attributes, map(children, doComap2TopicTree));
}

