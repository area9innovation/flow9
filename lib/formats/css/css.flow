export {
	// The structures from our parse
	CssStylesheet(rules : [CssRuleset]);

	CssRuleset(selectors : [CssSelector], declarations : [CssDeclaration]);

	/*CssSelector ::= CssSimple, CssExtender, CssModifier, CssModifier2, CssIgnore;
		// name
		CssSimple(name : string);
		// selector selector
		CssExtender(name : string, extendsFrom : string);
		// selector : selector
		CssModifier(name : string, selectorName : string);
		// selector : selector selectors
		CssModifier2(name : string, selectorName : string, extendsFrom : string);
		// right but not supported format
		CssIgnore();
*/

	// There is some kind of official AST for CSS here:
	// https://drafts.csswg.org/cssom/#selectors


	CssSelector ::= CssCombinators, CssSimpleSelector;

	// selector > selector + selector > selector ...
	CssCombinators(head : CssSimpleSelector, combinations : CssCombination);
		CssCombination(combinator : CssCombinator, selector : CssSelector);

			CssCombinator ::= CssGreaterCombinator, CssPlusCombinator;
				CssGreaterCombinator();
				CssPlusCombinator();

	CssSimpleSelector ::= CssSelectorSequence, CssSingleSelector;
		// selector selector ... selector
		CssSelectorSequence(selectors : [CssSingleSelector]);

	CssSingleSelector ::= CssRuleNameWithPseudos, CssRuleName;
		// selector:function(name)
		// selector:name
		// https://www.w3.org/TR/selectors-3/#pseudo-classes
		CssRuleNameWithPseudos(name : string, pseudos : [CssPseudo]);
			CssPseudo ::= CssFunction, CssModifier;
				CssFunction(name : string, optarg : [string]);
				CssModifier(modifier : string);

		// name
		CssRuleName(name : string);


	CssDeclaration(property : string, expr : CssTerm);

	CssTerm ::= CssNegate, CssPercentage, CssInt, CssDouble, CssHexInt, CssString, CssName,
		CssStruct, CssArray, CssTrue, CssFalse, CssInherit, CssPt, CssPx, CssDeg, CssSolid, 
		CssList, CssLinearGradient, CssUrl, CssEm;
		CssNegate(t : CssTerm);
		CssPercentage(n: CssTerm);
		CssInt(v : int);
		CssDouble(v : double);
		CssHexInt(s : string);
		CssString(s : string);
		CssUrl(value : string);
		CssName(n : string);
		CssStruct(n : string, args : [CssTerm]);
		CssArray(terms : [CssTerm]);
		CssTrue();
		CssFalse();
		CssInherit();
		CssPt(value : CssTerm);
		CssPx(value : CssTerm);
		CssDeg(value : CssTerm);
		CssEm(value : CssTerm);
		CssSolid();
		CssLinearGradient(rotation : CssTerm, colors : CssTerm);
		CssList(terms : [CssTerm]);
}
