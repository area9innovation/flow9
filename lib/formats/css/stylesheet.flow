import form/form;
import math/math;
import ds/tree;
import formats/css/css;
import formats/dom/css;

export {
	// The processed version of a style sheet
	Stylesheet(styles : Tree<string, StyleWithSelectors>);
	emptyStylesheet : Stylesheet = Stylesheet(makeTree());

	StyleWithSelectors(style : CssStyle, selectors : Tree<string, CssStyle>);

	CssStyle(
		family : [string],
		fontSize : double,
		letterSpacing : double,
		wordSpacing : double,
		bold : bool,
		italic : bool,
		color : int,
		fontBackgroundFill : int,
		backgroundFill : int,
		width : CssStyleWidth,
		height : double,
		opacity : double,
		transform : CssStyleTransform,
		position : CssStylePosition,
		border : [GraphicsStyle],
		borderRadius : BorderRadius,
		background : [GraphicsStyle],
		backgroundImage : [CssImageStyle],
		// For SVG CSS:
		stroke : int,
		strokeWidth : double,
		fill : int,
		form : Form,
		box : CssBox,
		whiteSpace: CssWhiteSpace,
		svgExtra : Tree<string, CssTerm>,
		display : CssDisplayStyle
	);

	BorderRadius : (topLeft : double, topRight : double, bottomRight : double, bottomLeft : double);
	emptyBorderRadius = BorderRadius(-1.0, -1.0, -1.0, -1.0);
	CssImageStyle ::= CssUrl;
	CssDisplayStyle ::= CssDisplayNone, CssDisplayInline, CssDisplayTooltip;
		CssDisplayNone();
		CssDisplayInline();
		CssDisplayTooltip();
	defaultDisplayStyle = CssDisplayInline();

	CssStyleWidth ::= CssLength, CssPercent;

	CssStyleTransform(
		rotate : double,
		scaleX : double,
		scaleY : double
	);

	CssStylePosition(
		top : Maybe<double>,
		bottom : Maybe<double>,
		left : Maybe<double>,
		right: Maybe<double>
	);

	defCssStyle = CssStyle(
		[], // family
		0.0, // fontSize
		-doubleMax, // letterSpacing
		-doubleMax, // wordSpacing
		false, // bold
		false, // italic
		-1, // color
		-1, // fontBackgroundFill
		-1, // backgroundFill
		zeroCssLength(), // width
		0.0, // height
		-1.0, // opacity
		CssStyleTransform(0.0, 1.0, 1.0), // transform
		CssStylePosition(None(), None(), None(), None()), // position
		[], // border
		emptyBorderRadius, // borderRadius
		[], // background
		[], // backgroundImage,
		// SVG CSS:
		-1, // stroke
		0.0, // stroke width
		0, // fill
		Empty(), // form
		emptyCssBox, // box
		CssWhiteSpaceNormal(), // whiteSpace
		makeTree(), // SVG extras,
		defaultDisplayStyle
	);
}
