// Produced by  flowcpp mango/mango.flow -- file=../flow9/lib/formats/latex/latex.mango compile=1 main=latex_compiled
import tools/mango/mcode_lib;
import string;

export {
	parse_latex_compiled(acc : MoParseAcc) -> bool;
}

parse_ws(acc : MoParseAcc) -> bool {
	// println("parse_ws");
	mparseStar(acc, \ -> {
		{
			pushMCheckpoint(acc);
			if (matchString(acc, " ")) {
				discardMCheckpoint(acc)
			} else {
				if (matchString(acc, "\t")) {
					discardMCheckpoint(acc)
				} else {
					if (matchString(acc, "\u000d")) {
						discardMCheckpoint(acc)
					} else {
						if (matchString(acc, "\n")) {
							discardMCheckpoint(acc)
						} else {
							restoreMCheckpoint(acc)
						}
					}
				}
			}
		}
	})
}

parse_nonalpha_command(acc : MoParseAcc) -> bool {
	// println("parse_nonalpha_command");
	{
		pushMCheckpoint(acc);
		if (parse_nonalpha(acc)) {
			if (mparseStar(acc, \ -> {
				parse_nonalpha(acc)
			})) {
				discardMCheckpoint(acc)
			} else {
				restoreMCheckpoint(acc)
			}
		} else {
			restoreMCheckpoint(acc)
		}
	}
}

parse_nonalpha(acc : MoParseAcc) -> bool {
	// println("parse_nonalpha");
	{
		pushMCheckpoint(acc);
		if (matchString(acc, ".")) {
			discardMCheckpoint(acc)
		} else {
			if (matchString(acc, ",")) {
				discardMCheckpoint(acc)
			} else {
				if (matchString(acc, ";")) {
					discardMCheckpoint(acc)
				} else {
					if (matchString(acc, ":")) {
						discardMCheckpoint(acc)
					} else {
						if (matchString(acc, "!")) {
							discardMCheckpoint(acc)
						} else {
							if (matchString(acc, "?")) {
								discardMCheckpoint(acc)
							} else {
								if (matchString(acc, "+")) {
									discardMCheckpoint(acc)
								} else {
									if (matchString(acc, "-")) {
										discardMCheckpoint(acc)
									} else {
										if (matchString(acc, "*")) {
											discardMCheckpoint(acc)
										} else {
											if (matchString(acc, "/")) {
												discardMCheckpoint(acc)
											} else {
												if (matchString(acc, "&")) {
													discardMCheckpoint(acc)
												} else {
													if (matchString(acc, "^")) {
														discardMCheckpoint(acc)
													} else {
														if (matchString(acc, "%")) {
															discardMCheckpoint(acc)
														} else {
															if (matchString(acc, "$")) {
																discardMCheckpoint(acc)
															} else {
																if (matchString(acc, "#")) {
																	discardMCheckpoint(acc)
																} else {
																	if (matchString(acc, "@")) {
																		discardMCheckpoint(acc)
																	} else {
																		if (matchString(acc, "~")) {
																			discardMCheckpoint(acc)
																		} else {
																			if (matchString(acc, "|")) {
																				discardMCheckpoint(acc)
																			} else {
																				if (matchString(acc, "=")) {
																					discardMCheckpoint(acc)
																				} else {
																					if (matchString(acc, "[")) {
																						discardMCheckpoint(acc)
																					} else {
																						if (matchString(acc, "]")) {
																							discardMCheckpoint(acc)
																						} else {
																							if (matchString(acc, "{")) {
																								discardMCheckpoint(acc)
																							} else {
																								if (matchString(acc, "}")) {
																									discardMCheckpoint(acc)
																								} else {
																									if (matchString(acc, "(")) {
																										discardMCheckpoint(acc)
																									} else {
																										if (matchString(acc, ")")) {
																											discardMCheckpoint(acc)
																										} else {
																											if (matchString(acc, "\\")) {
																												discardMCheckpoint(acc)
																											} else {
																												restoreMCheckpoint(acc)
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

parse_newline(acc : MoParseAcc) -> bool {
	// println("parse_newline");
	{
		pushMCheckpoint(acc);
		if (matchString(acc, "\n")) {
			discardMCheckpoint(acc)
		} else {
			if (matchString(acc, "\\r\\n")) {
				discardMCheckpoint(acc)
			} else {
				restoreMCheckpoint(acc)
			}
		}
	}
}

parse_math(acc : MoParseAcc) -> bool {
	// println("parse_math");
	{
		pushMCheckpoint(acc);
		if ({
			pushMCheckpoint(acc);
			if (parse_commands(acc)) {
				discardMCheckpoint(acc)
			} else {
				if (parse_arg(acc)) {
					discardMCheckpoint(acc)
				} else {
					if ({
						pushMCheckpoint(acc);
						if ({
							acc.starti ::= acc.i;
							if ({
								pushMCheckpoint(acc);
								if ({
									pushMCheckpoint(acc);
									if ({
										pushMCheckpoint(acc);
										if (matchString(acc, "\\")) {
											restoreMCheckpoint(acc)
										} else {
											{
												restoreMCheckpoint(acc);
												true
											}
										}
									}) {
										if ({
											pushMCheckpoint(acc);
											if (matchString(acc, "_")) {
												restoreMCheckpoint(acc)
											} else {
												{
													restoreMCheckpoint(acc);
													true
												}
											}
										}) {
											if ({
												pushMCheckpoint(acc);
												if (matchString(acc, "^")) {
													restoreMCheckpoint(acc)
												} else {
													{
														restoreMCheckpoint(acc);
														true
													}
												}
											}) {
												if ({
													pushMCheckpoint(acc);
													if (matchString(acc, "$")) {
														restoreMCheckpoint(acc)
													} else {
														{
															restoreMCheckpoint(acc);
															true
														}
													}
												}) {
													if ({
														pushMCheckpoint(acc);
														if (matchString(acc, "%")) {
															restoreMCheckpoint(acc)
														} else {
															{
																restoreMCheckpoint(acc);
																true
															}
														}
													}) {
														if ({
															pushMCheckpoint(acc);
															if (matchString(acc, "{")) {
																restoreMCheckpoint(acc)
															} else {
																{
																	restoreMCheckpoint(acc);
																	true
																}
															}
														}) {
															if ({
																pushMCheckpoint(acc);
																if (matchString(acc, "[")) {
																	restoreMCheckpoint(acc)
																} else {
																	{
																		restoreMCheckpoint(acc);
																		true
																	}
																}
															}) {
																if ({
																	pushMCheckpoint(acc);
																	if (matchString(acc, "}")) {
																		restoreMCheckpoint(acc)
																	} else {
																		{
																			restoreMCheckpoint(acc);
																			true
																		}
																	}
																}) {
																	if (parse_anychar(acc)) {
																		discardMCheckpoint(acc)
																	} else {
																		restoreMCheckpoint(acc)
																	}
																} else {
																	restoreMCheckpoint(acc)
																}
															} else {
																restoreMCheckpoint(acc)
															}
														} else {
															restoreMCheckpoint(acc)
														}
													} else {
														restoreMCheckpoint(acc)
													}
												} else {
													restoreMCheckpoint(acc)
												}
											} else {
												restoreMCheckpoint(acc)
											}
										} else {
											restoreMCheckpoint(acc)
										}
									} else {
										restoreMCheckpoint(acc)
									}
								}) {
									if (mparseStar(acc, \ -> {
										{
											pushMCheckpoint(acc);
											if ({
												pushMCheckpoint(acc);
												if (matchString(acc, "\\")) {
													restoreMCheckpoint(acc)
												} else {
													{
														restoreMCheckpoint(acc);
														true
													}
												}
											}) {
												if ({
													pushMCheckpoint(acc);
													if (matchString(acc, "_")) {
														restoreMCheckpoint(acc)
													} else {
														{
															restoreMCheckpoint(acc);
															true
														}
													}
												}) {
													if ({
														pushMCheckpoint(acc);
														if (matchString(acc, "^")) {
															restoreMCheckpoint(acc)
														} else {
															{
																restoreMCheckpoint(acc);
																true
															}
														}
													}) {
														if ({
															pushMCheckpoint(acc);
															if (matchString(acc, "$")) {
																restoreMCheckpoint(acc)
															} else {
																{
																	restoreMCheckpoint(acc);
																	true
																}
															}
														}) {
															if ({
																pushMCheckpoint(acc);
																if (matchString(acc, "%")) {
																	restoreMCheckpoint(acc)
																} else {
																	{
																		restoreMCheckpoint(acc);
																		true
																	}
																}
															}) {
																if ({
																	pushMCheckpoint(acc);
																	if (matchString(acc, "{")) {
																		restoreMCheckpoint(acc)
																	} else {
																		{
																			restoreMCheckpoint(acc);
																			true
																		}
																	}
																}) {
																	if ({
																		pushMCheckpoint(acc);
																		if (matchString(acc, "[")) {
																			restoreMCheckpoint(acc)
																		} else {
																			{
																				restoreMCheckpoint(acc);
																				true
																			}
																		}
																	}) {
																		if ({
																			pushMCheckpoint(acc);
																			if (matchString(acc, "}")) {
																				restoreMCheckpoint(acc)
																			} else {
																				{
																					restoreMCheckpoint(acc);
																					true
																				}
																			}
																		}) {
																			if (parse_anychar(acc)) {
																				discardMCheckpoint(acc)
																			} else {
																				restoreMCheckpoint(acc)
																			}
																		} else {
																			restoreMCheckpoint(acc)
																		}
																	} else {
																		restoreMCheckpoint(acc)
																	}
																} else {
																	restoreMCheckpoint(acc)
																}
															} else {
																restoreMCheckpoint(acc)
															}
														} else {
															restoreMCheckpoint(acc)
														}
													} else {
														restoreMCheckpoint(acc)
													}
												} else {
													restoreMCheckpoint(acc)
												}
											} else {
												restoreMCheckpoint(acc)
											}
										}
									})) {
										discardMCheckpoint(acc)
									} else {
										restoreMCheckpoint(acc)
									}
								} else {
									restoreMCheckpoint(acc)
								}
							}) {
								{
									pushPEnv(acc.env, substring(acc.input, acc.starti, acc.i - acc.starti));
									true
								}
							} else {
								false
							}
						}) {
							if (moconstruct(acc, "Tex_Text", 1)) {
								discardMCheckpoint(acc)
							} else {
								restoreMCheckpoint(acc)
							}
						} else {
							restoreMCheckpoint(acc)
						}
					}) {
						discardMCheckpoint(acc)
					} else {
						restoreMCheckpoint(acc)
					}
				}
			}
		}) {
			if (mparseStar(acc, \ -> {
				{
					pushMCheckpoint(acc);
					if ({
						pushMCheckpoint(acc);
						if (matchString(acc, "_")) {
							if (parse_math(acc)) {
								if (moconstruct(acc, "Tex_Subscript", 2)) {
									discardMCheckpoint(acc)
								} else {
									restoreMCheckpoint(acc)
								}
							} else {
								restoreMCheckpoint(acc)
							}
						} else {
							restoreMCheckpoint(acc)
						}
					}) {
						discardMCheckpoint(acc)
					} else {
						if ({
							pushMCheckpoint(acc);
							if (matchString(acc, "^")) {
								if (parse_math(acc)) {
									if (moconstruct(acc, "Tex_Superscript", 2)) {
										discardMCheckpoint(acc)
									} else {
										restoreMCheckpoint(acc)
									}
								} else {
									restoreMCheckpoint(acc)
								}
							} else {
								restoreMCheckpoint(acc)
							}
						}) {
							discardMCheckpoint(acc)
						} else {
							restoreMCheckpoint(acc)
						}
					}
				}
			})) {
				discardMCheckpoint(acc)
			} else {
				restoreMCheckpoint(acc)
			}
		} else {
			restoreMCheckpoint(acc)
		}
	}
}

parse_latexes(acc : MoParseAcc) -> bool {
	// println("parse_latexes");
	{
		pushMCheckpoint(acc);
		if ({env = acc.env;pushPEnv(env, makeList()); true}) {
			if (mparseStar(acc, \ -> {
				{
					pushMCheckpoint(acc);
					if (parse_latex_segment(acc)) {
						if ({env = acc.env;pcons(env); true}) {
							discardMCheckpoint(acc)
						} else {
							restoreMCheckpoint(acc)
						}
					} else {
						restoreMCheckpoint(acc)
					}
				}
			})) {
				if ({env = acc.env;pfn1(env, list2array); true}) {
					discardMCheckpoint(acc)
				} else {
					restoreMCheckpoint(acc)
				}
			} else {
				restoreMCheckpoint(acc)
			}
		} else {
			restoreMCheckpoint(acc)
		}
	}
}

parse_latex_segment(acc : MoParseAcc) -> bool {
	// println("parse_latex_segment");
	{
		pushMCheckpoint(acc);
		if (parse_commands(acc)) {
			discardMCheckpoint(acc)
		} else {
			if ({
				pushMCheckpoint(acc);
				if (matchString(acc, "$$")) {
					if (parse_ws(acc)) {
						if ({env = acc.env;pushPEnv(env, makeList()); true}) {
							if (mparseStar(acc, \ -> {
								{
									pushMCheckpoint(acc);
									if (parse_math(acc)) {
										if ({env = acc.env;pcons(env); true}) {
											discardMCheckpoint(acc)
										} else {
											restoreMCheckpoint(acc)
										}
									} else {
										restoreMCheckpoint(acc)
									}
								}
							})) {
								if ({env = acc.env;pfn1(env, list2array); true}) {
									if (matchString(acc, "$$")) {
										if (parse_ws(acc)) {
											if (moconstruct(acc, "Tex_DisplayMath", 1)) {
												discardMCheckpoint(acc)
											} else {
												restoreMCheckpoint(acc)
											}
										} else {
											restoreMCheckpoint(acc)
										}
									} else {
										restoreMCheckpoint(acc)
									}
								} else {
									restoreMCheckpoint(acc)
								}
							} else {
								restoreMCheckpoint(acc)
							}
						} else {
							restoreMCheckpoint(acc)
						}
					} else {
						restoreMCheckpoint(acc)
					}
				} else {
					restoreMCheckpoint(acc)
				}
			}) {
				discardMCheckpoint(acc)
			} else {
				if ({
					pushMCheckpoint(acc);
					if (matchString(acc, "$")) {
						if (parse_ws(acc)) {
							if ({env = acc.env;pushPEnv(env, makeList()); true}) {
								if (mparseStar(acc, \ -> {
									{
										pushMCheckpoint(acc);
										if (parse_math(acc)) {
											if ({env = acc.env;pcons(env); true}) {
												discardMCheckpoint(acc)
											} else {
												restoreMCheckpoint(acc)
											}
										} else {
											restoreMCheckpoint(acc)
										}
									}
								})) {
									if ({env = acc.env;pfn1(env, list2array); true}) {
										if (matchString(acc, "$")) {
											if (parse_ws(acc)) {
												if (moconstruct(acc, "Tex_InlineMath", 1)) {
													discardMCheckpoint(acc)
												} else {
													restoreMCheckpoint(acc)
												}
											} else {
												restoreMCheckpoint(acc)
											}
										} else {
											restoreMCheckpoint(acc)
										}
									} else {
										restoreMCheckpoint(acc)
									}
								} else {
									restoreMCheckpoint(acc)
								}
							} else {
								restoreMCheckpoint(acc)
							}
						} else {
							restoreMCheckpoint(acc)
						}
					} else {
						restoreMCheckpoint(acc)
					}
				}) {
					discardMCheckpoint(acc)
				} else {
					if ({
						pushMCheckpoint(acc);
						if ({
							acc.starti ::= acc.i;
							if ({
								pushMCheckpoint(acc);
								if ({
									pushMCheckpoint(acc);
									if ({
										pushMCheckpoint(acc);
										if (matchString(acc, "\\")) {
											restoreMCheckpoint(acc)
										} else {
											{
												restoreMCheckpoint(acc);
												true
											}
										}
									}) {
										if ({
											pushMCheckpoint(acc);
											if (matchString(acc, "$")) {
												restoreMCheckpoint(acc)
											} else {
												{
													restoreMCheckpoint(acc);
													true
												}
											}
										}) {
											if ({
												pushMCheckpoint(acc);
												if (matchString(acc, "%")) {
													restoreMCheckpoint(acc)
												} else {
													{
														restoreMCheckpoint(acc);
														true
													}
												}
											}) {
												if ({
													pushMCheckpoint(acc);
													if (matchString(acc, "}")) {
														restoreMCheckpoint(acc)
													} else {
														{
															restoreMCheckpoint(acc);
															true
														}
													}
												}) {
													if (parse_anychar(acc)) {
														discardMCheckpoint(acc)
													} else {
														restoreMCheckpoint(acc)
													}
												} else {
													restoreMCheckpoint(acc)
												}
											} else {
												restoreMCheckpoint(acc)
											}
										} else {
											restoreMCheckpoint(acc)
										}
									} else {
										restoreMCheckpoint(acc)
									}
								}) {
									if (mparseStar(acc, \ -> {
										{
											pushMCheckpoint(acc);
											if ({
												pushMCheckpoint(acc);
												if (matchString(acc, "\\")) {
													restoreMCheckpoint(acc)
												} else {
													{
														restoreMCheckpoint(acc);
														true
													}
												}
											}) {
												if ({
													pushMCheckpoint(acc);
													if (matchString(acc, "$")) {
														restoreMCheckpoint(acc)
													} else {
														{
															restoreMCheckpoint(acc);
															true
														}
													}
												}) {
													if ({
														pushMCheckpoint(acc);
														if (matchString(acc, "%")) {
															restoreMCheckpoint(acc)
														} else {
															{
																restoreMCheckpoint(acc);
																true
															}
														}
													}) {
														if ({
															pushMCheckpoint(acc);
															if (matchString(acc, "}")) {
																restoreMCheckpoint(acc)
															} else {
																{
																	restoreMCheckpoint(acc);
																	true
																}
															}
														}) {
															if (parse_anychar(acc)) {
																discardMCheckpoint(acc)
															} else {
																restoreMCheckpoint(acc)
															}
														} else {
															restoreMCheckpoint(acc)
														}
													} else {
														restoreMCheckpoint(acc)
													}
												} else {
													restoreMCheckpoint(acc)
												}
											} else {
												restoreMCheckpoint(acc)
											}
										}
									})) {
										discardMCheckpoint(acc)
									} else {
										restoreMCheckpoint(acc)
									}
								} else {
									restoreMCheckpoint(acc)
								}
							}) {
								{
									pushPEnv(acc.env, substring(acc.input, acc.starti, acc.i - acc.starti));
									true
								}
							} else {
								false
							}
						}) {
							if (moconstruct(acc, "Tex_Text", 1)) {
								discardMCheckpoint(acc)
							} else {
								restoreMCheckpoint(acc)
							}
						} else {
							restoreMCheckpoint(acc)
						}
					}) {
						discardMCheckpoint(acc)
					} else {
						restoreMCheckpoint(acc)
					}
				}
			}
		}
	}
}

parse_latex(acc : MoParseAcc) -> bool {
	// println("parse_latex");
	{
		pushMCheckpoint(acc);
		if (parse_latexes(acc)) {
			if (moconstruct(acc, "Tex_Document", 1)) {
				discardMCheckpoint(acc)
			} else {
				restoreMCheckpoint(acc)
			}
		} else {
			restoreMCheckpoint(acc)
		}
	}
}

parse_id(acc : MoParseAcc) -> bool {
	// println("parse_id");
	{
		pushMCheckpoint(acc);
		if ({
			acc.starti ::= acc.i;
			if (parse_bid(acc)) {
				{
					pushPEnv(acc.env, substring(acc.input, acc.starti, acc.i - acc.starti));
					true
				}
			} else {
				false
			}
		}) {
			if (parse_ws(acc)) {
				discardMCheckpoint(acc)
			} else {
				restoreMCheckpoint(acc)
			}
		} else {
			restoreMCheckpoint(acc)
		}
	}
}

parse_commands(acc : MoParseAcc) -> bool {
	// println("parse_commands");
	{
		pushMCheckpoint(acc);
		if ({
			pushMCheckpoint(acc);
			if (matchString(acc, "\\")) {
				if ({
					pushMCheckpoint(acc);
					if ({
						pushMCheckpoint(acc);
						if (matchString(acc, "begin{")) {
							if (parse_ws(acc)) {
								if (parse_id(acc)) {
									if (matchString(acc, "}")) {
										if (parse_ws(acc)) {
											if ({env = acc.env;pushPEnv(env, makeList()); true}) {
												if (mparseStar(acc, \ -> {
													{
														pushMCheckpoint(acc);
														if (parse_arg(acc)) {
															if ({env = acc.env;pcons(env); true}) {
																discardMCheckpoint(acc)
															} else {
																restoreMCheckpoint(acc)
															}
														} else {
															restoreMCheckpoint(acc)
														}
													}
												})) {
													if ({env = acc.env;pfn1(env, list2array); true}) {
														if (parse_latexes(acc)) {
															if (matchString(acc, "\\")) {
																if (matchString(acc, "end{")) {
																	if (parse_ws(acc)) {
																		if (parse_id(acc)) {
																			if (matchString(acc, "}")) {
																				if (parse_ws(acc)) {
																					if (moconstruct(acc, "Tex_Environment", 4)) {
																						discardMCheckpoint(acc)
																					} else {
																						restoreMCheckpoint(acc)
																					}
																				} else {
																					restoreMCheckpoint(acc)
																				}
																			} else {
																				restoreMCheckpoint(acc)
																			}
																		} else {
																			restoreMCheckpoint(acc)
																		}
																	} else {
																		restoreMCheckpoint(acc)
																	}
																} else {
																	restoreMCheckpoint(acc)
																}
															} else {
																restoreMCheckpoint(acc)
															}
														} else {
															restoreMCheckpoint(acc)
														}
													} else {
														restoreMCheckpoint(acc)
													}
												} else {
													restoreMCheckpoint(acc)
												}
											} else {
												restoreMCheckpoint(acc)
											}
										} else {
											restoreMCheckpoint(acc)
										}
									} else {
										restoreMCheckpoint(acc)
									}
								} else {
									restoreMCheckpoint(acc)
								}
							} else {
								restoreMCheckpoint(acc)
							}
						} else {
							restoreMCheckpoint(acc)
						}
					}) {
						discardMCheckpoint(acc)
					} else {
						if ({
							pushMCheckpoint(acc);
							if ({
								pushMCheckpoint(acc);
								if (matchString(acc, "end")) {
									restoreMCheckpoint(acc)
								} else {
									{
										restoreMCheckpoint(acc);
										true
									}
								}
							}) {
								if ({
									acc.starti ::= acc.i;
									if (parse_command(acc)) {
										{
											pushPEnv(acc.env, substring(acc.input, acc.starti, acc.i - acc.starti));
											true
										}
									} else {
										false
									}
								}) {
									if (parse_ws(acc)) {
										if ({env = acc.env;pushPEnv(env, makeList()); true}) {
											if (mparseStar(acc, \ -> {
												{
													pushMCheckpoint(acc);
													if (parse_arg(acc)) {
														if ({env = acc.env;pcons(env); true}) {
															discardMCheckpoint(acc)
														} else {
															restoreMCheckpoint(acc)
														}
													} else {
														restoreMCheckpoint(acc)
													}
												}
											})) {
												if ({env = acc.env;pfn1(env, list2array); true}) {
													if (moconstruct(acc, "Tex_Command", 2)) {
														discardMCheckpoint(acc)
													} else {
														restoreMCheckpoint(acc)
													}
												} else {
													restoreMCheckpoint(acc)
												}
											} else {
												restoreMCheckpoint(acc)
											}
										} else {
											restoreMCheckpoint(acc)
										}
									} else {
										restoreMCheckpoint(acc)
									}
								} else {
									restoreMCheckpoint(acc)
								}
							} else {
								restoreMCheckpoint(acc)
							}
						}) {
							discardMCheckpoint(acc)
						} else {
							restoreMCheckpoint(acc)
						}
					}
				}) {
					discardMCheckpoint(acc)
				} else {
					restoreMCheckpoint(acc)
				}
			} else {
				restoreMCheckpoint(acc)
			}
		}) {
			discardMCheckpoint(acc)
		} else {
			if ({
				pushMCheckpoint(acc);
				if (matchString(acc, "%")) {
					if ({
						acc.starti ::= acc.i;
						if (mparseStar(acc, \ -> {
							{
								pushMCheckpoint(acc);
								if ({
									pushMCheckpoint(acc);
									if (parse_newline(acc)) {
										restoreMCheckpoint(acc)
									} else {
										{
											restoreMCheckpoint(acc);
											true
										}
									}
								}) {
									if (parse_anychar(acc)) {
										discardMCheckpoint(acc)
									} else {
										restoreMCheckpoint(acc)
									}
								} else {
									restoreMCheckpoint(acc)
								}
							}
						})) {
							{
								pushPEnv(acc.env, substring(acc.input, acc.starti, acc.i - acc.starti));
								true
							}
						} else {
							false
						}
					}) {
						if (parse_newline(acc)) {
							if (parse_ws(acc)) {
								if (moconstruct(acc, "Tex_Comment", 1)) {
									discardMCheckpoint(acc)
								} else {
									restoreMCheckpoint(acc)
								}
							} else {
								restoreMCheckpoint(acc)
							}
						} else {
							restoreMCheckpoint(acc)
						}
					} else {
						restoreMCheckpoint(acc)
					}
				} else {
					restoreMCheckpoint(acc)
				}
			}) {
				discardMCheckpoint(acc)
			} else {
				restoreMCheckpoint(acc)
			}
		}
	}
}

parse_command(acc : MoParseAcc) -> bool {
	// println("parse_command");
	{
		pushMCheckpoint(acc);
		if ({
			pushMCheckpoint(acc);
			if ({
				pushMCheckpoint(acc);
				if (matchRange(acc, 97, 122)) {
					discardMCheckpoint(acc)
				} else {
					if (matchRange(acc, 65, 90)) {
						discardMCheckpoint(acc)
					} else {
						restoreMCheckpoint(acc)
					}
				}
			}) {
				if (mparseStar(acc, \ -> {
					{
						pushMCheckpoint(acc);
						if (matchRange(acc, 97, 122)) {
							discardMCheckpoint(acc)
						} else {
							if (matchRange(acc, 65, 90)) {
								discardMCheckpoint(acc)
							} else {
								restoreMCheckpoint(acc)
							}
						}
					}
				})) {
					discardMCheckpoint(acc)
				} else {
					restoreMCheckpoint(acc)
				}
			} else {
				restoreMCheckpoint(acc)
			}
		}) {
			discardMCheckpoint(acc)
		} else {
			if (parse_nonalpha_command(acc)) {
				discardMCheckpoint(acc)
			} else {
				restoreMCheckpoint(acc)
			}
		}
	}
}

parse_bid(acc : MoParseAcc) -> bool {
	// println("parse_bid");
	{
		pushMCheckpoint(acc);
		if ({
			pushMCheckpoint(acc);
			if (matchRange(acc, 97, 122)) {
				discardMCheckpoint(acc)
			} else {
				if (matchRange(acc, 65, 90)) {
					discardMCheckpoint(acc)
				} else {
					if (matchString(acc, "_")) {
						discardMCheckpoint(acc)
					} else {
						restoreMCheckpoint(acc)
					}
				}
			}
		}) {
			if (mparseStar(acc, \ -> {
				parse_alnum(acc)
			})) {
				discardMCheckpoint(acc)
			} else {
				restoreMCheckpoint(acc)
			}
		} else {
			restoreMCheckpoint(acc)
		}
	}
}

parse_arg(acc : MoParseAcc) -> bool {
	// println("parse_arg");
	{
		pushMCheckpoint(acc);
		if ({
			pushMCheckpoint(acc);
			if (matchString(acc, "[")) {
				if (parse_ws(acc)) {
					if ({
						acc.starti ::= acc.i;
						if (mparseStar(acc, \ -> {
							{
								pushMCheckpoint(acc);
								if ({
									pushMCheckpoint(acc);
									if (matchString(acc, "]")) {
										restoreMCheckpoint(acc)
									} else {
										{
											restoreMCheckpoint(acc);
											true
										}
									}
								}) {
									if (parse_anychar(acc)) {
										discardMCheckpoint(acc)
									} else {
										restoreMCheckpoint(acc)
									}
								} else {
									restoreMCheckpoint(acc)
								}
							}
						})) {
							{
								pushPEnv(acc.env, substring(acc.input, acc.starti, acc.i - acc.starti));
								true
							}
						} else {
							false
						}
					}) {
						if (matchString(acc, "]")) {
							if (parse_ws(acc)) {
								if (moconstruct(acc, "Tex_OptionalArg", 1)) {
									discardMCheckpoint(acc)
								} else {
									restoreMCheckpoint(acc)
								}
							} else {
								restoreMCheckpoint(acc)
							}
						} else {
							restoreMCheckpoint(acc)
						}
					} else {
						restoreMCheckpoint(acc)
					}
				} else {
					restoreMCheckpoint(acc)
				}
			} else {
				restoreMCheckpoint(acc)
			}
		}) {
			discardMCheckpoint(acc)
		} else {
			if ({
				pushMCheckpoint(acc);
				if (matchString(acc, "{")) {
					if (parse_ws(acc)) {
						if (parse_latexes(acc)) {
							if (matchString(acc, "}")) {
								if (parse_ws(acc)) {
									if (moconstruct(acc, "Tex_Arg", 1)) {
										discardMCheckpoint(acc)
									} else {
										restoreMCheckpoint(acc)
									}
								} else {
									restoreMCheckpoint(acc)
								}
							} else {
								restoreMCheckpoint(acc)
							}
						} else {
							restoreMCheckpoint(acc)
						}
					} else {
						restoreMCheckpoint(acc)
					}
				} else {
					restoreMCheckpoint(acc)
				}
			}) {
				discardMCheckpoint(acc)
			} else {
				restoreMCheckpoint(acc)
			}
		}
	}
}

parse_anychar(acc : MoParseAcc) -> bool {
	// println("parse_anychar");
	matchRange(acc, 0, 65535)
}

parse_alnum(acc : MoParseAcc) -> bool {
	// println("parse_alnum");
	{
		pushMCheckpoint(acc);
		if (matchRange(acc, 97, 122)) {
			discardMCheckpoint(acc)
		} else {
			if (matchRange(acc, 65, 90)) {
				discardMCheckpoint(acc)
			} else {
				if (matchString(acc, "_")) {
					discardMCheckpoint(acc)
				} else {
					if (matchRange(acc, 48, 57)) {
						discardMCheckpoint(acc)
					} else {
						restoreMCheckpoint(acc)
					}
				}
			}
		}
	}
}

parse_latex_compiled(acc : MoParseAcc) -> bool {
	// println("parse_latex_compiled");
	parse_latex(acc)
}

















