import qexp;

export {
	// https://www.w3.org/TR/2018/WD-html53-20181018/webappapis.html#events

	// Also works for document
	DomEvent ::= GlobalEventHandler, DocumentAndElementEventHandler;

	// 	
//	WindowEvent ::= GlobalEventHandler, WindowEventHandler;

	// Also works for FrameSet
	BodyEvent ::= GlobalEventHandler, DocumentAndElementEventHandler, WindowEventHandler;

	// In Document, DOM and Window
	GlobalEventHandler ::= EventAbort, EventBlur, EventCancel, EventCanplay, 
		EventCanplaythrough, EventChange, EventClick, EventClose, EventCuechange, 
		EventDblclick, EventDrag, EventDragend, EventDragenter, EventDragexit, 
		EventDragleave, EventDragover, EventDragstart, EventDrop, EventDurationchange, 
		EventEmptied, EventEnded, EventOnError, EventFocus, EventInput, EventInvalid, 
		EventKeydown, EventKeypress, EventKeyup, EventLoad, EventLoadeddata, 
		EventLoadedmetadata, EventLoadstart, EventMousedown, EventMouseenter, 
		EventMouseleave, EventMousemove, EventMouseout, EventMouseover, EventMouseup, 
		EventWheel, EventPause, EventPlay, EventPlaying, EventProgress, EventRatechange, 
		EventReset, EventResize, EventScroll, EventSeeked, EventSeeking, EventSelect, 
		EventStalled, EventSubmit, EventSuspend, EventTimeupdate, EventToggle, 
		EventVolumechange, EventWaiting;

	// We rely on the names of these structs. OK to capitalize differently, but the name
	// after Event should match the event name in the spec
		EventAbort(iexp : QExp);
		EventBlur(iexp : QExp);
		EventCancel(iexp : QExp);
		EventCanplay(iexp : QExp);
		EventCanplaythrough(iexp : QExp);
		EventChange(iexp : QExp);
		EventClick(iexp : QExp);
		EventClose(iexp : QExp);
		EventCuechange(iexp : QExp);
		EventDblclick(iexp : QExp);
		EventDrag(iexp : QExp);
		EventDragend(iexp : QExp);
		EventDragenter(iexp : QExp);
		EventDragexit(iexp : QExp);
		EventDragleave(iexp : QExp);
		EventDragover(iexp : QExp);
		EventDragstart(iexp : QExp);
		EventDrop(iexp : QExp);
		EventDurationchange(iexp : QExp);
		EventEmptied(iexp : QExp);
		EventEnded(iexp : QExp);
		EventOnError(iexp : QExp);
		EventFocus(iexp : QExp);
		EventInput(iexp : QExp);
		EventInvalid(iexp : QExp);
		EventKeydown(iexp : QExp);
		EventKeypress(iexp : QExp);
		EventKeyup(iexp : QExp);
		EventLoad(iexp : QExp);
		EventLoadeddata(iexp : QExp);
		EventLoadedmetadata(iexp : QExp);
		EventLoadstart(iexp : QExp);
		EventMousedown(iexp : QExp);
		EventMouseenter(iexp : QExp);
		EventMouseleave(iexp : QExp);
		EventMousemove(iexp : QExp);
		EventMouseout(iexp : QExp);
		EventMouseover(iexp : QExp);
		EventMouseup(iexp : QExp);
		EventWheel(iexp : QExp);
		EventPause(iexp : QExp);
		EventPlay(iexp : QExp);
		EventPlaying(iexp : QExp);
		EventProgress(iexp : QExp);
		EventRatechange(iexp : QExp);
		EventReset(iexp : QExp);
		EventResize(iexp : QExp);
		EventScroll(iexp : QExp);
		EventSeeked(iexp : QExp);
		EventSeeking(iexp : QExp);
		EventSelect(iexp : QExp);
		EventStalled(iexp : QExp);
		EventSubmit(iexp : QExp);
		EventSuspend(iexp : QExp);
		EventTimeupdate(iexp : QExp);
		EventToggle(iexp : QExp);
		EventVolumechange(iexp : QExp);
		EventWaiting(iexp : QExp);
	
	// In Document, Dom
	DocumentAndElementEventHandler ::= EventCopy, EventCut, EventPaste;
		EventCopy(iexp : QExp);
		EventCut(iexp : QExp);
		EventPaste(iexp : QExp);

	// In Body, Window, Frames
	WindowEventHandler ::= EventAfterprint, EventBeforeprint, EventBeforeunload, EventHashchange,
		EventLanguagechange, EventMessage, EventOffline, EventOnline, EventPagehide, EventPageshow,
		EventRejectionhandled, EventPopstate, EventStorage, EventUnhandledrejection, EventUnload;

		EventAfterprint(iexp : QExp);
		EventBeforeprint(iexp : QExp);
		EventBeforeunload(iexp : QExp);
		EventHashchange(iexp : QExp);
		EventLanguagechange(iexp : QExp);
		EventMessage(iexp : QExp);
		EventOffline(iexp : QExp);
		EventOnline(iexp : QExp);
		EventPagehide(iexp : QExp);
		EventPageshow(iexp : QExp);
		EventRejectionhandled(iexp : QExp);
		EventPopstate(iexp : QExp);
		EventStorage(iexp : QExp);
		EventUnhandledrejection(iexp : QExp);
		EventUnload(iexp : QExp);
}
