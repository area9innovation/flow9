import formats/dom/element;
import formats/dom/svg;
import formats/dom/event_handlers;

export {
	// This is a higher-level dialect for HTML, which can be lowered to EGeneric and string

	// TODO: Add more elements as we need them:
	// Those with * are probably required at some point for Form and friends
	// Those with # are probably required for Wigi

	// base, meta, style
	// article, nav, aside, h1-h6, header, footer
	// address, #hr, pre, blockquote, #ol, #ul, #li, dl, dt, dd, figure, figcaption, main
	// em, strong, small, s, cite, q, dfn, abbr, ruby, rb, rt, rtc, rp, data, time, code, var, samp
	// kbd, #sub, #sup, #b, #u, mark, bdi, bdo, #br, wbr
	// ins, del
	// picture, source, embed, object, param, audio, track, map, area
	// *table, #cation, colgroup, col, *tbody, *thead, *tfoot, *tr, *td, *th
	// form, label, *input, *button, #select, datalist, optgroup, #option, *textarea, output, progress, meter, fieldset, legend
	// details, summary
	// noscript, template, slot
	// *canvas

	// https://www.w3.org/TR/2018/WD-html53-20181018/
	EDom ::=
		ESpan, 
		EHtml, EHead, ETitle, ELink, EScript, EBody,
		EP, EDiv, ESvg, EA, EImg, EIFrame,
		EVideo, ETable, ETBody, ETHead, ETr, ETd,
		ETh, EInput, EButton, ETextArea, ECanvas,
		EI, H1Element, H2Element, H3Element, H4Element, EDialog,
		ERawText,
		ERaw
		;

		EHtml(head : EHead, body : EBody, style : CssValues, attributes : GlobalAttributes, events : [DomEvent]);
		eHtml(head : EHead, body : EBody) {
			EHtml(head, body, emptyCssValues(), emptyGlobalAttributes(), []);
		}
		EHead(children : [EDom], style : CssValues, attributes : GlobalAttributes, events : [DomEvent]);
		eHead(children : [EDom]) {
			EHead(children, emptyCssValues(), emptyGlobalAttributes(), []);
		}

		ETitle(html : string, attributes : GlobalAttributes, events : [DomEvent]);
		eTitle(html : string) {
			ETitle(html, emptyGlobalAttributes(), []);
		}

		ELink(
			href : string,
			crossOrigin : string,
			rel : string,
			rev : string,
			as : string,
			media : string,
			hreflang : string,
			type : string,
			referrerPolicy : string,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);
		EScript(
			html : string,
			src : string,
			type : string,
			async : string,
			defer : string,
			crossorigin : string,
			integrity : string,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		EBody(children : [EDom], style : CssValues, attributes : GlobalAttributes, events : [BodyEvent]);
		eBody(children : [EDom]) -> EBody {
			EBody(children, emptyCssValues(), emptyGlobalAttributes(), []);
		}

		// https://www.w3.org/TR/2018/WD-html53-20181018/grouping-content.html#the-p-element
		EP(html : string, children : [EDom], style : CssValues, attributes : GlobalAttributes, events : [DomEvent]);

		eP(s : string) -> EP {
			EP(s, [], emptyCssValues(), emptyGlobalAttributes(), []);
		}

		// https://www.w3.org/TR/2018/WD-html53-20181018/grouping-content.html#the-div-element
		EDiv(children : [EDom], style : CssValues, attributes : GlobalAttributes, events : [DomEvent]);

		// https://www.w3.org/TR/2018/WD-html53-20181018/textlevel-semantics.html#the-span-element
		ESpan(html : string, children : [EDom], style : CssValues, attributes : GlobalAttributes, events : [DomEvent]);


		// https://www.w3.org/TR/2018/WD-html53-20181018/textlevel-semantics.html#the-a-element
		EA(
			// Address of the hyperlink
			href : string,
			// Default browsing context for hyperlink navigation and §4.10.21 Form submission
			target : string,
			// Indicates to download the linked resource instead of navigating to it. If the attribute has a set value, change the resource’s proposed filename to the set value
			download : string,
			// URLs of the resources that are interested in being notified
			ping : string,
			// Relationship of this document (or subsection/topic) to the destination resource
			rel : string,
			//  Reverse link relationship of the destination resource to this document (or subsection/topic)
			rev : string,
			// Language of the linked resource
			hreflang : string,
			// Hint for the type of the referenced resource
			type : string,
			// Referrer policy for fetches initiated by the element
			referrerPolicy : string,
			children : [EDom],
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		// https://www.w3.org/TR/2018/WD-html53-20181018/semantics-embedded-content.html#elementdef-img
		EImg(
			// Address of the resource
			src : string,
			// Replacement text for use when images are not available
			alt : string,
			// Images to use in different situations (e.g., high-resolution displays, small monitors, etc)
			srcset : string,
			// Image sizes between breakpoints
			sizes :string,
			// How the element handles crossorigin requests
			crossOrigin : string,
			// Hint for requesting synchronous or asynchronous loading
			decoding : string,
			// Name of image map to use
			usemap : string,

			// ismap - Whether the image is a server-side image map

			// Horizontal dimension
			width : int,
			// Vertical dimension
			height : int,
			// Referrer policy for fetches initiated by the element
			referrerPolicy : string,
			// A url that provides a link to an expanded description of the image, defined in [html-longdesc]
			longdesc : string,
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		// https://www.w3.org/TR/2018/WD-html53-20181018/semantics-embedded-content.html#the-iframe-element
		EIFrame(
			// Address of the resource
			src : string,
			// A document to render in the iframe
			srcdoc : string,
			// Name of nested browsing context
			name : string,
			// Security rules for nested content
			sandbox : string,
			// Whether to allow the iframe’s contents to use requestFullscreen()
			allowFullscreen : bool,
			// Whether the iframe’s contents are allowed to use the PaymentRequest interface to make payment requests
			allowPaymentRequest : bool,
			// Whether to allow the iframe's browsing context to use getUserMedia()
			allowUseMedia : bool,
			// Horizontal dimension
			width : string,
			// Vertical dimension
			height : string,
			// Referrer policy for fetches initiated by the element
			referrerPolicy : string,
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		// https://www.w3.org/TR/2018/WD-html53-20181018/semantics-embedded-content.html#the-video-element
		// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video
		EVideo(
			// Address of the resource
			src : string,
			// How the element handles crossorigin requests
			crossorigin : string,
			// Poster frame to show prior to video playback: A URL
			poster : string,
			// Hints how much buffering the media resource will likely need: none, metadata, auto (default)
			preload : string,
			// Hint that the media resource can be started automatically when the page is loaded
			autoplay : bool,
			// Whether to loop the media resource
			loop : bool,
			// Whether to mute the media resource by default
			muted : bool,
			// Show user agent controls
			controls : bool,
			// Whether the remote playback of a media resource is disabled
			disableRemotePlayback : bool,
			// Horizontal dimension
			width : string,
			// Vertical dimension
			height : string,
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		// https://www.w3.org/TR/2018/WD-html53-20181018/tabular-data.html#the-table-element
		ETable(
			// TODO: Attributes
			children : [EDom],
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		// https://www.w3.org/TR/2018/WD-html53-20181018/tabular-data.html#the-tbody-element
		ETBody(
			// TODO: Attributes
			children : [EDom],
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		// https://www.w3.org/TR/2018/WD-html53-20181018/tabular-data.html#the-thead-element
		ETHead(
			// TODO: Attributes
			children : [EDom],
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		// https://www.w3.org/TR/2018/WD-html53-20181018/tabular-data.html#the-tr-element
		ETr(
			// TODO: Attributes
			children : [EDom],
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		// https://www.w3.org/TR/2018/WD-html53-20181018/tabular-data.html#the-td-element
		ETd(
			// TODO: Attributes
			children : [EDom],
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		// https://www.w3.org/TR/2018/WD-html53-20181018/tabular-data.html#the-th-element
		ETh(
			// TODO: Attributes
			children : [EDom],
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		// https://www.w3.org/TR/2018/WD-html53-20181018/sec-forms.html#the-input-element
		EInput(
			// TODO: Attributes
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		// https://www.w3.org/TR/2018/WD-html53-20181018/sec-forms.html#the-button-element
		EButton(
			// Whether the form control is disabled
			disabled : bool,
			// TODO: Attributes
			// autofocus - Automatically focus the form control when the page is loaded
			// form - Associates the control with a form element
			// formaction - URL to use for §4.10.21 Form submission
			// formenctype - Form data set encoding type to use for §4.10.21 Form submission
			// formmethod - HTTP method to use for §4.10.21 Form submission
			// formnovalidate - Bypass form control validation for §4.10.21 Form submission
			// formtarget - browsing context for §4.10.21 Form submission
			// name - Name of form control to use for §4.10.21 Form submission and in the form.elements API
			// type - Type of button
			// value - Value to be used for §4.10.21 Form submission
			children : [EDom],
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		// https://www.w3.org/TR/2018/WD-html53-20181018/sec-forms.html#the-textarea-element
		ETextArea(
			// TODO: Attributes
			html : string,
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		// https://www.w3.org/TR/2018/WD-html53-20181018/semantics-scripting.html#the-canvas-element
		ECanvas(
			// TODO: Attributes
			style : CssValues,
			attributes : GlobalAttributes,
			events : [DomEvent]
		);

		EI(html : string, children : [EDom], style : CssValues, attributes : GlobalAttributes, events : [DomEvent]);

		// TODO: Attributes?
		H1Element(children : [EDom], style : CssValues, attributes : GlobalAttributes, events : [DomEvent]);
		H2Element(children : [EDom], style : CssValues, attributes : GlobalAttributes, events : [DomEvent]);
		H3Element(children : [EDom], style : CssValues, attributes : GlobalAttributes, events : [DomEvent]);
		H4Element(children : [EDom], style : CssValues, attributes : GlobalAttributes, events : [DomEvent]);

		// TODO: Attributes?
		EDialog(
			children : [EDom], 
			style : CssValues, 
			attributes : GlobalAttributes, 
			events : [DomEvent]
		);

		// No tag, just text
		ERawText(html : string);
		// No tags, just a row of elements
		ERaw(children : [EDom]);
}
