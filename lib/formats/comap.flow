// Â© Copyright 2012 Area9 Technologies.
import runtime;
import formats/xml;

export {
	TopicTree(text : string, features : [Pair<string, string>], subtopics : [TopicTree]);
	tree2comap(tree : TopicTree) -> string;
}

tree2comap(tree : TopicTree) -> string {
	"<mindmap escape=\"false\">\n  <metadata>\n    <collaborators/>\n    <watchers/>\n  </metadata>\n"
	+ recurseTopicTree(tree, "  ")
	+ "</mindmap>";
}

comapTagFeature(feature : Pair<string, string>) -> string {
	name = feature.first;
	value = feature.second;
	if (name == "note") {
		"<note><![CDATA[" + xmlEscape(value) + "]]></note>\n"
	} else if (name == "icon") {
		"<icon name=\"" + xmlEscape(value) + "\"/>\n"
	} else {
		""
	}
}

comapPropFeature(feature : Pair<string, string>) -> string {
	name = feature.first;
	value = feature.second;
	if (name == "priority") {
		"priority=\"" + xmlEscape(value) + "\""
	} else if (name == "id") {
		"id=\"" + xmlEscape(value) + "\""
	} else if (name == "completion") {
		"taskCompletion=\"" + xmlEscape(value) + "\""
	} else {
		name + "=\"" + xmlEscape(value) + "\""
	}
}

recurseTopicTree(tree : TopicTree, indent : string) -> string {
	nodeTag = "<node" + fold(tree.features, "", \res, f -> res + " " + comapPropFeature(f)) + ">";
	if (length(tree.subtopics) == 0) {
		indent + nodeTag + "<text><![CDATA[" + xmlEscape(tree.text) + "]]></text></node>\n";
	} else {
		ni = indent + "  ";
		
		r0 = indent + nodeTag + "\n"
			+ ni + "<text><![CDATA[" + xmlEscape(tree.text) + "]]></text>\n";

		r1 = fold(tree.features, r0, \acc, feat -> {
			f = comapTagFeature(feat);
			if (f != "") acc + " " + f
			else acc
		});
		
		nr = fold(tree.subtopics, r1, \acc, subtopic -> {
			acc + recurseTopicTree(subtopic, ni);
		});
		nr + indent + "</node>\n";
	}
}

/*
main() {
	tree = TopicTree("Test", [], [
		TopicTree("Hello'<>\"&", [], []),
		TopicTree("World", [], []),
	]);
	println(tree2comap(tree));
}
*/
