import math/math;

export {

	WebVTT(
		caption : string,
		regions : [CueRegion],
		styles : [CueStyle],
		cues : [CueBlock]
	);

	VTT(caption : string, blocks : [VTTBlock]);
		VTTBlock ::= CueRegion, CueStyle, CueBlock, CueNote;

		CueStyle(css : string);

		CueNote(note : string);

		CueRegion(settings : [CueRegionSetting]);

			CueRegionSetting ::= CueRegionId, CueRegionWidth, CueRegionLines, CueRegionAnchor, CueRegionViewport, CueRegionScroll;
				CueRegionId(name : string);
				CueRegionWidth(width : double);
				CueRegionLines(lines : int);
				CueRegionAnchor(x : double, y : double);
				CueRegionViewport(x : double, y : double);
				CueRegionScroll();

		CueBlock(
			id : string,
			start : CueTimestamp,
			end : CueTimestamp,
			settings : [CueSetting],
			text : [CueText],
		);
			dummyCueBlock = CueBlock("", dummyCueTimestamp, dummyCueTimestamp, [], []);

			CueText(content : string, style : [CueTextStyle]);
				CueTextStyle ::= CueClass, CueTimestamp, CueItalics, CueBold, CueUnderline, CueVoice, CueLanguage;
					CueClass(class : string);
					CueItalics();
					CueBold();
					CueUnderline();
					CueVoice(name : string);
					CueLanguage(lang : string);

			CueTimestamp(h : int, m : int, s : int, ms : int);
				dummyCueTimestamp = CueTimestamp(0, 0, 0, 0);

			CueSetting ::= CueVertical, CueLine, CuePosition, CueSize, CueAlign, CueRegionId;
				CueVertical(dir : string); // lr/rl direction
				CueLine(offset : CueTextOffset, align : CueTextAling);
					CueTextOffset ::= CueLineNumber, CuePercentage;
						CueLineNumber(value : int);
						CuePercentage(value : double);
					CueTextAling ::= CueStart, CueCenter, CueEnd;
						CueStart();
						CueCenter();
						CueEnd();

				CuePosition(position : CuePercentage, align : CueTextPosition);
					CueTextPosition ::= CueLeft, CueCenter, CueRight, CueAuto;
						CueAuto();
						CueLeft();
						CueRight();

				CueSize(size : double);

				CueAlign(align : CueTextAlign);
					CueTextAlign ::= CueStart, CueEnd, CueLeft, CueCenter, CueRight;

	cueTimestamp2double(ts : CueTimestamp) -> double;
}

cueTimestamp2double(ts : CueTimestamp) -> double {
	i2d(ts.h * 60 * 60 + ts.m * 60 + ts.s) + s2d("0." + i2s(ts.ms))
}
