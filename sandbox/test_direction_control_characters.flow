import material/material;
import material/material_manager;
import material/material_dialog;

Test(rawText: string, perCharText: string, style: [CharacterStyle], comment: string);

main() {
	manager = makeMaterialManager([]);

	styleDisabled = [Fill(0xAAAAAA), FontFamily("Ubuntu")];
	styleEnabled = [Fill(0x000000), FontFamily("Ubuntu")];
	tests = [
		Test(
			"'أسئلة مكررة (FAQ)' [in arabic]",
			"'ﺓﺭﺮﻜﻣ ﺔﻠﺌﺳﺃ (FAQ)' [in arabic]",
			styleDisabled,
			"No direction markup, result is not important"
		),
		Test(
			"'‫أسئلة مكررة (FAQ)‬' [in arabic]",
			"'(FAQ) ﺓﺭﺮﻜﻣ ﺔﻠﺌﺳﺃ' [in arabic]",
			styleEnabled,
			"Text between apostrophes is embraced into RLE+PDF."
		),
		Test(
			"We find the phrase 'نشاط التدويل' 5 times on the page.",
			"We find the phrase '5 'ﻞﻳﻭﺪﺘﻟﺍ ﻁﺎﺸﻧ times on the page.",
			styleDisabled,
			"No direction markup, result is not important"
		),
		Test(
			"We find the phrase '‫‫نشاط التدويل‬‬' 5 times on the page.",
			"We find the phrase '5 'ﻞﻳﻭﺪﺘﻟﺍ ﻁﺎﺸﻧ times on the page.",
			styleDisabled,
			"Text between apostrophes is embraced into RLE+PDF, but RTL spills over to 5."
		),
		Test(
			"We find the phrase 'نشاط التدويل⁩' ⁧5 times on the page.",
			"We find the phrase 'ﻞﻳﻭﺪﺘﻟﺍ ﻁﺎﺸﻧ' 5 times on the page.",
			styleEnabled,
			"Text between apostrophes is embraced into RLI+PDI."
		),
		Test(
			"We find the phrase 'نشاط التدويل‎' 5 times on the page.",
			"We find the phrase 'ﻞﻳﻭﺪﺘﻟﺍ ﻁﺎﺸﻧ' 5 times on the page.",
			styleDisabled,
			"LRM placed after text between apostrophes."
		),
		Test(
			"We find the phrase '‫نشاط التدويل‬‎' 5 times on the page.",
			"We find the phrase 'ﻞﻳﻭﺪﺘﻟﺍ ﻁﺎﺸﻧ' 5 times on the page.",
			styleEnabled,
			"Text between apostrophes is embraced into RLE+PDF, RTL spilling stopped with LRM."
		),
		Test(
			"The names of these states in arabic are مصر, البحرين, and الكويت respectively",
			"The names of these states in arabic are ,ﻦﻳﺮﺤﺒﻟﺍ, ﺮﺼﻣ, and ﺖﻳﻮﻜﻟﺍ respectively",
			styleDisabled,
			"No markup, so two states between «are» and «and» visually swapped."
		),
		Test(
			"The names of these states in arabic are ‫مصر‬‎, ‫البحرين‬, and ‫الكويت‬ respectively.",
			"The names of these states in arabic are ﺮﺼﻣ, ﻦﻳﺮﺤﺒﻟﺍ, and ﺖﻳﻮﻜﻟﺍ respectively.",
			styleEnabled,
			"All states ebraced with RLE+PDF, additionally, first comma prepended with LRM."
		),
		Test(
			"The title is 'نشاط التدويل!' in arabic.",
			"The title is 'ﻞﻳﻭﺪﺘﻟﺍ ﻁﺎﺸﻧ!' in arabic.",
			styleDisabled,
			"No markup, so exclamation mark is at right, whilst should be at left."
		),
		Test(
			"The title is 'نشاط التدويل!‏' in arabic.",
			"The title is '!ﻞﻳﻭﺪﺘﻟﺍ ﻁﺎﺸﻧ' in arabic.",
			styleEnabled,
			"RLM immediately after exclamation mark to put it as a part of RTL flow."
		),
		Test(
			"The title is '‫نشاط التدويل!‬' in arabic.",
			"The title is '!ﻞﻳﻭﺪﺘﻟﺍ ﻁﺎﺸﻧ' in arabic.",
			styleEnabled,
			"RLE+PDF to delimit arabic sentence as RTL."
		),
		Test(
			"The title is '⁧‫نشاط التدويل!‬⁩' in arabic.",
			"The title is '!ﻞﻳﻭﺪﺘﻟﺍ ﻁﺎﺸﻧ' in arabic.",
			styleEnabled,
			"Best variant RLI+PDI to delimit arabic sentence as RTL."
		),
		Test(
			"The title is '‫نشاط التدويل!‬‎' in arabic.",
			"The title is '!ﻞﻳﻭﺪﺘﻟﺍ ﻁﺎﺸﻧ' in arabic.",
			styleEnabled,
			"RLE+PDF to delimit arabic sentence with additional LRM after."
		),
	];

	// TODO: swap the cols somehow (on timer or keypress) to help find difference visually.
	lineHeight = 32.0;
	screenWidth = 1024.0;
	commentWidth = 384.0;
	rawTextColumn = MGroup2(MFixedX(screenWidth - commentWidth), MLines(map(tests, \test -> MGroup2(MFixedY(lineHeight), TText(test.rawText, arrayPush(test.style, FontSize(16.0)))))));
	perCharTextColumn = MGroup2(
		MFixedX(screenWidth - commentWidth),
		MLines(map(tests, \test -> MGroup2(MFixedY(lineHeight), MCols(stringFold(test.perCharText, [],
			\a, c -> {
				alphabet = getUnicodeAlphabet(c);
				arrayPush(
					a,
					TText(fromCharCode(c), arrayPush(test.style, FontSize(16.0)))
					|> (if (hasTargetName("js")) idfn else MBorderRight(if (alphabet=="arb") -1.35 else -0.45))
				)
			}
		)))))
	);
	commentColumn = MLines(map(tests, \test -> MSize(MGroup2(MFixedY(lineHeight), MFillX()), TropicParagraph([TText(test.comment, arrayPush(test.style, FontSize(10.0)))], 0.0, commentWidth, [], emptyStylesheet))));
	columnsB = make([rawTextColumn, commentColumn]);
	rawTitle = "This how it looks (press a key)";
	perCharTitle = "This how it ought to be (release a key)";
	titleB = make(rawTitle);
	content = MInteractive(
		[
			KeyDown(\__ -> {
				next(titleB, perCharTitle);
				next(columnsB, [perCharTextColumn, commentColumn]);
			}),
			KeyUp(\__ -> {
				next(titleB, rawTitle);
				next(columnsB, [rawTextColumn, commentColumn]);
			})
		],
		MLines2(
			MSelect(titleB, \title -> TText(title, arrayPush(styleEnabled, FontSize(32.0)))),
			MSelect(columnsB, \cols -> MCols(cols))
		)
	);
	mrender(manager, true, content);
}



