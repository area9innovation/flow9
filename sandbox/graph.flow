import forcelayout;

import ds/simplegraph;
import ds/easygraph2form;

Data(id : int, self : int, score: int);

main() {
	datapoints = [
		Data(3715, 1, 100),
		Data(2200, 1, 80),
		Data(2245, 1, 75),
		Data(2095, 1, 67),
		Data(19007, 2, 0),
		Data(19008, 2, 0),
		Data(19004, 4, 100),
		Data(2200, 1,20),
		Data(2245, 2, 75),
		Data(2095, 2, 50),
		Data(19007, 1, 100),
		Data(19005, 4, 0 ),
		Data(19008, 1, 100),
		Data(2200, 3,  0 ),
		Data(2245, 1, 100),
		Data(2458, 2, 0),
		Data(3468, 2, 0),
		Data(9458, 2, 0),
		Data(19005, 4, 0 ),
		Data(24556, 2, 0),
		Data(19008, 2, 0),
		Data(3428, 2, 0),
	];

	graph0 = makeSimpleGraph();

	graph = foldi(datapoints, graph0, \i, acc, data -> {
		if (i == 0) {
			addSimpleNode(acc, data.id);
		} else {
			prev = datapoints[i - 1];
			addSimpleEdge(acc, prev.id, data.id, data.score, 1)
		}
	});


	gui = easyGraph2Form(graph.graph, [0], [], WidthHeight(600.0, 1024.0), \n : GNode<int> -> {
		color = if (random() < 0.5) green else if (random() < 0.5) yellow else red;

		size = random() * 20.0 + 10.0;

		Circle(size, size, size, [Fill(color)])
		//Text(i2s(n.data), [])
	}, \e -> {
		\p1, p2 -> {
			dx = p2.x - p1.x;
			dy = p2.y - p1.y;

			dist = sqrt(dx * dx + dy * dy);

			ux = dx / dist;
			uy = dy / dist;

			middle = dist / 2.0;

			side = 5.0;

			back1 = middle - 4.0;
			back2 = middle + 4.0;

			Group([
				Graphics([
					MoveTo(p1.x, p1.y), 
					LineTo(p2.x, p2.y),
				], [Stroke(0x888888), StrokeWidth(1.0)]),
				Graphics([
					MoveTo(p2.x - back1 * ux, p2.y - back1 * uy),
					LineTo(p2.x - side * uy - back1 * ux, p2.y + side * ux - back1 * uy),
					LineTo(p2.x - back2 * ux, p2.y - back2 * uy),
					LineTo(p2.x + side * uy - back1 * ux, p2.y - side * ux - back1 * uy),
					LineTo(p2.x - back1 * ux, p2.y - back1 * uy),
				], [Fill(0x888888)])
			])

		}
	});

	render(
		gui
	);

}

