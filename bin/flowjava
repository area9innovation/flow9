#!/bin/bash

set -e

unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     machine=linux;;
    Darwin*)    machine=macos;;
    *)          machine="UNKNOWN:${unameOut}"
esac

SCRIPT_DIR=$( cd "$( dirname "$0" )" && pwd -P )

BASE_DIR=$( cd "$( dirname "$SCRIPT_DIR" )" && pwd -P )
BUILD_DIR=$BASE_DIR/platforms/java/build
LIB=$BASE_DIR/platforms/java/lib
LIBS=$LIB/java-websocket-1.5.1/*:$LIB/bcprov-jdk18on-1.76.jar:$LIB/commons-codec-1.17.1.jar:$LIB/gson-2.11.0.jar:$LIB/jackson-annotations-2.17.2.jar:$LIB/jackson-core-2.17.2.jar:$LIB/jackson-databind-2.17.2.jar:$LIB/java-jwt-4.4.0.jar:$LIB/json-simple-1.1.jar
PATH_TO_FX=$LIB/javafx-sdk-17.0.12/$machine/lib

# Compile the runtime
pushd "$BASE_DIR/platforms/java"
javac -d "$BUILD_DIR" --module-path $PATH_TO_FX --add-modules javafx.controls,javafx.fxml,javafx.base,javafx.graphics -classpath "$LIBS" -g com/area9innovation/flow/*.java javafx/com/area9innovation/flow/javafx/*.java
popd

# Generate the Java for our program
flowc1 java-sub-host=RenderSupport=com.area9innovation.flow.javafx.FxRenderSupport,FlowRuntime=com.area9innovation.flow.javafx.FxFlowRuntime file="$@" java=javagen
find javagen -iname *.java > files.txt

# Compile the generated code
javac -d javagen/build -Xlint:unchecked --module-path $PATH_TO_FX --add-modules javafx.controls,javafx.fxml,javafx.base,javafx.graphics -encoding UTF-8 -cp "$BUILD_DIR" @files.txt

# Remove redundant files list
rm files.txt

JAVA_MAIN=$( echo "$@" | sed -e 's/.flow//g' -e 's/\//./g' )
JAVA_CLASS=$( echo $JAVA_MAIN | sed 's/.*\.//g' )

# Run the program!
java --module-path $PATH_TO_FX --add-modules javafx.controls,javafx.fxml,javafx.base,javafx.graphics -cp "$LIBS":"$BUILD_DIR":javagen/build com.area9innovation.flow.javafx.FxLoader --flowapp="$JAVA_MAIN.$JAVA_CLASS"
