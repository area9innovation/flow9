import net/http;
import sys/system;

main() {
	tm = timestamp();


	ps = generate(1, 10, \i -> {
		Promise(\onOK, __ -> {
			timer(1000, \ -> {
				println("Task done: " + i2s(i) + " tm=" + toString(timestamp() - tm));
				onOK(i);
			});
		});
	});

	doneP(
		allPchunked(ps, 10),
		println,
		println
	);
	println(">> START");
	timer(0, \ -> {
		println("Timer 0 " + toString(timestamp() - tm));
	});

	println("Run 5 sec timer " + toString(timestamp() - tm));
	timer(5000, \ -> {
		println("call  quit(1) " + toString(timestamp() - tm));
		quit(1);
	});

	generate(1, 1000 * 1000 * 5, i2s);

	println(">> HTTP tests");
	httpRequest(
		"http://localhost:90",
		false,
		[], [],
		\data -> println("Data ! " + toString(timestamp() - tm)),
		\error -> println("Error ! " + toString(timestamp() - tm)),
		\status -> println("Status ! " + toString(timestamp() - tm))
	);
	println("Do not sleep httpRequest !");

	httpCustomRequestStyled(
		"http://localhost:90",
		GET(),
		\code, data, headers -> {
			println("loaded 2! " + toString(timestamp() - tm));
		},
		[]
	);
	println("Do not sleep httpCustomRequestStyled !");

	println(">> startProcess");
	startProcess(
		"curl",
		["http://localhost:90"],
		".",
		"",
		\code, stdout, stderr -> {
			println("Data from curl: stdout: " + stdout + "; stderr: " + stderr);
			println("Exit code " + i2s(code) + " time: " + toString(timestamp() - tm));
		},
	);
	println("Do not sleep startProcess !");

	/*
	println(">> test readUntil");
	println(readUntil("\n"));

	println(">> readBytes");
	println(readBytes(4));
	*/

	println("Exit main.")
}

