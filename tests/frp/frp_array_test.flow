import runtime;
import string;

import frp/frp;
import tests/frp/frp_test_utils;

export {
	frpArrayTests =
		[
			rconnectARangeMap_test,
			rconnectARangeMap_2_test,
			rselectA_test,
			rselectARange_test,
			rselectARangeMap_test,
			rselectARangeDynamic_test,
			rselectARangeMapDynamic_test,
			rselectAZip_test,
			rselectAZipRange_test,
			rselectAZipRange_diamond_test,
		];
}


rselectA_test = \-> frpTest("selectA", \-> {
	cell1 = rmakeA([2,3,4]);
	cell2 = rselectA(cell1, \arr -> fold(arr, 0, \acc,el -> acc + el));
	r1  = checkFrp(cell2, 9);

	rnextA(cell1, [20,3,4]); //change one value
	r2  = checkFrp(cell2, 27);

	rnextA(cell1, [10,20]); // shorter array
	r3  = checkFrp(cell2, 30);

	rnextA(cell1, [10,20,30,40]); // longer array
	r4  = checkFrp(cell2, 100);

	r1 && r2 && r3 && r4;
});

rselectARange_test = \-> frpTest("rselectARange", \-> {
	cell1 = rmakeA([2,3,4,5,6]);
	cell2 = rselectARange(cell1, 1, 3, \arr -> fold(arr, 0, \acc,el -> acc + el));

	r1  = checkFrp(cell2, 12);

	rnextA(cell1, [10,20,30,40,50]);
	r2  = checkFrp(cell2, 90);

	rnextA(cell1, [1,20,30,40,5]);
	r3  = checkFrp(cell2, 90);

	rnextA(cell1, [10,]);
	r4  = checkFrp(cell2, 0);

	rnextA(cell1, [10,20,30,40,50]);
	rnextElement(cell1, 2, 300);
	r5  = checkFrp(cell2, 360);

	rnextElement(cell1, 0, 10000);
	r6  = checkFrp(cell2, 360);

	rnextElement(cell1, 1000, 10000);
	r7  = checkFrp(cell2, 360);

	r1 && r2 && r3 && r4 && r5 && r6 && r7;
});

rselectARangeMap_test = \-> frpTest("rselectARangeMap", \-> {
	cell1 = rmakeA([2,3,4,5,6]);
	cell2 = rselectARangeMap(cell1, 1, 3, \v -> v * 2);

	r1  = checkFrpArr(cell2, [6, 8, 10]);

	rnextA(cell1, [10,20,30,40,50]);
	r2  = checkFrpArr(cell2, [40,60,80]);

	rnextElement(cell1, 4, 100);
	r3  = checkFrpArr(cell2, [40,60,80]);

	rnextElement(cell1, 2, 100);
	r4  = checkFrpArr(cell2, [40,200,80]);

	rnextA(cell1, [10]);
	r5  = checkFrpArr(cell2, []);

	r1 && r2 && r3 && r4 && r5;
});

rconnectARangeMap_test = \-> frpTest("rconnectARangeMap", \-> {
	cell1 = rmakeA([2,3,4,5,6]);
	cell2 = rmakeA([]);
	rconnectARangeMap(cell1, cell2, 1, 3, true, \v -> v * 2);

	r1  = checkFrpArr(cell2, [6, 8, 10]);

	rnextA(cell1, [10,20,30,40,50]);
	r2  = checkFrpArr(cell2, [40,60,80]);

	rnextElement(cell1, 4, 100);
	r3  = checkFrpArr(cell2, [40,60,80]);

	rnextElement(cell1, 2, 100);
	r4  = checkFrpArr(cell2, [40,200,80]);

	rnextA(cell1, [10]);
	r5  = checkFrpArr(cell2, []);

	r1 && r2 && r3 && r4 && r5;
});


rconnectARangeMap_2_test = \-> frpTest("rconnectARangeMap_2", \-> {
	// test of initialization on first rnextElement
	cell1 = rmakeA([2,3,4,5,6]);
	cell2 = rmakeA([]);
	rconnectARangeMap(cell1, cell2, 1, 3, false, \v -> v * 2);

	r1  = checkFrpArr(cell2, []);

	rnextElement(cell1, 2, 100); // cause to init cell2
	r2  = checkFrpArr(cell2, [6,200,10]);

	r1 && r2
});


rselectARangeDynamic_test = \-> frpTest("rselectARangeDynamic", \-> {
	cell1 = rmakeA([2,3,4,5,6]);
	first_cell = rmake(1);
	count_cell = rmake(3);
	cell2 = rselectARangeDynamic(cell1, first_cell, count_cell, \arr -> fold(arr, 0, \acc,el -> acc + el));

	r1  = checkFrp(cell2, 12);

	rnextA(cell1, [10,20,30,40,50]);
	r2  = checkFrp(cell2, 90);

	//println("set count 4");
	rnext(count_cell, 4);
	r3  = checkFrp(cell2, 140);

	//println("set count 100");
	rnext(count_cell, 100);
	r4  = checkFrp(cell2, 140);

	//println("set first 0");
	rnext(first_cell, 0);
	r5  = checkFrp(cell2, 150);

	//println("set first 50");
	rnext(first_cell, 50);
	r6  = checkFrp(cell2, 0);

	r1 && r2 && r3 && r4 && r5 && r6;
});

rselectARangeMapDynamic_test = \-> frpTest("rselectARangeMapDynamic", \-> {
	cell1 = rmakeA([2,3,4,5,6]);
	first_cell = rmake(1);
	count_cell = rmake(3);
	cell2 = rselectARangeMapDynamic(cell1, first_cell, count_cell, \v -> v*2);

	r1  = checkFrpArr(cell2, [6, 8, 10]);

	rnextA(cell1, [10,20,30,40,50]);
	r2  = checkFrpArr(cell2, [40,60,80]);

	rnextElement(cell1, 4, 100);
	r3  = checkFrpArr(cell2, [40,60,80]);

	rnextElement(cell1, 2, 100);
	r4  = checkFrpArr(cell2, [40,200,80]);

	rnextA(cell1, [10]);
	r5  = checkFrpArr(cell2, []);

	rnextA(cell1, [10,20,30,40,50]);
	rnext(first_cell, 2);
	r6  = checkFrpArr(cell2, [60, 80, 100]);

	rnext(count_cell, 2);
	r7  = checkFrpArr(cell2, [60, 80]);

	r1 && r2 && r3 && r4 && r5 && r6 && r7;
});


rselectAZip_test = \-> frpTest("rselectAZip", \-> {
	cell1 = rmakeA([2,3,4]);
	cell2 = rmakeA([10,20,30]);
	cell3 = rselectAZip(cell1, cell2, \v1,v2 -> v1 + v2);
	r1 = checkFrpArr(cell3, [12, 23, 34]);

	rnextElement(cell1, 1, 100);
	r2 = checkFrpArr(cell3, [12, 120, 34]);

	rnextA(cell2, [100]);
	r3 = checkFrpArr(cell3, [102]);

	r1 && r2 && r3
});


rselectAZipRange_test = \-> frpTest("rselectAZipRange", \-> {
	cell1 = rmakeA([2,3,4,5]);
	cell2 = rmakeA([10,20,30,40]);
	cell3 = rselectAZipRange(cell1, cell2, 0, 1, 3, \v1,v2 -> v1 + v2);

	r1 = checkFrpArr(cell3, [22, 33, 44]);

	rnextElement(cell1, 1, 100);
	r2 = checkFrpArr(cell3, [22, 130, 44]);

	rnextElement(cell2, 1, 100);
	r3 = checkFrpArr(cell3, [102, 130, 44]);

	rnextA(cell2, [100]);
	r4 = checkFrpArr(cell3, []);

	rnextA(cell2, [100, 200]);
	r5 = checkFrpArr(cell3, [202]);

	rnextA(cell1, [1, 2, 3, 4, 5, 6, 7]);
	r6 = checkFrpArr(cell3, [201]);

	r1 && r2 && r3 && r4 && r5 && r6
});


rselectAZipRange_diamond_test = \-> frpTest("rselectAZipRange_diamond", \-> {
	cell1 = rmakeA([2,3,4,5]);
	cell2 = rselectARangeMap(cell1, 0, 3, \v -> v + 1);
	cell3 = rselectARangeMap(cell1, 1, 3, \v -> v + 2);
	cell4 = rselectAZipRange(cell2, cell3, 0, 1, 2, \v1,v2 -> v1 + v2);

	r1 = checkFrpArr(cell2, [3,4,5]) && checkFrpArr(cell3, [5,6,7]) && checkFrpArr(cell4, [9,11]);

	rnextElement(cell1, 1, 100); // force to update 1 element of both cell2 and cell3, and 2-pass update of cell4
	r2 = checkFrpArr(cell2, [3,101,5]) && checkFrpArr(cell3, [102,6,7]) && checkFrpArr(cell4, [9,108]);

	rnextElement(cell1, 0, 10);  // cause to update 1 element of cell2 only, and 1-pass update 1 element of cell4
	r3 = checkFrpArr(cell2, [11,101,5]) && checkFrpArr(cell3, [102,6,7]) && checkFrpArr(cell4, [17,108]);

	rnextElement(cell1, 3, 20); // cause to update 1 element of cell3 only, and 1-pass update 1 element of cell4
	r4 = checkFrpArr(cell2, [11,101,5]) && checkFrpArr(cell3, [102,6,22]) && checkFrpArr(cell4, [17,123]);

	rnextA(cell1, [1,2,3,4,5]); // cause to full update of all cells
	r5 = checkFrpArr(cell2, [2,3,4]) && checkFrpArr(cell3, [4,5,6]) && checkFrpArr(cell4, [7,9]);

	r1 && r2 && r3 && r4 && r5
});
