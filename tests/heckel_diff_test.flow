import material/material_ui;

main() {
	a1 = generate(0, 1000, \__ -> generate(0, 1000, \__ -> dround(random())));
	a2 = generate(0, 1000, \__ -> generate(0, 1000, \__ -> dround(random())));

	ts = ref timestamp();
	dd = heckelDiff(a1, a2);

	a3 = fold(dd, a1, \acc, op -> {
		switch (op) {
			HeckelInsert(i, v): {
				insertArray(acc, i, v);
			}
			HeckelMove(f, t): {
				moveElement(acc, f, t);
			}
			HeckelDelete(i): {
				removeIndex(acc, i);
			}
		}
	});

	heDiffTime = timestamp() - ^ts;
	println(heDiffTime);
	ts := timestamp();

	dd2 = arrayDiffWithSwapp(a1, a2, false);

	a4 = fold(dd2, a1, \acc, op -> {
		switch (op) {
			ArrayNop(__, __): acc;
			ArrayInsert(i, __, v): insertArray(acc, i, v);
			ArrayReplace(i, __, v): replace(acc, i, v);
			ArrayRemove(i, __): {
				removeIndex(acc, i);
			}
			ArraySwap(i, __, v): {
				replace(
					replace(acc, i + 1, v.second),
					i,
					v.first
				);
			}
		}
	});

	arDiffTime = timestamp() - ^ts;
	println(arDiffTime);

	assertEquals(a2, a3);
	assertEquals(a2, a4);

	// println(heDiffTime);
	// println(arDiffTime);
}