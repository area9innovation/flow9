import ds/array;
import runtime;
import math/math;

FirstDummyStruct(arg0 : int, arg1 : string);
SecondDummyStruct(arg0 : [int]);

DummyStyle<?> ::= DummyCallbackStyle<?>, DummyEmptyStyle;

	DummyCallbackStyle(fn : (?) -> void);
	DummyEmptyStyle();

myFooBarFunction(arg0 : bool, arg1 : int, style : [DummyStyle<FirstDummyStruct>]) -> int {
	styleFn : (SecondDummyStruct) -> void = extractStruct(style, DummyCallbackStyle(nop1)).fn;

	styleFn(SecondDummyStruct([]));
	b2i(arg0) + arg1
}

main() {
	style : [DummyStyle<FirstDummyStruct>] = [
		DummyCallbackStyle(\struct : FirstDummyStruct -> {
			// print real value
			println("Real <struct : FirstDummyStruct> value is " + toString(struct) + "\n\n")
		})	
	];
	myFooBarFunction(false, 0, style);

	fatalErrorStyle : [DummyStyle<FirstDummyStruct>] = [
		DummyCallbackStyle(\struct : FirstDummyStruct -> {
			// `struct.arg1` will cause a runtime error
			println("struct.arg1 is " + toString(struct.arg1))
		})
	];
	myFooBarFunction(false, 0, fatalErrorStyle);

	quit(0)
}

