import material/material2tropic;
import transforms;

Unit(
	name : string,
	initial : string,
);

makeConverter(unit1 : Unit, unit2 : Unit, factor : double, shift : double) -> Material {
	celcius = make(unit1.initial);
	fahrenheit = make(unit2.initial);
	link = bidirectionalLink(celcius, fahrenheit, \c -> {
		cd = s2d(c);
		fah = cd * (factor) + shift;
		d2st(fah, 1)
	}, \f -> {
		fd = s2d(f);
		cel = (fd - shift) / factor;
		d2st(cel, 1)
	});

	MLines([
		MTextInput(celcius, [MFloatingLabel(), MLabel(unit1.name)], []),
		MTextInput(fahrenheit, [MFloatingLabel(), MLabel(unit2.name)], []),
	]);
}

makeFlashLight() -> Material {
	color = make(MWhite());
	visible = make(true);
	MCols([
		MVisible(visible,
			MColorPicker(color, []),
		),
		MClickable(
			MSelect(color, \col -> {
				TRectangle([
					MFill(col)
				], TFillXY())
			}),
			\ -> {
				next(visible, !getValue(visible))
			}
		)
	]);
}

makeNotepad() -> Material {
	text = make("");
	MLines([
		MMenu(
			MTextButton("File", nop, [], []),
			[
				MMenuSingleLine("Save", [
					MOnClick(\ -> {
						setFileContent("notes.txt", getValue(text));
						{}
					})
				]),
			],
			[MOpenOnClick()]
		),
		MTextInput(
			text,
			[Multiline(true), MMaxLines(-1), MCustomTextStyle([
				MFont(24.0, "Consolas", primaryTextOpacity, primaryTextOpacityDark, ParagraphMargin(0., 0.), InterlineSpacing(0.))
				])],
			[]
		)
	])
}

animateRotation(e : DynamicBehaviour<double>) -> void {
	timer(100, \ -> {
		next(e, getValue(e) + 1.0);
		animateRotation(e);
	})
}

main() {
	manager = makeMaterialManager([]);

	cel = Unit("Celcius", "100");
	fah = Unit("Fahrenheit", "100");
	celfah = makeConverter(cel, fah, 9.0/5.0, 32.0);

	feet = Unit("Feet", "5");
	meters = Unit("Meter", "15");
	feetmet = makeConverter(feet, meters, 1.0 / 3.281, 0.0);
	
	rotation = make(0.0);
	animateRotation(rotation);

	mrender(manager, true, 
		MRotate(
			rotation,
			MDynamicTabs(const([
					MTab(celfah, const("Temperature"), []),
					MTab(feetmet, const("Distance"), []),
					MTab(makeFlashLight(), const("Flashlight"), []),
					MTab(makeNotepad(), const("Notepad"), [])
				]), make(3), []
			),
		)
	);
}
