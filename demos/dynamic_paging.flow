import material/material;
import material/material_gui;

export {
	demoMakeDynamicPaging(onClose : () -> void) -> Material;
}

demoMakeDynamicPaging(onClose : () -> void) -> Material {
	lines = map(cityList, \c -> MText(c, []) |> demoBox);

	MLines([
		MText("Resize the window.", []) |> demoBox,
		MCols2(MFixedX(24.), buildLinesViewWithPaging(lines)),
		MTextButton("CLOSE", onClose, [], [])
	])
}

demoBox(m : Material) -> Material { MPad(8., 8., m); }

buildLinesViewWithPaging(lines : [Material]) -> Material {
	currentPage = make(1);
	rowsPerPage = make(10);
	totalPages = make(1);
	linesPaged : DynamicBehaviour<[Material]> = make([]);
	l = length(lines);
	rowheight = 24;

	MLines2(
		MAttach(
			MGroup2(
				MFixedY(100.), // minimal height
				TFillXY()
			),
			\fm -> {
				MConstruct(
					[
						makeSubscribe(fm.height, \hgt -> nextDistinct(rowsPerPage, trunc(hgt) / rowheight)),
						makeSubscribe(rowsPerPage, \rpp ->
							nextDistinct(totalPages, {( if (l > 0) l - 1 else l) / rpp + 1; })),
						makeSubscribe(totalPages, \tp -> if (getValue(currentPage) > tp) nextDistinct(currentPage, tp)),
						make2Subscribe(currentPage, rowsPerPage,
							\cp, rpp -> nextDistinct(linesPaged, subrange(lines, (cp-1)*rpp, rpp))
						)
					],
					MSelect(linesPaged, \lp -> MLines(lp))
				)
			}
		),
		pagingControl(currentPage, totalPages)
	)
}

pagingControl(currentPage : DynamicBehaviour<int>, totalPages : DynamicBehaviour<int>) -> Material {
	MBaselineColsA([
		MIconButton("navigate_before",
			\ -> {
				if (getValue(currentPage) <= 1)
					nextDistinct(currentPage, 1)
				else
					nextDistinct(currentPage, getValue(currentPage) - 1)
			},
			[], []
		),
		MSelect2(currentPage, totalPages, \cp, tp ->
			MText(formatString(_("Page %1 of %2"), map([cp, tp], i2s)), [])
		),
		MIconButton("navigate_next",
			\ -> {
				if (getValue(currentPage) >= getValue(totalPages))
					nextDistinct(currentPage, getValue(totalPages))
				else
					nextDistinct(currentPage, getValue(currentPage) + 1)
			},
			[], []
		)
	])
}

cityList = [
	"New York City; New York",
	"Los Angeles; California",
	"Chicago; Illinois",
	"Houston; Texas",
	"Philadelphia; Pennsylvania",
	"Phoenix; Arizona",
	"San Antonio; Texas",
	"San Diego; California",
	"Dallas; Texas",
	"San Jose; California",
	"Austin; Texas",
	"Jacksonville; Florida",
	"Indianapolis; Indiana",
	"San Francisco; California",
	"Columbus; Ohio",
	"Fort Worth; Texas",
	"Charlotte; North Carolina",
	"Detroit; Michigan",
	"El Paso; Texas",
	"Memphis; Tennessee",
	"Boston; Massachusetts",
	"Seattle; Washington",
	"Denver; Colorado",
	"Washington; DC",
	"Nashville-Davidson; Tennessee",
	"Baltimore; Maryland",
	"Louisville/Jefferson; Kentucky",
	"Portland; Oregon",
	"Oklahoma ; Oklahoma",
	"Milwaukee; Wisconsin",
	"Las Vegas; Nevada",
	"Albuquerque; New Mexico",
	"Tucson; Arizona",
	"Fresno; California",
	"Sacramento; California",
	"Long Beach; California",
	"Kansas ; Missouri",
	"Mesa; Arizona",
	"Virginia Beach; Virginia",
	"Atlanta; Georgia",
	"Colorado Springs; Colorado",
	"Raleigh; North Carolina",
	"Omaha; Nebraska",
	"Miami; Florida",
	"Oakland; California",
	"Tulsa; Oklahoma",
	"Minneapolis; Minnesota",
	"Cleveland; Ohio",
	"Wichita; Kansas",
	"Arlington; Texas",
	"New Orleans; Louisiana",
	"Bakersfield; California",
	"Tampa; Florida",
	"Honolulu; Hawaii",
	"Anaheim; California",
	"Aurora; Colorado",
	"Santa Ana; California",
	"St. Louis; Missouri",
	"Riverside; California",
	"Corpus Christi; Texas",
	"Pittsburgh; Pennsylvania",
	"Lexington-Fayette; Kentucky",
	"Anchorage municipality, Alaska",
	"Stockton; California",
	"Cincinnati; Ohio",
	"St. Paul; Minnesota",
	"Toledo; Ohio",
	"Newark; New Jersey",
	"Greensboro; North Carolina",
	"Plano; Texas",
	"Henderson; Nevada",
	"Lincoln; Nebraska",
	"Buffalo; New York",
	"Fort Wayne; Indiana",
	"Jersey ; New Jersey",
	"Chula Vista; California",
	"Orlando; Florida",
	"St. Petersburg; Florida",
	"Norfolk; Virginia",
	"Chandler; Arizona",
	"Laredo; Texas",
	"Madison; Wisconsin",
	"Durham; North Carolina",
	"Lubbock; Texas",
	"Winston-Salem; North Carolina",
	"Garland; Texas",
	"Glendale; Arizona",
	"Hialeah; Florida",
	"Reno; Nevada",
	"Baton Rouge; Louisiana",
	"Irvine; California",
	"Chesapeake; Virginia",
	"Irving; Texas",
	"Scottsdale; Arizona",
	"North Las Vegas; Nevada",
	"Fremont; California",
	"Gilbert town, Arizona",
	"San Bernardino; California",
	"Boise; Idaho",
	"Birmingham; Alabama",
];