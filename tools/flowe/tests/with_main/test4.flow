native map : ([?], (?) -> ??) -> [??] = Native.map;
native concat : ([?], [?]) -> [?] = Native.concat;
native length : ([?]) -> int = Native.length;

reverseA(arr : [?]) -> [?] {
	doReverseA(arr, [], 0)	
}

doReverseA(arr : [?], acc : [?], i : int) -> [?] {
	if (length(arr) == i) {
		acc;
	} else {
		doReverseA(arr, concat([arr[i]], acc), i + 1);
	}
}

native println2 : io (flow) -> void = Native.println;
native quit : io (code : int) -> void = Native.quit;
native toString2 : (flow) -> string = Native.toString;

main() -> void {
	println2("Test4...");
	println2(map([1, 2, 3, 4], toString2));
	println2(map(reverseA([1, 2, 3, 4]), toString2));
	quit(0);
}