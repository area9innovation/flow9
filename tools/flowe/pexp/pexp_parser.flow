// Produced by  flowcpp gringo/gringo.flow -- file=flowe/pexp/pexp.gringo compile=1
import text/gringo/dcode_lib;
import string;

export {
	g_parse_flow(acc : DParseAcc<?>) -> bool;
}


g_parse_flow(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		matchString(acc, "\\uFEFF");
		if (addMatched(acc, i2s(acc.i))) {
			if ((g_parse_ws(acc) && ((g_parse_toplevels(acc) && ((addVerbatim(acc, "module") && addVerbatim(acc, "setpos"))))))) {
				{
					g_parse_lastLineComment(acc);
					discardDCheckpoint(acc)
				}
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_toplevels(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((g_parse_toplevel(acc) && ((addVerbatim(acc, "cons") && ((parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((g_parse_toplevel(acc) && addVerbatim(acc, "cons"))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}) && g_parse_optsemi(acc))))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_toplevel(acc : DParseAcc<?>) -> bool {
	g_parse_import(acc) || (g_parse_export(acc) || (g_parse_forbid(acc) || (g_parse_native(acc) || (g_parse_union(acc) || (g_parse_global(acc) || g_parse_functionOrStruct(acc))))))
}

g_parse_semi(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (((if (matchString(acc, ";")) {
			true
		} else {
			addParseError(acc, "Expected \";\"")
		}) && g_parse_ws(acc))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_optsemi(acc : DParseAcc<?>) -> bool {
	{
		(matchString(acc, ";") && g_parse_ws(acc));
		true
	}
}

g_parse_import(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((matchString(acc, "import") && ((g_parse_s(acc) && ((g_parse_pathpos(acc) && ((g_parse_ws(acc) && ((g_parse_semi(acc) && addVerbatim(acc, "import"))))))))))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_export(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (matchString(acc, "export")) {
			if (addMatched(acc, i2s(acc.i))) {
				if ((g_parse_ws(acc) && ((matchString(acc, "{") && ((g_parse_ws(acc) && ((g_parse_toplevels(acc) && ((matchString(acc, "}") && ((g_parse_ws(acc) && ((addVerbatim(acc, "export") && addVerbatim(acc, "setpos"))))))))))))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_forbid(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((matchString(acc, "forbid") && ((g_parse_s(acc) && ((g_parse_pathpos(acc) && ((g_parse_ws(acc) && ((g_parse_semi(acc) && addVerbatim(acc, "forbid"))))))))))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_pathpos(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			{
				acc.starti ::= acc.i;
				if (((if (g_parse_path(acc)) {
					{
						addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
						true
					}
				} else {
					false
				}) && addVerbatim(acc, "setpos"))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_path(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((g_parse_bid(acc) && parseStar(acc, \ -> {
			(matchString(acc, "/") && g_parse_bid(acc))
		}))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_native(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((matchString(acc, "native") && ((g_parse_s(acc) && ((g_parse_idpos(acc) && ((matchString(acc, ":") && ((g_parse_ws(acc) && addVerbatim(acc, "list"))))))))))) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((matchString(acc, "io") && ((g_parse_ws(acc) && ((addMatched(acc, "io") && addVerbatim(acc, "cons"))))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				if ((g_parse_type(acc) && ((matchString(acc, "=") && g_parse_ws(acc))))) {
					{
						acc.starti ::= acc.i;
						if (((if (g_parse_nativename(acc)) {
							{
								addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
								true
							}
						} else {
							false
						}) && ((g_parse_ws(acc) && ((g_parse_semi(acc) && addVerbatim(acc, "native"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_nativename(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((g_parse_bid(acc) && parseStar(acc, \ -> {
			(matchString(acc, ".") && g_parse_bid(acc))
		}))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_union(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((g_parse_typename(acc) && ((matchString(acc, "::=") && ((g_parse_ws(acc) && ((g_parse_typenames(acc) && ((g_parse_semi(acc) && addVerbatim(acc, "union"))))))))))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_typenames(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((g_parse_typename(acc) && ((addVerbatim(acc, "cons") && parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",") && ((g_parse_ws(acc) && ((g_parse_typename(acc) && addVerbatim(acc, "cons"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}))))) {
					{
						(matchString(acc, ",") && g_parse_ws(acc));
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_global(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (g_parse_idpos(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if ((matchString(acc, "=") && g_parse_ws(acc))) {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if (if ((g_parse_brace(acc) && ((g_parse_optsemi(acc) && addVerbatim(acc, "global"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if ((g_parse_exp(acc) && ((g_parse_semi(acc) && addVerbatim(acc, "global"))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							}
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if ((matchString(acc, ":") && ((g_parse_ws(acc) && ((g_parse_type(acc) && ((matchString(acc, "=") && ((g_parse_ws(acc) && ((g_parse_brace(acc) && ((g_parse_optsemi(acc) && addVerbatim(acc, "global_typed"))))))))))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if ((matchString(acc, ":") && ((g_parse_ws(acc) && ((g_parse_type(acc) && ((matchString(acc, "=") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && ((g_parse_semi(acc) && addVerbatim(acc, "global_typed"))))))))))))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							}
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_functionOrStruct(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (g_parse_idpos(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if (g_parse_lambdatype(acc)) {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if (if ((g_parse_brace(acc) && ((g_parse_optsemi(acc) && addVerbatim(acc, "fndef_typed"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if ((g_parse_exp(acc) && ((g_parse_semi(acc) && addVerbatim(acc, "fndef_typed"))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									{
										pushDCheckpoint(acc);
										if (if ((g_parse_semi(acc) && addVerbatim(acc, "typedef"))) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}
									}
								}
							}
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if ((g_parse_lambdatypeauto(acc) && ((g_parse_brace(acc) && ((g_parse_optsemi(acc) && addVerbatim(acc, "fndef_typed"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if ((g_parse_lambdatypeauto(acc) && ((g_parse_exp(acc) && ((g_parse_semi(acc) && addVerbatim(acc, "fndef_typed"))))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									{
										pushDCheckpoint(acc);
										if (if ((matchString(acc, "(") && ((g_parse_ws(acc) && ((g_parse_structargs(acc) && ((matchString(acc, ")") && ((g_parse_ws(acc) && ((g_parse_semi(acc) && addVerbatim(acc, "structdef"))))))))))))) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}) {
											discardDCheckpoint(acc)
										} else {
											{
												pushDCheckpoint(acc);
												if (if ((matchString(acc, ":") && ((g_parse_ws(acc) && ((g_parse_type(acc) && ((g_parse_semi(acc) && addVerbatim(acc, "typedef"))))))))) {
													discardDCheckpoint(acc)
												} else {
													restoreDCheckpoint(acc)
												}) {
													discardDCheckpoint(acc)
												} else {
													{
														pushDCheckpoint(acc);
														if (if ((matchString(acc, ":") && ((g_parse_ws(acc) && ((matchString(acc, "(") && ((g_parse_ws(acc) && ((g_parse_structargs(acc) && ((matchString(acc, ")") && ((g_parse_ws(acc) && ((g_parse_semi(acc) && addVerbatim(acc, "structdef"))))))))))))))))) {
															discardDCheckpoint(acc)
														} else {
															restoreDCheckpoint(acc)
														}) {
															discardDCheckpoint(acc)
														} else {
															restoreDCheckpoint(acc)
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_structargs(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((g_parse_structarg(acc) && ((addVerbatim(acc, "cons") && parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",") && ((g_parse_ws(acc) && ((g_parse_structarg(acc) && addVerbatim(acc, "cons"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}))))) {
					{
						(matchString(acc, ",") && g_parse_ws(acc));
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_structarg(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (matchString(acc, "mutable")) {
					{
						pushDCheckpoint(acc);
						if (((if (g_parse_letterOrDigit(acc)) {
							restoreDCheckpoint(acc)
						} else {
							{
								restoreDCheckpoint(acc);
								true
							}
						}) && ((g_parse_ws(acc) && ((addMatched(acc, "mutable") && addVerbatim(acc, "cons"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				if ((g_parse_idpos(acc) && ((matchString(acc, ":") && ((g_parse_ws(acc) && ((g_parse_type(acc) && addVerbatim(acc, "structarg"))))))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_exp(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (g_parse_idpos(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if ((matchString(acc, "=") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && g_parse_optsemi(acc))))))) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((g_parse_expsemi(acc) && ((addVerbatim(acc, "sequence") && ((addVerbatim(acc, "setpos") && addVerbatim(acc, "let"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if ((matchString(acc, ":") && ((g_parse_ws(acc) && ((g_parse_type(acc) && ((matchString(acc, "=") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && g_parse_optsemi(acc))))))))))))) {
							if (addMatched(acc, i2s(acc.i))) {
								if ((g_parse_expsemi(acc) && ((addVerbatim(acc, "sequence") && ((addVerbatim(acc, "setpos") && addVerbatim(acc, "let_typed"))))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			if (g_parse_exp1(acc)) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		}
	}
}

g_parse_exp1(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (g_parse_exp2(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (matchString(acc, ":=")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b2") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp1(acc) && ((addVerbatim(acc, ":=") && addVerbatim(acc, "setpos"))))))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_exp2(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (g_parse_exp3(acc)) {
			if (parseStar(acc, \ -> {
				{
					pushDCheckpoint(acc);
					if (matchString(acc, "|>")) {
						if (addMatched(acc, i2s(acc.i))) {
							if ((addVerbatim(acc, "b2") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp3(acc) && ((addVerbatim(acc, "|>") && addVerbatim(acc, "setpos"))))))))))) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				}
			})) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_exp3(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (g_parse_exp4(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (matchString(acc, "||")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b2") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp3(acc) && ((addVerbatim(acc, "||") && addVerbatim(acc, "setpos"))))))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_exp4(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (g_parse_exp5(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (matchString(acc, "&&")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b2") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp4(acc) && ((addVerbatim(acc, "&&") && addVerbatim(acc, "setpos"))))))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_exp5(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (g_parse_exp6(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if (matchString(acc, "==")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b2") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp5(acc) && ((addVerbatim(acc, "==") && addVerbatim(acc, "setpos"))))))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if (matchString(acc, "!=")) {
							if (addMatched(acc, i2s(acc.i))) {
								if ((addVerbatim(acc, "b2") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp5(acc) && ((addVerbatim(acc, "!=") && addVerbatim(acc, "setpos"))))))))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						};
						discardDCheckpoint(acc)
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_exp6(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (g_parse_exp7(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if (matchString(acc, "<=")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b2") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp6(acc) && ((addVerbatim(acc, "<=") && addVerbatim(acc, "setpos"))))))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if (matchString(acc, "<")) {
							if (addMatched(acc, i2s(acc.i))) {
								if ((addVerbatim(acc, "b1") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp6(acc) && ((addVerbatim(acc, "<") && addVerbatim(acc, "setpos"))))))))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if (matchString(acc, ">=")) {
									if (addMatched(acc, i2s(acc.i))) {
										if ((addVerbatim(acc, "b2") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp6(acc) && ((addVerbatim(acc, ">=") && addVerbatim(acc, "setpos"))))))))))) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}
									} else {
										restoreDCheckpoint(acc)
									}
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									{
										pushDCheckpoint(acc);
										if (if (matchString(acc, ">")) {
											if (addMatched(acc, i2s(acc.i))) {
												if ((addVerbatim(acc, "b1") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp6(acc) && ((addVerbatim(acc, ">") && addVerbatim(acc, "setpos"))))))))))) {
													discardDCheckpoint(acc)
												} else {
													restoreDCheckpoint(acc)
												}
											} else {
												restoreDCheckpoint(acc)
											}
										} else {
											restoreDCheckpoint(acc)
										}) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}
									}
								}
							}
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_exp7(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (g_parse_exp8(acc)) {
			if (parseStar(acc, \ -> {
				{
					pushDCheckpoint(acc);
					pushDCheckpoint(acc);
					if (if (matchString(acc, "+")) {
						if (addMatched(acc, i2s(acc.i))) {
							if ((addVerbatim(acc, "b1") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp8(acc) && ((addVerbatim(acc, "+") && addVerbatim(acc, "setpos"))))))))))) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}) {
						discardDCheckpoint(acc)
					} else {
						{
							pushDCheckpoint(acc);
							if (if (matchString(acc, "-")) {
								if (addMatched(acc, i2s(acc.i))) {
									if ((addVerbatim(acc, "b1") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp8(acc) && ((addVerbatim(acc, "-") && addVerbatim(acc, "setpos"))))))))))) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								} else {
									restoreDCheckpoint(acc)
								}
							} else {
								restoreDCheckpoint(acc)
							}) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						}
					}
				}
			})) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_exp8(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (g_parse_exp9(acc)) {
			if (parseStar(acc, \ -> {
				{
					pushDCheckpoint(acc);
					pushDCheckpoint(acc);
					if (if (matchString(acc, "*")) {
						if (addMatched(acc, i2s(acc.i))) {
							if ((addVerbatim(acc, "b1") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp8(acc) && ((addVerbatim(acc, "*") && addVerbatim(acc, "setpos"))))))))))) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}) {
						discardDCheckpoint(acc)
					} else {
						{
							pushDCheckpoint(acc);
							if (if (matchString(acc, "/")) {
								if (addMatched(acc, i2s(acc.i))) {
									if ((addVerbatim(acc, "b1") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp8(acc) && ((addVerbatim(acc, "/") && addVerbatim(acc, "setpos"))))))))))) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								} else {
									restoreDCheckpoint(acc)
								}
							} else {
								restoreDCheckpoint(acc)
							}) {
								discardDCheckpoint(acc)
							} else {
								{
									pushDCheckpoint(acc);
									if (if (matchString(acc, "%")) {
										if (addMatched(acc, i2s(acc.i))) {
											if ((addVerbatim(acc, "b1") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp8(acc) && ((addVerbatim(acc, "%") && addVerbatim(acc, "setpos"))))))))))) {
												discardDCheckpoint(acc)
											} else {
												restoreDCheckpoint(acc)
											}
										} else {
											restoreDCheckpoint(acc)
										}
									} else {
										restoreDCheckpoint(acc)
									}) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								}
							}
						}
					}
				}
			})) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_exp9(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (g_parse_exp10(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (matchString(acc, ":")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b1") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_type(acc) && ((addVerbatim(acc, ":") && addVerbatim(acc, "setpos"))))))))))) {
							if (parseStar(acc, \ -> {
								{
									pushDCheckpoint(acc);
									if (matchString(acc, ":")) {
										if (addMatched(acc, i2s(acc.i))) {
											if ((addVerbatim(acc, "b1") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_type(acc) && ((addVerbatim(acc, ":") && addVerbatim(acc, "setpos"))))))))))) {
												discardDCheckpoint(acc)
											} else {
												restoreDCheckpoint(acc)
											}
										} else {
											restoreDCheckpoint(acc)
										}
									} else {
										restoreDCheckpoint(acc)
									}
								}
							})) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_exp10(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (g_parse_exp11(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (matchString(acc, "??")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b2") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp10(acc) && ((matchString(acc, ":") && ((g_parse_ws(acc) && ((g_parse_exp10(acc) && ((addVerbatim(acc, "maybe") && addVerbatim(acc, "setpos"))))))))))))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_exp11(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (addMatched(acc, i2s(acc.i))) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if ((matchString(acc, "!") && ((g_parse_ws(acc) && ((g_parse_exp11(acc) && ((addVerbatim(acc, "__not") && addVerbatim(acc, "setpos"))))))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if ((matchString(acc, "-") && ((g_parse_ws(acc) && ((g_parse_exp11(acc) && ((addVerbatim(acc, "__negate") && addVerbatim(acc, "setpos"))))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			if (g_parse_lambda(acc)) {
				discardDCheckpoint(acc)
			} else {
				{
					pushDCheckpoint(acc);
					if (if (g_parse_exp12(acc)) {
						if (parseStar(acc, \ -> {
							{
								pushDCheckpoint(acc);
								pushDCheckpoint(acc);
								if (if (addMatched(acc, i2s(acc.i))) {
									if ((matchString(acc, "(") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exps(acc) && ((matchString(acc, ")") && ((g_parse_ws(acc) && ((addVerbatim(acc, "call") && addVerbatim(acc, "setpos"))))))))))))))) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									if (g_parse_with(acc)) {
										discardDCheckpoint(acc)
									} else {
										{
											pushDCheckpoint(acc);
											if (if (addMatched(acc, i2s(acc.i))) {
												if ((matchString(acc, ".") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_idpos(acc) && ((matchString(acc, "::=") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && ((addVerbatim(acc, "::=") && addVerbatim(acc, "setpos"))))))))))))))))) {
													discardDCheckpoint(acc)
												} else {
													restoreDCheckpoint(acc)
												}
											} else {
												restoreDCheckpoint(acc)
											}) {
												discardDCheckpoint(acc)
											} else {
												{
													pushDCheckpoint(acc);
													if (if (addMatched(acc, i2s(acc.i))) {
														if ((matchString(acc, ".") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_idpos(acc) && ((addVerbatim(acc, "dot") && addVerbatim(acc, "setpos"))))))))))) {
															discardDCheckpoint(acc)
														} else {
															restoreDCheckpoint(acc)
														}
													} else {
														restoreDCheckpoint(acc)
													}) {
														discardDCheckpoint(acc)
													} else {
														{
															pushDCheckpoint(acc);
															if (if (addMatched(acc, i2s(acc.i))) {
																if ((matchString(acc, "[") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && ((matchString(acc, "]") && ((g_parse_ws(acc) && ((addVerbatim(acc, "__index") && addVerbatim(acc, "setpos"))))))))))))))) {
																	discardDCheckpoint(acc)
																} else {
																	restoreDCheckpoint(acc)
																}
															} else {
																restoreDCheckpoint(acc)
															}) {
																discardDCheckpoint(acc)
															} else {
																restoreDCheckpoint(acc)
															}
														}
													}
												}
											}
										}
									}
								}
							}
						})) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}) {
						discardDCheckpoint(acc)
					} else {
						if (g_parse_exp12(acc)) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}
			}
		}
	}
}

g_parse_exp12(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (addMatched(acc, i2s(acc.i))) {
			if ((matchString(acc, "^") && ((g_parse_ws(acc) && ((g_parse_exp12(acc) && ((addVerbatim(acc, "__deref") && addVerbatim(acc, "setpos"))))))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			if (g_parse_exp13(acc)) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		}
	}
}

g_parse_exp13(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (addMatched(acc, i2s(acc.i))) {
			if (matchString(acc, "if")) {
				{
					pushDCheckpoint(acc);
					if (((if (g_parse_letterOrDigit(acc)) {
						restoreDCheckpoint(acc)
					} else {
						{
							restoreDCheckpoint(acc);
							true
						}
					}) && ((g_parse_ws(acc) && ((matchString(acc, "(") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && ((matchString(acc, ")") && ((g_parse_ws(acc) && g_parse_exp(acc))))))))))))))) {
						{
							pushDCheckpoint(acc);
							pushDCheckpoint(acc);
							if (if (if ((matchString(acc, "else") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && ((addVerbatim(acc, "ifelse") && addVerbatim(acc, "setpos"))))))))) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}) {
								discardDCheckpoint(acc)
							} else {
								{
									pushDCheckpoint(acc);
									if (if (addMatched(acc, i2s(acc.i))) {
										if ((addVerbatim(acc, "void") && ((addVerbatim(acc, "setpos") && ((addVerbatim(acc, "ifelse") && addVerbatim(acc, "setpos"))))))) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}
									} else {
										restoreDCheckpoint(acc)
									}) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								}
							}) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						}
					} else {
						restoreDCheckpoint(acc)
					}
				}
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			if ((matchString(acc, "(") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && ((matchString(acc, ")") && g_parse_ws(acc))))))))) {
				discardDCheckpoint(acc)
			} else {
				{
					pushDCheckpoint(acc);
					if (if (addMatched(acc, i2s(acc.i))) {
						if (matchString(acc, "ref")) {
							{
								pushDCheckpoint(acc);
								if (((if (g_parse_letterOrDigit(acc)) {
									restoreDCheckpoint(acc)
								} else {
									{
										restoreDCheckpoint(acc);
										true
									}
								}) && ((g_parse_ws(acc) && ((g_parse_exp(acc) && ((addVerbatim(acc, "ref") && addVerbatim(acc, "setpos"))))))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							}
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}) {
						discardDCheckpoint(acc)
					} else {
						if (g_parse_switch(acc)) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if (addMatched(acc, i2s(acc.i))) {
									if (matchString(acc, "cast")) {
										{
											pushDCheckpoint(acc);
											if (((if (g_parse_letterOrDigit(acc)) {
												restoreDCheckpoint(acc)
											} else {
												{
													restoreDCheckpoint(acc);
													true
												}
											}) && ((g_parse_ws(acc) && ((matchString(acc, "(") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && ((matchString(acc, "->") && ((g_parse_ws(acc) && ((g_parse_type(acc) && ((matchString(acc, ")") && ((g_parse_ws(acc) && ((addVerbatim(acc, "cast") && addVerbatim(acc, "setpos"))))))))))))))))))))))) {
												discardDCheckpoint(acc)
											} else {
												restoreDCheckpoint(acc)
											}
										}
									} else {
										restoreDCheckpoint(acc)
									}
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									if (g_parse_brace(acc)) {
										discardDCheckpoint(acc)
									} else {
										{
											pushDCheckpoint(acc);
											if (if (addMatched(acc, i2s(acc.i))) {
												if (matchString(acc, "true")) {
													{
														pushDCheckpoint(acc);
														if (((if (g_parse_letterOrDigit(acc)) {
															restoreDCheckpoint(acc)
														} else {
															{
																restoreDCheckpoint(acc);
																true
															}
														}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "true") && addVerbatim(acc, "setpos"))))))) {
															discardDCheckpoint(acc)
														} else {
															restoreDCheckpoint(acc)
														}
													}
												} else {
													restoreDCheckpoint(acc)
												}
											} else {
												restoreDCheckpoint(acc)
											}) {
												discardDCheckpoint(acc)
											} else {
												{
													pushDCheckpoint(acc);
													if (if (addMatched(acc, i2s(acc.i))) {
														if (matchString(acc, "false")) {
															{
																pushDCheckpoint(acc);
																if (((if (g_parse_letterOrDigit(acc)) {
																	restoreDCheckpoint(acc)
																} else {
																	{
																		restoreDCheckpoint(acc);
																		true
																	}
																}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "false") && addVerbatim(acc, "setpos"))))))) {
																	discardDCheckpoint(acc)
																} else {
																	restoreDCheckpoint(acc)
																}
															}
														} else {
															restoreDCheckpoint(acc)
														}
													} else {
														restoreDCheckpoint(acc)
													}) {
														discardDCheckpoint(acc)
													} else {
														{
															pushDCheckpoint(acc);
															if (if (addMatched(acc, i2s(acc.i))) {
																if ((g_parse_id(acc) && ((addVerbatim(acc, "var") && addVerbatim(acc, "setpos"))))) {
																	discardDCheckpoint(acc)
																} else {
																	restoreDCheckpoint(acc)
																}
															} else {
																restoreDCheckpoint(acc)
															}) {
																discardDCheckpoint(acc)
															} else {
																{
																	pushDCheckpoint(acc);
																	if (if (addMatched(acc, i2s(acc.i))) {
																		if ((matchString(acc, "\"#inc") && ((matchString(acc, "lude") && ((g_parse_s(acc) && ((g_parse_pathpos(acc) && ((matchString(acc, "\"") && ((g_parse_ws(acc) && ((addVerbatim(acc, "stringinclude") && addVerbatim(acc, "setpos"))))))))))))))) {
																			discardDCheckpoint(acc)
																		} else {
																			restoreDCheckpoint(acc)
																		}
																	} else {
																		restoreDCheckpoint(acc)
																	}) {
																		discardDCheckpoint(acc)
																	} else {
																		{
																			pushDCheckpoint(acc);
																			if (if (addMatched(acc, i2s(acc.i))) {
																				if ((g_parse_string(acc) && ((g_parse_ws(acc) && ((addVerbatim(acc, "unescape") && addVerbatim(acc, "setpos"))))))) {
																					discardDCheckpoint(acc)
																				} else {
																					restoreDCheckpoint(acc)
																				}
																			} else {
																				restoreDCheckpoint(acc)
																			}) {
																				discardDCheckpoint(acc)
																			} else {
																				{
																					pushDCheckpoint(acc);
																					if (if (addMatched(acc, i2s(acc.i))) {
																						if (matchString(acc, "0x")) {
																							{
																								acc.starti ::= acc.i;
																								if (((if ((g_parse_hexdigit(acc) && parseStar(acc, \ -> {
																									g_parse_hexdigit(acc)
																								}))) {
																									{
																										addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
																										true
																									}
																								} else {
																									false
																								}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "hex") && addVerbatim(acc, "setpos"))))))) {
																									discardDCheckpoint(acc)
																								} else {
																									restoreDCheckpoint(acc)
																								}
																							}
																						} else {
																							restoreDCheckpoint(acc)
																						}
																					} else {
																						restoreDCheckpoint(acc)
																					}) {
																						discardDCheckpoint(acc)
																					} else {
																						{
																							pushDCheckpoint(acc);
																							if (if (addMatched(acc, i2s(acc.i))) {
																								{
																									acc.starti ::= acc.i;
																									if (((if (g_parse_double(acc)) {
																										{
																											addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
																											true
																										}
																									} else {
																										false
																									}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "s2d") && addVerbatim(acc, "setpos"))))))) {
																										discardDCheckpoint(acc)
																									} else {
																										restoreDCheckpoint(acc)
																									}
																								}
																							} else {
																								restoreDCheckpoint(acc)
																							}) {
																								discardDCheckpoint(acc)
																							} else {
																								{
																									pushDCheckpoint(acc);
																									if (if (addMatched(acc, i2s(acc.i))) {
																										{
																											acc.starti ::= acc.i;
																											if (((if (g_parse_int(acc)) {
																												{
																													addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
																													true
																												}
																											} else {
																												false
																											}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "s2i") && addVerbatim(acc, "setpos"))))))) {
																												discardDCheckpoint(acc)
																											} else {
																												restoreDCheckpoint(acc)
																											}
																										}
																									} else {
																										restoreDCheckpoint(acc)
																									}) {
																										discardDCheckpoint(acc)
																									} else {
																										{
																											pushDCheckpoint(acc);
																											if (if (addMatched(acc, i2s(acc.i))) {
																												if ((matchString(acc, "[") && ((g_parse_ws(acc) && ((g_parse_exps(acc) && ((matchString(acc, "]") && ((g_parse_ws(acc) && ((addVerbatim(acc, "array") && addVerbatim(acc, "setpos"))))))))))))) {
																													discardDCheckpoint(acc)
																												} else {
																													restoreDCheckpoint(acc)
																												}
																											} else {
																												restoreDCheckpoint(acc)
																											}) {
																												discardDCheckpoint(acc)
																											} else {
																												restoreDCheckpoint(acc)
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

g_parse_with(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((matchString(acc, "(") && ((addVerbatim(acc, "swap") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && ((matchString(acc, "with") && ((g_parse_s(acc) && ((g_parse_fields(acc) && ((matchString(acc, ")") && ((g_parse_ws(acc) && ((addVerbatim(acc, "with") && addVerbatim(acc, "setpos"))))))))))))))))))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_fields(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((g_parse_fieldassign(acc) && ((addVerbatim(acc, "cons") && parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",") && ((g_parse_ws(acc) && ((g_parse_fieldassign(acc) && addVerbatim(acc, "cons"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}))))) {
					{
						(matchString(acc, ",") && g_parse_ws(acc));
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_fieldassign(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((g_parse_idpos(acc) && ((matchString(acc, "=") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && addVerbatim(acc, "fieldassign"))))))))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_switch(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if (matchString(acc, "switch")) {
				{
					pushDCheckpoint(acc);
					if (((if (g_parse_letterOrDigit(acc)) {
						restoreDCheckpoint(acc)
					} else {
						{
							restoreDCheckpoint(acc);
							true
						}
					}) && ((g_parse_ws(acc) && ((matchString(acc, "(") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && ((matchString(acc, ")") && ((g_parse_ws(acc) && ((matchString(acc, "{") && ((g_parse_ws(acc) && ((g_parse_cases(acc) && (((if (matchString(acc, "}")) {
						true
					} else {
						addParseError(acc, "Expected \"}\"")
					}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "switch") && addVerbatim(acc, "setpos"))))))))))))))))))))))))))) {
						discardDCheckpoint(acc)
					} else {
						restoreDCheckpoint(acc)
					}
				}
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_cases(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((g_parse_defaultOrNamedCase(acc) && ((addVerbatim(acc, "cons") && parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((g_parse_defaultOrNamedCase(acc) && addVerbatim(acc, "cons"))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_defaultOrNamedCase(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (addMatched(acc, i2s(acc.i))) {
			if (matchString(acc, "default")) {
				{
					pushDCheckpoint(acc);
					if (((if (g_parse_letterOrDigit(acc)) {
						restoreDCheckpoint(acc)
					} else {
						{
							restoreDCheckpoint(acc);
							true
						}
					}) && ((g_parse_ws(acc) && ((matchString(acc, ":") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && ((g_parse_optsemi(acc) && ((addVerbatim(acc, "default") && addVerbatim(acc, "setpos"))))))))))))))) {
						discardDCheckpoint(acc)
					} else {
						restoreDCheckpoint(acc)
					}
				}
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			{
				pushDCheckpoint(acc);
				if (if ((g_parse_idpos(acc) && ((matchString(acc, "(") && ((g_parse_ws(acc) && ((g_parse_names(acc) && ((matchString(acc, ")") && ((g_parse_ws(acc) && ((matchString(acc, ":") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && ((g_parse_optsemi(acc) && addVerbatim(acc, "case"))))))))))))))))))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}
	}
}

g_parse_names(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((g_parse_id(acc) && ((addVerbatim(acc, "cons") && parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",") && ((g_parse_ws(acc) && ((g_parse_id(acc) && addVerbatim(acc, "cons"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}))))) {
					{
						(matchString(acc, ",") && g_parse_ws(acc));
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_brace(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((matchString(acc, "{") && ((g_parse_ws(acc) && ((g_parse_expsemi(acc) && ((matchString(acc, "}") && ((g_parse_ws(acc) && ((addVerbatim(acc, "sequence") && addVerbatim(acc, "setpos"))))))))))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_expsemi(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((g_parse_exp(acc) && ((addVerbatim(acc, "cons") && ((parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((g_parse_optsemi(acc) && ((g_parse_exp(acc) && addVerbatim(acc, "cons"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}) && g_parse_optsemi(acc))))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_lambda(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((g_parse_backslash(acc) && ((g_parse_ws(acc) && ((g_parse_lambdaargs(acc) && ((matchString(acc, "->") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && ((addVerbatim(acc, "lambda") && addVerbatim(acc, "setpos"))))))))))))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_lambdaargs(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((g_parse_lambdaarg(acc) && ((addVerbatim(acc, "cons") && parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",") && ((g_parse_ws(acc) && ((g_parse_lambdaarg(acc) && addVerbatim(acc, "cons"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}))))) {
					{
						(matchString(acc, ",") && g_parse_ws(acc));
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_lambdaarg(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (g_parse_id(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if ((matchString(acc, ":") && ((g_parse_ws(acc) && ((g_parse_type(acc) && addVerbatim(acc, "argtype"))))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if (addMatched(acc, i2s(acc.i))) {
							if ((addVerbatim(acc, "auto") && ((addVerbatim(acc, "setpos") && addVerbatim(acc, "argtype"))))) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_lambdatype(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((matchString(acc, "(") && ((g_parse_ws(acc) && ((g_parse_lambdaargs(acc) && ((matchString(acc, ")") && ((g_parse_ws(acc) && ((matchString(acc, "->") && ((g_parse_ws(acc) && ((g_parse_type(acc) && ((addVerbatim(acc, "fntype") && addVerbatim(acc, "setpos"))))))))))))))))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_lambdatypeauto(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((matchString(acc, "(") && ((g_parse_ws(acc) && ((g_parse_lambdaargs(acc) && ((matchString(acc, ")") && g_parse_ws(acc))))))))) {
				if (addMatched(acc, i2s(acc.i))) {
					if ((addVerbatim(acc, "auto") && ((addVerbatim(acc, "setpos") && ((addVerbatim(acc, "fntype") && addVerbatim(acc, "setpos"))))))) {
						discardDCheckpoint(acc)
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_exps(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((g_parse_exp(acc) && ((addVerbatim(acc, "cons") && parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",") && ((g_parse_ws(acc) && ((g_parse_exp(acc) && addVerbatim(acc, "cons"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}))))) {
					{
						(matchString(acc, ",") && g_parse_ws(acc));
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_idpos(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((g_parse_id(acc) && addVerbatim(acc, "setpos"))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_type(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (addMatched(acc, i2s(acc.i))) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if (matchString(acc, "bool")) {
					{
						pushDCheckpoint(acc);
						if (((if (g_parse_letterOrDigit(acc)) {
							restoreDCheckpoint(acc)
						} else {
							{
								restoreDCheckpoint(acc);
								true
							}
						}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "bool") && addVerbatim(acc, "setpos"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if (matchString(acc, "int")) {
							{
								pushDCheckpoint(acc);
								if (((if (g_parse_letterOrDigit(acc)) {
									restoreDCheckpoint(acc)
								} else {
									{
										restoreDCheckpoint(acc);
										true
									}
								}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "int") && addVerbatim(acc, "setpos"))))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							}
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if (matchString(acc, "double")) {
									{
										pushDCheckpoint(acc);
										if (((if (g_parse_letterOrDigit(acc)) {
											restoreDCheckpoint(acc)
										} else {
											{
												restoreDCheckpoint(acc);
												true
											}
										}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "double") && addVerbatim(acc, "setpos"))))))) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}
									}
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									{
										pushDCheckpoint(acc);
										if (if (matchString(acc, "string")) {
											{
												pushDCheckpoint(acc);
												if (((if (g_parse_letterOrDigit(acc)) {
													restoreDCheckpoint(acc)
												} else {
													{
														restoreDCheckpoint(acc);
														true
													}
												}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "string") && addVerbatim(acc, "setpos"))))))) {
													discardDCheckpoint(acc)
												} else {
													restoreDCheckpoint(acc)
												}
											}
										} else {
											restoreDCheckpoint(acc)
										}) {
											discardDCheckpoint(acc)
										} else {
											{
												pushDCheckpoint(acc);
												if (if (matchString(acc, "flow")) {
													{
														pushDCheckpoint(acc);
														if (((if (g_parse_letterOrDigit(acc)) {
															restoreDCheckpoint(acc)
														} else {
															{
																restoreDCheckpoint(acc);
																true
															}
														}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "flow") && addVerbatim(acc, "setpos"))))))) {
															discardDCheckpoint(acc)
														} else {
															restoreDCheckpoint(acc)
														}
													}
												} else {
													restoreDCheckpoint(acc)
												}) {
													discardDCheckpoint(acc)
												} else {
													{
														pushDCheckpoint(acc);
														if (if (matchString(acc, "void")) {
															{
																pushDCheckpoint(acc);
																if (((if (g_parse_letterOrDigit(acc)) {
																	restoreDCheckpoint(acc)
																} else {
																	{
																		restoreDCheckpoint(acc);
																		true
																	}
																}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "voidtype") && addVerbatim(acc, "setpos"))))))) {
																	discardDCheckpoint(acc)
																} else {
																	restoreDCheckpoint(acc)
																}
															}
														} else {
															restoreDCheckpoint(acc)
														}) {
															discardDCheckpoint(acc)
														} else {
															{
																pushDCheckpoint(acc);
																if (if (matchString(acc, "auto")) {
																	{
																		pushDCheckpoint(acc);
																		if (((if (g_parse_letterOrDigit(acc)) {
																			restoreDCheckpoint(acc)
																		} else {
																			{
																				restoreDCheckpoint(acc);
																				true
																			}
																		}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "auto") && addVerbatim(acc, "setpos"))))))) {
																			discardDCheckpoint(acc)
																		} else {
																			restoreDCheckpoint(acc)
																		}
																	}
																} else {
																	restoreDCheckpoint(acc)
																}) {
																	discardDCheckpoint(acc)
																} else {
																	{
																		pushDCheckpoint(acc);
																		if (if (matchString(acc, "native")) {
																			{
																				pushDCheckpoint(acc);
																				if (((if (g_parse_letterOrDigit(acc)) {
																					restoreDCheckpoint(acc)
																				} else {
																					{
																						restoreDCheckpoint(acc);
																						true
																					}
																				}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "nativetype") && addVerbatim(acc, "setpos"))))))) {
																					discardDCheckpoint(acc)
																				} else {
																					restoreDCheckpoint(acc)
																				}
																			}
																		} else {
																			restoreDCheckpoint(acc)
																		}) {
																			discardDCheckpoint(acc)
																		} else {
																			{
																				pushDCheckpoint(acc);
																				if (if (matchString(acc, "ref")) {
																					{
																						pushDCheckpoint(acc);
																						if (((if (g_parse_letterOrDigit(acc)) {
																							restoreDCheckpoint(acc)
																						} else {
																							{
																								restoreDCheckpoint(acc);
																								true
																							}
																						}) && ((g_parse_ws(acc) && ((g_parse_type(acc) && ((addVerbatim(acc, "reftype") && addVerbatim(acc, "setpos"))))))))) {
																							discardDCheckpoint(acc)
																						} else {
																							restoreDCheckpoint(acc)
																						}
																					}
																				} else {
																					restoreDCheckpoint(acc)
																				}) {
																					discardDCheckpoint(acc)
																				} else {
																					restoreDCheckpoint(acc)
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			if (g_parse_fntype(acc) || g_parse_typename(acc)) {
				discardDCheckpoint(acc)
			} else {
				{
					pushDCheckpoint(acc);
					if (if (addMatched(acc, i2s(acc.i))) {
						if ((matchString(acc, "[") && ((g_parse_ws(acc) && ((g_parse_type(acc) && ((matchString(acc, "]") && ((g_parse_ws(acc) && ((addVerbatim(acc, "arraytype") && addVerbatim(acc, "setpos"))))))))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}) {
						discardDCheckpoint(acc)
					} else {
						{
							pushDCheckpoint(acc);
							if (if (addMatched(acc, i2s(acc.i))) {
								{
									acc.starti ::= acc.i;
									if (((if ((matchString(acc, "?") && parseStar(acc, \ -> {
										matchString(acc, "?")
									}))) {
										{
											addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
											true
										}
									} else {
										false
									}) && ((g_parse_ws(acc) && ((addVerbatim(acc, "polytype") && addVerbatim(acc, "setpos"))))))) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								}
							} else {
								restoreDCheckpoint(acc)
							}) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						}
					}
				}
			}
		}
	}
}

g_parse_fntype(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((matchString(acc, "(") && ((g_parse_ws(acc) && ((g_parse_argtypes(acc) && ((matchString(acc, ")") && ((g_parse_ws(acc) && ((matchString(acc, "->") && ((g_parse_ws(acc) && ((g_parse_type(acc) && ((addVerbatim(acc, "fntype") && addVerbatim(acc, "setpos"))))))))))))))))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_argtypes(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((g_parse_argtype(acc) && ((addVerbatim(acc, "cons") && parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",") && ((g_parse_ws(acc) && ((g_parse_argtype(acc) && addVerbatim(acc, "cons"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}))))) {
					{
						(matchString(acc, ",") && g_parse_ws(acc));
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_argtype(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (addMatched(acc, i2s(acc.i))) {
			if ((g_parse_id(acc) && ((matchString(acc, ":") && ((g_parse_ws(acc) && ((g_parse_type(acc) && ((addVerbatim(acc, "argtype") && addVerbatim(acc, "setpos"))))))))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			{
				pushDCheckpoint(acc);
				if (if ((g_parse_type(acc) && ((addMatched(acc, "") && ((addVerbatim(acc, "swap") && addVerbatim(acc, "argtype"))))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}
	}
}

g_parse_typename(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((g_parse_idpos(acc) && ((g_parse_typars(acc) && addVerbatim(acc, "typename"))))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_typars(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (((matchString(acc, "<") && ((g_parse_ws(acc) && ((g_parse_types(acc) && ((matchString(acc, ">") && g_parse_ws(acc))))))))) || addVerbatim(acc, "list")) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_types(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((g_parse_type(acc) && ((addVerbatim(acc, "cons") && parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",") && ((g_parse_ws(acc) && ((g_parse_type(acc) && addVerbatim(acc, "cons"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}))))) {
					{
						(matchString(acc, ",") && g_parse_ws(acc));
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_hexdigit(acc : DParseAcc<?>) -> bool {
	matchRange(acc, 48, 57) || (matchRange(acc, 97, 102) || matchRange(acc, 65, 70))
}

g_parse_id(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		acc.starti ::= acc.i;
		if (((if (g_parse_bid(acc)) {
			{
				addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
				true
			}
		} else {
			false
		}) && g_parse_ws(acc))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_bid(acc : DParseAcc<?>) -> bool {
	((matchRange(acc, 97, 122) || (matchRange(acc, 65, 90) || matchString(acc, "_"))) && parseStar(acc, \ -> {
		g_parse_letterOrDigit(acc)
	}))
}

g_parse_letterOrDigit(acc : DParseAcc<?>) -> bool {
	matchRange(acc, 97, 122) || (matchRange(acc, 65, 90) || (matchString(acc, "_") || matchRange(acc, 48, 57)))
}

g_parse_string(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		acc.starti ::= acc.i;
		if (((if ((matchString(acc, "\"") && ((parseStar(acc, \ -> {
			g_parse_onechar_(acc)
		}) && matchString(acc, "\""))))) {
			{
				addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
				true
			}
		} else {
			false
		}) && g_parse_ws(acc))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_onechar_(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((g_parse_backslash(acc) && (((matchString(acc, "u") && ((g_parse_hexdigit(acc) && ((g_parse_hexdigit(acc) && ((g_parse_hexdigit(acc) && g_parse_hexdigit(acc))))))))) || (((matchString(acc, "X") && ((g_parse_hexdigit(acc) && ((g_parse_hexdigit(acc) && ((g_parse_hexdigit(acc) && g_parse_hexdigit(acc))))))))) || (((matchString(acc, "x") && ((g_parse_hexdigit(acc) && g_parse_hexdigit(acc))))) || g_parse_escapedchar_(acc)))))) {
			discardDCheckpoint(acc)
		} else {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if (matchString(acc, "\"")) {
					restoreDCheckpoint(acc)
				} else {
					{
						restoreDCheckpoint(acc);
						true
					}
				}) {
					{
						pushDCheckpoint(acc);
						if (((if (g_parse_backslash(acc)) {
							restoreDCheckpoint(acc)
						} else {
							{
								restoreDCheckpoint(acc);
								true
							}
						}) && g_parse_anychar(acc))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}
	}
}

g_parse_escapedchar_(acc : DParseAcc<?>) -> bool {
	g_parse_backslash(acc) || (matchString(acc, "\"") || (matchString(acc, "n") || (matchString(acc, "t") || matchString(acc, "r"))))
}

g_parse_backslash(acc : DParseAcc<?>) -> bool {
	matchString(acc, "\\")
}

g_parse_anychar(acc : DParseAcc<?>) -> bool {
	matchRange(acc, 0, 65535)
}

g_parse_double(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if ((if ((g_parse_int(acc) && matchString(acc, "."))) {
			{
				g_parse_int(acc);
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}) || ((matchString(acc, ".") && g_parse_int(acc)))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

g_parse_int(acc : DParseAcc<?>) -> bool {
	(matchRange(acc, 48, 57) && parseStar(acc, \ -> {
		matchRange(acc, 48, 57)
	}))
}

g_parse_ws(acc : DParseAcc<?>) -> bool {
	parseStar(acc, \ -> {
		g_parse_s(acc)
	})
}

g_parse_s(acc : DParseAcc<?>) -> bool {
	(g_parse_cs(acc) && parseStar(acc, \ -> {
		g_parse_cs(acc)
	}))
}

g_parse_cs(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (matchString(acc, " ") || (matchString(acc, "\t") || (matchString(acc, "\n") || ((g_parse_lastLineComment(acc) && matchString(acc, "\n")))))) {
			discardDCheckpoint(acc)
		} else {
			{
				pushDCheckpoint(acc);
				if ((if ((matchString(acc, "/*") && ((parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (((if (matchString(acc, "*/")) {
							restoreDCheckpoint(acc)
						} else {
							{
								restoreDCheckpoint(acc);
								true
							}
						}) && g_parse_anychar(acc))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}) && matchString(acc, "*/"))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) || matchString(acc, "\u000d")) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}
	}
}

g_parse_lastLineComment(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((matchString(acc, "//") && parseStar(acc, \ -> {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (((if (matchString(acc, "\n")) {
					restoreDCheckpoint(acc)
				} else {
					{
						restoreDCheckpoint(acc);
						true
					}
				}) && g_parse_anychar(acc))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}







































































