import tools/gringo/griego/griego_env;

export {
	evalGrTerm(env : GriegoEnv, term : GrTerm) -> GriegoEnv;
}

evalGrTerm(env : GriegoEnv, t : GrTerm) -> GriegoEnv {
	switch (t) {
		GrChoice(term1, term2, tyvar): {
			env0 = evalGrTerm(env, term1);
			evalGrTerm(env0, term2);
		}
		GrError(term, tyvar): {
			evalGrTerm(env, term);
		}
		GrLower(term, tyvar): {
			evalGrTerm(env, term);
		}
		GrNegate(term, tyvar): {
			evalGrTerm(env, term);
		}
		GrOpt(term, tyvar): {
			evalGrTerm(env, term);
		}
		GrPlus(term, tyvar): {
			evalGrTerm(env, term);
		}
		GrPrecedence(term1, term2, tyvar): {
			env0 = evalGrTerm(env, term1);
			evalGrTerm(env0, term2);
		}
		GrRange(char1, char2, tyvar): {
			env;
		}
		GrRule(id, term1, term2, tyvar): {
			env0 = evalGrTerm(env, term1);
			evalGrTerm(env0, term2);
		}
		GrSeq(term1, term2, tyvar): {
			env0 = evalGrTerm(env, term1);
			evalGrTerm(env0, term2);
		}
		GrStar(term, tyvar): {
			evalGrTerm(env, term);
		}
		GrString(stringq, tyvar): {
			env;
		}
		GrUnquote(term, tyvar): {
			evalGrTerm(env, term);
		}
		GrVar(id, tyvar): {
			env;
		}
	}
}
