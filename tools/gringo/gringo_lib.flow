import gringo/gringo_grammar;
import gringo/gringo_parse;
import gringo/gringo_prepare;
import gringo/gringo_ast_actions;

export {
	// Given a grammar string, prepare it to be used for parsing
	parseGringoGrammar(grammar : string) -> GTerm;
}

parseGringoGrammar(text : string) -> GTerm {
	grammar = gringoGrammar();
	ogrammar = prepareGringoGrammar(grammar);
	env = GringoEnv(text, makeTree(), gringoAstAction, GringoAstAcc(makeList()), makeTree(), 0, false, 0);
	genv = gringoParse(env, ogrammar);

	if (genv.fail) {
		println("Parsing failed");
	};
	if (!isEmptyTree(env.errors)) {
		println("There are " + i2s(sizeTree(env.errors)) + " syntax errors");
	};

	remaining = strRight(env.input, genv.maxi);
	if (remaining != "") {
		println("Did not parse: " + remaining);
	};

	prepareGringoGrammar(optimizeGTerm(getAstResult(genv.output)));
}
