import tools/gringo/utils;

export {
	// Check if all mentioned names exist
	checkGTerms(g : GTerm, onError : (string) -> void) -> bool;
}

checkGTerms(g : GTerm, onError : (string) -> void) -> bool {
	rules = findRules(makeTree(), g);
	checkGTermNames(rules, g, onError);
}

checkGTermNames(name : Tree<string, GTerm>, g : GTerm, onError : (string) -> void) -> bool {
	rec = \tt -> checkGTermNames(name, tt, onError);
	switch (g) {
		GRule(id, term, body): rec(term) || rec(body);
		GPrecedence(left, right): rec(left) || rec(right);
		GChoice(left, right): rec(left) || rec(right);
		GSeq(left, right): rec(left) || rec(right);
		GStar(term): rec(term);
		GPlus(term): rec(term);
		GOpt(term): rec(term);
		GNegate(term): rec(term);
		GError(term): rec(term);
		GLower(term): rec(term);
		GUnquote(term): rec(term);
		GString(text): false;
		GRange(lower, upper): false;
		GVar(id): {
			unknown = !containsKeyTree(name, id);
			if (unknown) {
				onError(id + " is not defined");
			}
			unknown;
		}
		GEpsilon(): false;
	}
}
