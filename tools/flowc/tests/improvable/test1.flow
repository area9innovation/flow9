native fold : (xs : [?], init : ??, fn : (??, ?)->??) -> ?? = Native.fold;

Form ::= Text, Inspect, Group;

Text();
Inspect(f : Form);
Group(f : [Form]);

makeSizeIndependentDecorationsAdder() -> void {
	addInspector = \ -> \f -> Inspect(f);

	addHeader = {
			fn = \f -> {
				// α10001: Inspect     from {Inspect<> .. Form<>}
				// For some reason, we resolve that as Inspect, but really,
				// it has to be Form.

				// The trouble comes from this unification:
				//  Unifying α10001 (={Inspect<> .. *})  c=  α10002 (={Inspect<> .. Form<>})
				//  Unified α10001 (={Inspect<> .. Form<>})  c=  α10002 (={Inspect<> .. Form<>})


				// Group(([(((addInspector : () -> α1)() : α1)((Text() : Text)) : α10001), (f : α2)] : [α10002]))


				Group([
					Text() |> addInspector(),
					f,
				])
			}
			fn
		};

	foo = fold([addHeader], addInspector(), \acc, fn -> \f -> f |> acc |> fn);
}
