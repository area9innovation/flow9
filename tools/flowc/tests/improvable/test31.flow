Maybe<?> ::= None, Some<?>;
None();
Some(value : ?);

// We could infer that baz takes Maybe.
// At some point, we fail to solve this:

// Unify α4 (=.(.value : α10001))  c=  α1 (={None<α10000> .. *})

// which can be solved if α1 is lifted to Maybe<α10000 c= α10001>.

/*
    Unify .(.value : α10001)  c= . {None<α10000> .. *}
      Unify .(.value : α10001)  grow right  None<α10000>
C:/flow9/tools/flowc/tests/improvable/test31.flow:11:8:  foo: arg #1: call of baz(): Expected .value in None
      Gave None<α10000>
    Gave {None<α10000> .. *}
*/

foo(b) {
	// debugtyping;
	baz = \a -> {};
	baz(None());
	b.value;
	baz(b);
}
