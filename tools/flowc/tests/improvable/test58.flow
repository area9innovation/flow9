Maybe<?> ::= None, Some<?>;
None();
Some(value : ?);

/*
We do manage to find the correct type, but we fail during the process.

This is similar to test31 and 55.

This is captured in unify/test27.unify.

  Unify .(.value : α10003)  c=  tyvar α10004 (={None<α10002> .. *})
    Unify .(.value : α10003)  c= . {None<α10002> .. *}
      Unify .(.value : α10003)  grow right  None<α10002>
C:/flow9/tools/flowc/tests/improvable/test58.flow:8:5:  foo: returns from switch: switch: Expected .value in None
      Gave None<α10002>
    Gave {None<α10002> .. *}
  Unify .(.value : α10003)  c=  tyvar α10004 gave α10004 (={None<α10002> .. *})

*/


// We could infer that b is Maybe<Some<int>>
foo(b) {
	// debugtyping;
	switch (b) {
		None(): None();
		Some(c):  {
			c.value;
			c;
		}
	}
}
