
import expect;

native length : ([?]) -> int = Native.length;

	List<?> ::= EmptyList, Cons<?>;
		EmptyList();
		Cons(head : ?, tail : List<?>);
		
native list2array : (List<?>) -> [?] = Native.list2array;
native isSameObj : (value1 : ?, value2 : ?) -> bool = Native.isSameObj;

SS(i : int);

main() {
	// int
	li = Cons(333, Cons(222, Cons(111, EmptyList())));
	a = list2array(li);
	expect(1, 
		length(a) == 3 && 
		a[0] == 111 &&
		a[1] == 222 &&
		a[2] == 333,
		true
	);

	// double
	ld = Cons(333.0, Cons(222.0, Cons(111.0, EmptyList())));
	ad = list2array(ld);
	expect(2, 
		length(ad) == 3 && 
		ad[0] == 111.0 &&
		ad[1] == 222.0 &&
		ad[2] == 333.0,
		true
	);
	
	// string
	ls = Cons("333", Cons("222", Cons("111", EmptyList())));
	as = list2array(ls);
	expect(3, 
		length(as) == 3 && 
		as[0] == "111" &&
		as[1] == "222" &&
		as[2] == "333",
		true
	);
	
	// structs
	ss1 = SS(111);
	ss2 = SS(222);
	ss3 = SS(333);
	lss = Cons(ss3, Cons(ss2, Cons(ss1, EmptyList())));
	ass = list2array(lss);
	expect(4, 
		length(ass) == 3 && 
		isSameObj(ass[0], ss1) &&
		isSameObj(ass[1], ss2) &&
		isSameObj(ass[2], ss3),
		true
	);
}

