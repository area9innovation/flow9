// import ds/array;
import string;
// import math/math;

native prints : (string) -> void = host.prints;
native printi : (int) -> void = host.printi;

isWindows = ref false;
isMacOSX = ref false;
isLinux = ref false;
isIos = ref false;
isAndroid = ref false;
majorOsPart = ref "";
minorOsPart = ref "";
flashVersion = ref "";
browser = ref "";
resolution = ref "";
userAgent = ref "";

test() {
	if (^majorOsPart == "") {
		browserOs = hostCall("getOs", []);

		os = if (toString(browserOs) != "{}") {
			browserOs
		} else {
			"AAAAAAAAAA";
		}
		osParts = strSplit(os, ",");
		majorOsPart := if (length(osParts) > 0 && osParts[0] != "") osParts[0] else "other";
		minorOsPart := if (length(osParts) > 1 && osParts[1] != "") osParts[1] else "other";
		isWindows := ^majorOsPart == "Windows";

		userAgentCheck = hostCall("getUserAgent", []);
		userAgent := if (toString(userAgentCheck) != "{}") userAgentCheck else "other";

		isMacOSX := ^majorOsPart == "MacOSX" || strContains(toLowerCase(^userAgent), "mac os x");  // [-Revise-] temporary fix for Firefox on Mac. Must be removed once we have correct majorOsPart
		isLinux := ^majorOsPart == "Linux";
		isIos := ^majorOsPart == "iOS";
		isAndroid := ^majorOsPart == "Android";

		flashCheck = hostCall("getVersion", []);
		flashVersion := if (toString(flashCheck) != "{}") flashCheck else "other";

		browserCheck = hostCall("getBrowser", []);
		browser := if (toString(browserCheck) != "{}") browserCheck else "other";

		resolutionCheck = hostCall("getResolution", []);
		resolution := if (toString(resolutionCheck) != "{}") resolutionCheck else "other";
	}
}



// getBrowser() -> string {
// 	test();
// 	^browser;
// }

getUserAgent() -> string {
	test();
	^userAgent
}

main() {
	prints("start");

	test();
	// prints(getBrowser());
	// prints(getUserAgent());

	prints("end");
}
