import expect;

native test5_0 : (int) -> ((string, (string) -> string, (string) -> void) -> void) = host_w.test5_0;
native test5_1 : (cb1: (string) -> ((string) -> void)) -> void = host_w.test5_1;
native test5_2 : (cb1: (cb2: (str : string) -> void) -> void, (string) -> void) -> void = host_w.test5_2;
native test5_3 : (cb1: (d : double) -> void, dbl : double) -> void = host_w.test5_3;


test_0() {
	f = test5_0(1);
	f("test5_0", \s -> s + " again test5_0", \ss -> expect2v(10, "test5_0; test5_0 add again test5_0", ss));
}


test_1() {
	f2 = \str -> {
		expect2v(20, "test5_1 2", str);
	};

	f = \str -> { 
		expect2v(21, "test5_1 1", str);
		f2;
	};

	test5_1(f);
}

test_2() {
	f = \s -> { 
		s("test5_2");
	};

	test5_2(f, \res -> expect2v(30, "test5_2", res));
}

test_3() {
	f = \dbl -> { 
		expect2v(40, 2.2, dbl);
	};

	test5_3(f, 1.7);
}

main() {
	test_0();
	test_1();
	test_2();
	test_3();

	expectFinish();
}
