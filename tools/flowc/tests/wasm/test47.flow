import expect;
import dynamic;

// test runtime crash on converting idfn from flow -> flow to flow -> bool via boxing/unboxing

idfn(x) { x; }
max(a,b) { if (a > b) a else b; }

buildfun(x : ?, res : ??) -> (?) -> (??) {
    flow(idfn);
}

buildfun2(x : ?, res : ??) -> (?) -> (??) {
	flow(\p -> max(p, x));
}

buildfun22(x : ?, res : ??) -> (?) -> (??) {
	flow(\p -> cast(flow(max(p, x)) : flow -> ??));
}

buildfunSimple() -> (flow) -> (bool) {
    flow(idfn);
}

buildfunSimpleWorking() -> (flow) -> (bool) {
    flow(\p -> cast(flow(p) : flow -> bool));
}

test() {
    //buildfunSimpleWorking();
    //buildfunSimple();
	buildfun(flow(true), true);
}

test2() {
	// buildfun2(flow(1.0), 2.0);
	buildfun22(flow(1.0), 2.0);
}

main() {
	test();
}

