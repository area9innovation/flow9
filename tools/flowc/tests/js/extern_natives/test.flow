import string;

import test_natives;
/*
// from @braintree/sanitize-url
native sanitizeUrl : (url : string) -> string = SanitizeUrl.sanitizeUrl;

// from platforms/js/lib/TestNativeHost.ts
native getUser : (name: string) -> native = TestNativeHost.getUser;
native delUser : (name : string) -> void = TestNativeHost.delUser;
native addUser : (user : native) -> void = TestNativeHost.addUser;
native makeUser : (name: string, id : int) -> native = TestNativeHost.makeUser;
native userName : (user : native) -> string = TestNativeHost.userName;
native userId : (user : native) -> int = TestNativeHost.userId;


// falback for non-js
sanitizeUrl(url : string) -> string {
	"sanitizeUrl is not implemented";
}*/

main() -> void {
	// Test on @braintree/sanitize-url
	println(sanitizeUrl("mailto:hello@example.com"));
	println(sanitizeUrl("mailto:hello@example.com"));
	println(sanitizeUrl("javascript:alert(document.domain)"));
	println(sanitizeUrl("jAvasCrIPT:alert(document.domain)"));
	// Test on platforms/js/lib/TestNativeHost.ts
	addUser(makeUser("abc", 1));
	addUser(makeUser1(Pair("xyz", 2)));
	println("abc user id: " + i2s(userId(getUser("abc"))));
	println("xyz user id: " + i2s(userId(getUser("xyz"))));
	println("ABC user id: " + i2s(userId(getUser("ABC"))));
}
