Pair(first : ?, second : ??);
Triple(first : ?, second : ??, third : ???);
Quadruple(first : ?, second : ??, third : ???, fourth : ????);

// single-entry cache for getMappedFont. Hit rate is 80%
getMappedFont_cache_key = ref Pair("", -1.0);
getMappedFont_cache_value = ref Pair("", -1.0);

getMappedFont(family : string, size : double) {

	if (family != ^getMappedFont_cache_key.first || size != ^getMappedFont_cache_key.second) {
		mappedFont = Pair("", 1.0);
		getMappedFont_cache_key := Pair(family, size);
		getMappedFont_cache_value := mappedFont;
	}

	^getMappedFont_cache_value
}


----------

getMappedFont_cache_key = (ref (Pair(("" : string), (-1.0 : double)) : Pair<string, double>) : ref Pair<string, double>);

getMappedFont_cache_value = (ref (Pair(("" : string), (-1.0 : double)) : Pair<string, double>) : ref Pair<string, double>);

getMappedFont = (\family:string, size:double ->
	({
		(if ((((((family : string) != ((^(getMappedFont_cache_key : ref Pair<string, double>) : Pair<string, double>).first : string)) : bool) || (((size : double) != ((^(getMappedFont_cache_key : ref Pair<string, double>) : Pair<string, double>).second : double)) : bool)) : bool)) {
			(mappedFont : Pair<string, double> = (Pair(("" : string), (1.0 : double)) : Pair<string, double>);
			({
				(((getMappedFont_cache_key : ref Pair<string, double>)  :=  (Pair((family : string), (size : double)) : Pair<string, double>)) : void);
				(((getMappedFont_cache_value : ref Pair<string, double>)  :=  (mappedFont : Pair<string, double>)) : void)
			}
			 : void) : void)
		} else {
			({} : void)
		}
		 : void);
		(^(getMappedFont_cache_value : ref Pair<string, double>) : Pair<string, double>)
	}
	 : Pair<string, double>)
 : (family : string, size : double) -> Pair<string, double>);
