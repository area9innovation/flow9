import string_utils;

fn1(x: string, y: string, descr: string) -> void {
	x1 = "\"" + x + "\"";
	println(x + ": " + y + " " + if (x1 == y) "ok" else "NOX - " + descr);
}

fn(x: string) -> void {
	fn1(x, toStringFormatted(x), "toStringFormatted");
	fn1(x, toString(x), "toString");
}

main() {
	// Flow conversion tests
	fn("∫x+∞");
	fn("∫x+∞ ∫xx");
	fn("∫x+∞ ∫xx");
	fn("∫x+∞ ∫xx∫");
	fn("∫x+∞ ∫xx∫ℝℂ∀Ⅎ");
	fn("∫x+∞ ∫ℝℂ∀Ⅎ");
	fn("∫x+∞ ∫xx ∫ →ℝℂ∀Ⅎ");

	x: flow = Triple(Triple(15, "aaa", Pair(12.23, true)), false, Pair(["abc", "xyz", "!!!"], [1, 2, 3]));
	println(x);
	println(x.first);
	println(x.third);
	test_bin = Triple(
        Pair("ABC
		wddqw
			we	wqe			SDFSD", 2.34),
        Pair("∫x+∞xx∫→ℝℂ∀Ⅎ", false),
        Pair(100500,[
            [[1,2,3], [3,4,5]],
            [[6,7,8], [9,10,11]],
        ])
    );
	println("test_bin: " + toString(test_bin));
	println("test_bin(formatted):\n" + strIndent(toStringFormatted(test_bin)));
	println("ABC
		wddqw
			we	wqe			SDFSD");
	println("strlen(\"∫x+∞xx∫→ℝℂ∀Ⅎ\"): " + i2s(strlen("∫x+∞xx∫→ℝℂ∀Ⅎ")));
	quit(0);
}