import fs/filesystem;

main() {
	println(createDirectory("./testdel") == ""); // true
	if (fileExists("Q://test/test")) {
		// Cleanup previous run
		ignore(deleteRecursively("Q://test/test"));
	}
	println(createDirectory("Q://test/test") != ""); // true
	println(deleteDirectory("./testdel") == ""); // true
	println(deleteDirectory("./testdel") != ""); // true
	println(deleteFile("delf.txt") == ""); // true
	println(deleteFile("delf.txt") != ""); // true
	println(fileExists("users_tree.flow")); // true
	println(fileExists("delf.txt")); // false
	println(fileModified("users_tree.flow"));
	println(fileModified("")); // 0
	println(fileModifiedPrecise("users_tree.flow"));
	println(fileModifiedPrecise("hvfh")); // 0
	println(fileSize("users_tree.flow")); // 1098.0
	println(fileSize("ghgfh")); // 0
	println(isDirectory("C:\\a9\\flow9\\tools\\flowc\\tests\\nim\\test_files.flow")); // false
	println(isDirectory("C:\\a9\\flow9\\tools\\flowc\\tests\\nim\\")); // true
	println(isDirectory("users_tree.flow")); // false
	println(isDirectory(".")); // true
	println(isDirectory("C:")); // true
	println(isDirectory("sdjkfd")); // false
	println(renameFile("renf.txt", "renamedf.txt") == ""); // true
	println(renameFile("renamedf.txt", "./ghj/renamedf.txt") != ""); // true
	println(renameFile("renamedf.txt", "") != ""); // true
	println(renameFile("renf.txt", "renamedf.txt") == ""); // false

	println(renameFile("renamedf.txt", "renamedf.flow") == ""); // true . java=false
	println(renameFile("renamedf.txt", "../renamedf.txt") != ""); // false . java=true
	// println(renameFile("renamedf.txt", "renamedf.flow"));
	// println(renameFile("renamedf.txt", "../renamedf.txt"));

	println(resolveRelativePath("./users_tree.flow"));
	println(resolveRelativePath("./users_tree.flow9")); // current path + file
	println(resolveRelativePath("")); // current path
	println(isDirectory("C:\\a9\\flow9\\tools\\flowc\\tests\\nim\\test_files.flow")); // false
	println(isDirectory("C:\\a9\\flow9\\tools\\flowc\\tests\\nim\\")); // true
	println(isDirectory(".")); // true
	println(isDirectory("../..")); // true
	

	printDirectory(readDirectory("../.."));
	println("____");
	printDirectory(readDirectory(""));
	println("____");
	printDirectory(readDirectory("users_tree.flow"));

	println(getFileContent("nim_hello.flow"));
	
	quit(0);
}

printDirectory(arr : [string]) -> void {
	iter(arr, println);
}