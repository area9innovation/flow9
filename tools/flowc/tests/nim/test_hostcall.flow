import sys/target;

main() {
	println2(concat([1], [2]));
	// fn1([1, 2]);
	// res = hostCall("concat", [[1, 2], [3, 4]]); // error: wrong cast : result [1, 3]
	println2(hostCall(if (java) "Native.concat" else "concat", [[1], [4]]));
	println2(hostCall("concat", [[2], [5]]));
	println2(hostCall(if (java) ("Native." + "concat") else ("con" + "cat"), [[3], [6]]));
	println2(hostCall("con" + "cat", [[4], [7]]));

	// native println2 : io (flow) -> void = Native.println;
	println2(hostCallExists(if (java) "Native.println" else "println2"));
	println2(hostCallExists(if (java) "println" else "println2"));
	hostCall(if (java) "Native.println" else "println2", ["flow9"]);
	hostCall(if (java) "println" else "println2", ["flow99"]);

	println2("hostCallExists(\"println\"): " + b2s(hostCallExists("println")));
	println2("hostCallExists(\"concat\"): " + b2s(hostCallExists("concat")));
	hostCall("println", ["flow999"]);

	println2(hostCallExists(if (java) ("Native." + "println") else ("print" + "ln2")));
	hostCall(if (java) ("Native." + "println") else ("print" + "ln2"), ["flow9"]);
	println2(if (java) getOsFlow() else hostCall("getOs", []));

	println2(hostCallExists(if (java) ("Native." + "println?") else ("print" + "ln2_?")));

	quit(0);
}