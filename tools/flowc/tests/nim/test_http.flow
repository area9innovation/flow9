// import net/http;
import ds/array;

native makeHttpRequest : io (
	url : string,
	postMethod : bool,
	headers : [[string]],
	params : [[string]],
	onData : (string) -> void,
	onError : (string) -> void,
	onStatus : (int) -> void,
) -> void = HttpSupport.httpRequest;
native println2 : io (flow) -> void = Native.println;
i2s(i) { cast(i : int -> string); }
native timer : io (int, () -> void) -> void = Native.timer;
native toString2 : (flow) -> string = Native.toString;

native httpCustomRequestNative : io (
	url : string,
	method : string,
	headers : [[string]],
	parameters : [[string]],
	data : string,
	responseEncoding : string, // ['auto', 'utf8_js', 'utf8', 'byte']
	onResponse : (responseStatus : int, responseData : string, responseHeaders : [[string]]) -> void,
	async : bool
) -> void = HttpSupport.httpCustomRequestNative;
native setDefaultResponseEncodingNative : (encoding : string) -> void = HttpSupport.setDefaultResponseEncoding;

main() {
	arr = enumFromTo(1, 200);
	
	makeHttpRequest(
		"https://google.com",
		true,
		[],
		[["operation", "app"], ["password", "password"], ["login", ""], ["app", "curator"]],
		\data -> timer(20, \-> println2("[R1.DATA] :: " + data)),
		\error -> println2("[R1.ERROR] :: " + error),
		\status -> println2("[R1.STATUS] :: " + i2s(status))
	);
	// iter(arr, \v -> timer(v+2, \-> println2(v)));

	httpCustomRequestNative(
		"https://dev.eu.rhapsode.com/oauth/utils/login.php",
		"POST",
		[],
		[["operation", "app"], ["password", "password"], ["login", "yulia.shkel@area9.dk"], ["app", "curator"], ["t", "1680092402788"], ["target", "js"]],
		"",
		"auto",
		\status, data, headers -> {
			println2("[R2.STATUS] :: " + i2s(status));
			println2("[R2.DATA] :: " + data);
			println2("[R2.HEADERS] :: " + toString2(headers));
		},
		true
	);

	setDefaultResponseEncodingNative("utf8");
	setDefaultResponseEncodingNative("hgfeklaf");
}