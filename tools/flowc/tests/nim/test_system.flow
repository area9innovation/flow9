import runtime;

native startProcess : io (command : string, args : [string], currentWorkingDirectory : string, stdin : string, onExit : (errorcode : int, stdout : string, stderr : string) -> void) -> void = Native.startProcess;
native runSystemProcess : (command : string, args : [string], currentWorkingDirectory : string, onStdOutLine : (out : string) -> void, onStdErr : (error : string) -> void, onExit : (errocode : int) -> void) -> native = Native.runSystemProcess;
native killSystemProcess : io (process : native) -> void = Native.killProcess;
native timer : io (int, () -> void) -> void = Native.timer;
native writeProcessStdin : io (process : native, input : string) -> void = Native.writeProcessStdin;

i2s(i) { cast(i : int -> string); }
main() {
	startProcess("notepad.exe", [], "C:/a9/flow9/tools/flowc/backends/nim/", "testf.txt", \errorcode, stdout, stderr -> {
		println("after start process1");
		println(errorcode);
		println(stdout);
		println(stderr);
		println("after end process1");
		quit(0);
	});
	startProcess("wasm2wat", ["test.wasm", "-o", "test.wat"], ".", "", \ec, so, se -> {
		println("Wasm2Wat ::");
		println("   Err code: " + i2s(ec));
		println("   Out: " + so);
		println("   Err out: " + se);
	});
	startProcess("wasmer", ["test.wasm"], ".", "", \ec, so, se -> {
		println("\nExec -wasm ::");
		println("   Err code: " + i2s(ec));
		println("   Out: " + so);
		println("   Err out: " + se);
	});
	startProcess("wasmer", ["euler1.wasm"], ".", "", \ec, so, se -> {
		println("\nExec +wasm ::");
		println("   Err code: " + i2s(ec));
		println("   Out: " + so);
		println("   Err out: " + se);
	});

	println("after start processes");
	generate(0, 1000, \i-> {println(i); i});
	println("after loop");


	p1 = runSystemProcess("notepad.exe", [], ".", \out -> println("[P1] Out: " + out), \err -> println("[P1] Err: " + err), \ec -> println("[P1] Err_Code: " + i2s(ec)));
	p2 = runSystemProcess("wasm2wat", ["test.wasm", "-o", "test.wat"], ".", \out -> println("[P2] Out: " + out), \err -> println("[P2] Err: " + err), \ec -> println("[P2] Err_Code: " + i2s(ec)));
	p3 = runSystemProcess("wasmer", ["test.wasm"], ".", \out -> println("[P3] Out: " + out), \err -> println("[P3] Err: " + err), \ec -> println("[P3] Err_Code: " + i2s(ec)));
	p4 = runSystemProcess("wasmer", ["euler1.wasm"], ".", \out -> println("[P4] Out: " + out), \err -> println("[P4] Err: " + err), \ec -> println("[P4] Err_Code: " + i2s(ec)));

	writeProcessStdin(p1, "test string");

	timer(2000, \-> killSystemProcess(p4));
	timer(3000, \-> killSystemProcess(p4));

	println(getApplicationPath());
	quit(0);
}