import ds/set;
import ds/list;

check(cond : bool, msg : string) {
	if (!cond) println("ERROR! " + msg);
}

Union1 ::= Struct11, Struct12;
	Struct11(i : int);
	Struct12(i : int);

s11 = Struct11(11);

test1(f : (Struct11) -> Struct11) {
	check(f(s11) == s11, "");
}

Struct21(mutable i : int);

test21() {
	s = Struct21(0);
	check(s.i == 0, "");
	s.i ::= 1;
	check(s.i == 1, "");
}

Struct22(mutable s : Struct11);

test22() {
	s = Struct22(Struct11(0));
	check(s.s.i == 0, "");
	s.s ::= Struct11(11);
	check(s.s.i == 11, "");
}

Union3 ::= Struct31, Struct32;
	Struct31(s : Struct30);
	Struct32(s : Struct30);
	Struct30(i : int);
	
test3() {
	f = \u : Union3 -> u.s.i;
	check(f(Struct31(Struct30(31))) == 31, "");
	check(f(Struct32(Struct30(32))) == 32, "");
}

test31() {
	// not working. TODO: fix it
	f = \a : [Union3] -> {
		iter(a, \x -> {
			b = switch (x) {
				Struct31(__): true;
				default: false;
			}
			check(b, "test31.f");
		});
	}
	s = Struct31(Struct30(31));
	a = [s, s, s];
	f(a);
}

test4() {
	a = [0,2,4,6,8,1,3,5,7,9];
	l = fold(a, makeList(), \acc, x -> {
		Cons(cast(x : int -> string), acc)
	});
	check(countList(l) == length(a), "");
	s = list2string(l);
	println(s);
	check(s == "0246813579", "");
}

// Union51 ::= Struct51;
	// Struct51(u : Union52);
	// Union52 ::= Struct52;
	// Struct52(i : int);

// test5() {
	// f = \u : Union51 -> u.u.i;
	// s52 = Struct52(52);
	// u = Struct51(s52);
	// check(f(u) == 52, "");
// }

main() {
	// test1(\x -> x);
	// test21();
	// test22();
	test3();
	// // test31();
	// test4();
	// // test5();
}
