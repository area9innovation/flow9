// test for tuples.flow

import ds/tuples;

native println : io (string) -> void = Native.println;
i2s(i) { cast(i : int -> string); }

check(ok : bool) {
	println(if (ok) "OK!" else "FAILURE!!!");
}

test1() {
	p12 = Pair(1, 2);
	check((firstOfPair(p12) == 1) && (secondOfPair(p12) == 2));
	p12copy = p12;
	// check(p12 == p12copy);
	p1x = Pair(1, "x");
	check((firstOfPair(p1x) == 1) && (secondOfPair(p1x) == "x"));
	t1x3 = Triple(1, "x", 3);
	check(
		(firstOfTriple(t1x3) == 1) &&
		(secondOfTriple(t1x3) == "x") &&
		(thirdOfTriple(t1x3) == 3)
	);
	untriple(t1x3, \a, b, c -> {
		check(a == 1 && b == "x" && c == 3)
	});
}

test2() {
	prn = \arr -> fold(arr, "", \acc, x -> acc + i2s(x));
	a = enumFromTo(0, 9);
	p = unzip(a, \x -> x % 2 == 0);
	println(prn(p.first) + " " + prn(p.second));
	check(prn(p.first)  == "02468");
	check(prn(p.second) == "13579");
}

main() {
	test1();
	test2();
}
