//import ds/list;
//import ds/tuples;
//import string;

native println2 : io (flow) -> void = Native.println;
native toString : io (v : ?) -> string = Native.toString;
//native toString2 : (flow) -> string = Native.toString2;

S1(a: int, b: bool, mutable x: string);
S2(a: int, c: bool, mutable x: string);
S3(d: int, c: bool, mutable x: string);
Un1 ::= S1, S2;
Un2 ::= S2, S3;

getCommonAField(u: Un1) -> int {
	u.a + 1;
}

getCommonXField1(u: Un1) -> string {
	u.x;
}

getCommonCField(u: Un2) -> bool {
	!u.c;
}

getCommonXField2(u: Un2) -> string {
	u.x;
}

setCommonXField(u: Un1, s: string) -> void {
	u.x ::= s;
}

test10() {
	un2: Un2 = S2(2, true, "AAA");
	println2("get common c field: " + toString(getCommonCField(un2)));
	println2("get common x field: " + getCommonXField2(un2));

	un1: Un1 = S2(2, true, "AAA");
	println2("get common a field: " + toString(getCommonAField(un1)));
	println2("get common x field: " + getCommonXField1(un1));
	setCommonXField(un1, "BBB");
	println2("get common x field: " + getCommonXField1(un1));
	/*x2 = switch (un1) {
		S1(a, b, x): b;
		S2(a, c, x): c;
	}
	y2 = switch (un1) {
		S1(a, b, x): a;
		S2(a, c, x): a;
	}
	x22 = {
		switch (un1) {
			S1(a, x22, x): x22;
			S2(a, x22, x): x22;
		}
	}*/
}

main() {
	test10()
}
