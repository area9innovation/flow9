import formats/json/json;

//native println2 : io (flow) -> void = Native.println;
//native quit : io (code : int) -> void = Native.quit;
//native toString : io (v : ?) -> string = Native.toString;
//native getUrlParameterNative : io (name : string) -> string = Native.getUrlParameter;
//native getAllUrlParametersArray : io () -> [[string]] = Native.getAllUrlParameters;

json_example = <<
{
	"styles": {
		"RobotoLight": {
			"family": "Roboto",
			"weight": 300,
			"style": "normal"
		},

		"RobotoLightItalic": {
			"family": "Roboto",
			"weight": 300,
			"style": "italic"
		},

		"Roboto": {
			"family": "Roboto",
			"weight": 400,
			"style": "normal"
		},

		"RobotoItalic": {
			"family": "Roboto",
			"weight": 400,
			"style": "italic"
		},

		"RobotoMedium": {
			"family": "Roboto",
			"weight": 500,
			"style": "normal"
		},

		"RobotoMediumItalic": {
			"family": "Roboto",
			"weight": 500,
			"style": "italic"
		},

		"RobotoBold": {
			"family": "Roboto",
			"weight": 700,
			"style": "normal"
		},

		"RobotoBoldItalic": {
			"family": "Roboto",
			"weight": 700,
			"style": "italic"
		},

		"MaterialIcons": {
			"family": "Material Icons",
			"weight": 400,
			"style": "normal"
		}
	},
	"webfontconfig": {
		"google": {
			"families": ["Material Icons", "Roboto:300,400,500,700,300italic,400italic,500italic,700italic"]
		}
	},
	"dfonts": [
		{
			"name": "Roboto",
			"url": "dfontjs/Roboto/index.json",
			"embed": true,
			"path": "www/dfontjs/Roboto/index.json",
			"baseurl": "dfontjs/Roboto/"
		},
		{
			"name": "RobotoMedium",
			"url": "dfontjs/RobotoMedium/index.json",
			"embed": true,
			"path": "www/dfontjs/RobotoMedium/index.json",
			"baseurl": "dfontjs/RobotoMedium/"
		},
		{
			"name": "MaterialIcons",
			"url": "dfontjs/MaterialIcons/index.json",
			"embed": true,
			"path": "www/dfontjs/MaterialIcons/index.json",
			"baseurl": "dfontjs/MaterialIcons/"
		}
	]
}
>>;

json_example_small = <<
	{
		"name": "MaterialIcons",
		"url": "dfontjs/MaterialIcons/index.json",
		"embed": true,
		"path": "www/dfontjs/MaterialIcons/index.json",
		"baseurl": "dfontjs/MaterialIcons/"
	}
>>;

test7_list2a(l: List<int>, acc: [int]) -> [int] {
	switch (l) {
		EmptyList(): acc;
		Cons(x, t): test7_list2a(t, concat(acc, [x]));
	}
}

test7_a2list(a: [int], i: int, l: List<int>) -> List<int> {
	if (i == length(a)) l else {
		test7_a2list(a, i + 1, Cons(a[i] + 1, Cons(a[i], l)));
	}
}

test7_a2listP(a: [int], i: int, l: List<int>) -> Pair<List<int>, int> {
	if (i == length(a)) Pair(l, length(a)) else {
		test7_a2listP(a, i + 1, Cons(a[i] + 1, Cons(a[i], l)));
	}
}

test7() {
	println2(deserializeRestOfString2("\"\"", 1));

	println2(parseJson(getKeyValue("local-url-parameters", "{}")));
	println2(parseJson("{}"));
	println2(parseJson("[]"));
	println2(parseJson("1"));
	println2(parseJson("true"));
	println2(parseJson("false"));
	println2(parseJson("2.78"));
	println2(parseJson("\"\""));
	//println2(parseJson("\"a\""));
	//println2(parseJson("\"abc\""));
	
	println2(test7_list2a(EmptyList(), []));
	println2(test7_list2a(Cons(1, EmptyList()), []));
	println2(test7_list2a(Cons(2, Cons(1, EmptyList())), []));
	println2(test7_list2a(Cons(3, Cons(2, Cons(1, EmptyList()))), []));


	println2(test7_a2list([], 0, EmptyList()));
	println2(test7_a2list([1], 0, EmptyList()));
	println2(test7_a2list([1, 2], 0, EmptyList()));
	println2(test7_a2list([1, 2, 3], 0, EmptyList()));
	//println2(parseJson("\"abc\\n\""));

	/*println2(parseJson("[1]"));
	println2(parseJson("[1, 2]"));
	println2(parseJson("[1, 2, 3]"));
	println2(parseJson(json_example_small));
	//println2(parseJson(json_example));*/
}

main() {
	test7();
	quit(0);
}
