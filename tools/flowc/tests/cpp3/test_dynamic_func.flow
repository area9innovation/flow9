import net/url_parameter;
import ds/tree;
import math/stringmath;

main() {
	iter(enumFromTo(0, 9), \i ->
		ignore(hostCall("print" + "ln", [i2s(i)]))
	);
	if (hostCallExists("fold" + "Tree")) {
		dynamic_fold = \t, acc, fn -> {
			println("Dynamic foldTree is called");
			hostCall("fold" + "Tree", [t, acc, fn])
		}
		tm2 = timestamp();
		println("A big num: " + d2s(dynamic_fold(
			pairs2tree(generate(0, 362893, \i -> Pair(i + 3, i * 2))),
			0.0, \key, val, acc -> acc + i2d(key + val)
		)));
		if (getUrlParameter("determ") == "") {
			println("done in: " + d2st((timestamp() - tm2) / 1000.0, 2) + "s.");
		}
	} else {
		println("runtime function foldTree doesn't exist");
	}
	quit(0);
}