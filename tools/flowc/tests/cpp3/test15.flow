import lingo/pegcode/driver;
import text/serialize;

main() {
	str = "a";
	e_gr = "fin = 'a' $s { $s };";
	//println("default peg actions: " + strGlue(getTreeKeys(defaultPegActions.t), ", "));
	//compiled_grammar = compilePegGrammar(e_gr);
	compiled_grammar = deserialize("[PegCall(2), PegEnd(), PegStartString(), PegString(\"a\"), PegBindString(\"v0\"), PegDrop(), PegAction2(ActionVar(\"v0\")), PegReturn()]", []);

	//compiled_grammar = deserialize("PegCall(2)", []);
	//compiled_grammar = deserialize("[1]", []);
	println("compiled_grammar: " + toString(compiled_grammar));

	//println(compiled_grammar);
	//println("compiled_grammar = compilePegGrammar(e_gr); - done");
	
	//semantic_actions = SemanticActions(setTree(defaultPegActions.t, "createArInt", \s -> ArInt(s2i(s[0]))));
	//println("semantic_actions - done");
	
	println(parsic(
		compiled_grammar, 
		str,
		defaultPegActions //semantic_actions
	));

	quit(0);
}