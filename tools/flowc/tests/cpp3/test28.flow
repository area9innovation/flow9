import string;
import ds/tree;

test(s: [string]) -> void {
	t = pairs2tree(map(s, \x -> Pair(x,x)));
	if (sizeTree(t) % 3 == 0) {
		// drops explicitly here
		println("DIVIDES BY 3");
	} else if (sizeTree(t) % 3 == 1) {
		println(getTreeValues(mapTree2(t, \x, y -> x + " => " + y)));
	} else {
		// reuses here
		t0 = makeTree1("?", "??");
		println(getTreeKeys(t0));
	}
}

main() {
	t = pairs2tree(map([
		"abc", "a", "xyz", "XYZ", "asdAS", "ARGAERG",
		"", "B", "BC", "BCD","xyzt"
		],
		\x -> Pair(x, x)
	));
	println(getTreeValues(t));
	println(getTreeValues(mapTree2(t, \x, y -> x + " => " + y)));
	test(["abc", "a", "xyz", "XYZ", "asdAS", "ARGAERG", "", "B", "BC", "BCD","xyzt"]);
	test(["abc"]);
	test(["abc", "a"]);
	test(["abc", "a", "xyz"]);
	quit(0);
}
