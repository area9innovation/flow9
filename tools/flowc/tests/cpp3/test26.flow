import string;
import compile_time;


FcBackendConfig1 ::= C1, C2, C3;

	C1(a: int); 
	C2(b: string);
	C3(d: bool);

FcBackendConfigs1(
	c1: Maybe<C1>,
	c2: Maybe<C2>,
	c3: Maybe<C3>,
);

fcBackendConfigs2array1(configs : FcBackendConfigs1) -> [FcBackendConfig1] {
	extract = \field : Maybe<FcBackendConfig1> -> {
		switch (field) {
			None(): [];
			Some(f): [f];
		}
	}
	concatA([
		extract(configs.c1),
		extract(configs.c2),
		extract(configs.c3),
	]);
}


main() {
	confs = compileTime(FcBackendConfigs1(None(), Some(C2("AAA")), Some(C3(true))));
	//confs = FcBackendConfigs1(None(), Some(C2("AAA")), Some(C3(true)));
	println(compileTime(fcBackendConfigs2array1(confs)));
	quit(0);
}