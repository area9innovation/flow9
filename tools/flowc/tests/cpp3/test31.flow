import ds/array;
import runtime;
import string;


S(a: int);

main() {
	println("map([S(0), S(1), S(2)], \\x -> S(x.a + 1)): " + toString(map([S(0), S(1), S(2)], \x -> S(x.a + 1))));
	println("mapi([S(0), S(1), S(2)], \\i, x -> S(x.a + i)): " + toString(mapi([S(0), S(1), S(2)], \i, x -> S(x.a + i))));
	println("filter([S(0), S(1), S(2), S(3)], \\x -> x.a % 2 == 0): " + toString(filter([S(0), S(1), S(2), S(3)], \x -> x.a % 2 == 0)));
	println("filter([S(0), S(1), S(2), S(3)], \\x -> x.a % 2 == 1): " + toString(filter([S(0), S(1), S(2), S(3)], \x -> x.a % 2 == 1)));
	println("filter([S(0), S(1), S(2), S(3)], \\x -> true): " + toString(filter([S(0), S(1), S(2), S(3)], \x -> true)));
	println("filter([S(0), S(1), S(2), S(3)], \\x -> false): " + toString(filter([S(0), S(1), S(2), S(3)], \x -> false)));

	println("replace([S(0), S(1), S(2), S(3)], 1, S(-4)): " + toString(replace([S(0), S(1), S(2), S(3)], 1, S(-4))));
	println("replace([S(0), S(1), S(2), S(3)], 4, S(-15)): " + toString(replace([S(0), S(1), S(2), S(3)], 4, S(-15))));
	println("replace([S(0), S(1), S(2), S(3)], 0, S(-6)): " + toString(replace([S(0), S(1), S(2), S(3)], 0, S(-6))));

	// NOTICE!!!! FOLLOWING TWO TEST MAKE DIFFERENCE WITH JAVA !!!
	//println("replace([S(0), S(1), S(2), S(3)], 5, S(-5)): " + toString(replace([S(0), S(1), S(2), S(3)], 5, S(-5))));
	//println("replace([S(0), S(1), S(2), S(3)], -1, S(-7)): " + toString(replace([S(0), S(1), S(2), S(3)], -1, S(-7))));

	println("subrange([S(0), S(1), S(2), S(3)], 0, 2): " + toString(subrange([S(0), S(1), S(2), S(3)], 0, 2)));
	println("subrange([S(0), S(1), S(2), S(3)], 0, 5): " + toString(subrange([S(0), S(1), S(2), S(3)], 0, 5)));
	println("subrange([S(0), S(1), S(2), S(3)], 3, 4): " + toString(subrange([S(0), S(1), S(2), S(3)], 3, 4)));
	println("subrange([S(0), S(1), S(2), S(3)], 3, 1): " + toString(subrange([S(0), S(1), S(2), S(3)], 3, 1)));
	println("subrange([S(0), S(1), S(2), S(3)], 3, 0): " + toString(subrange([S(0), S(1), S(2), S(3)], 3, 0)));
	println("subrange([S(0), S(1), S(2), S(3)], 2, 1): " + toString(subrange([S(0), S(1), S(2), S(3)], 2, 1)));
	println("subrange([S(0), S(1), S(2), S(3)], 2, 2): " + toString(subrange([S(0), S(1), S(2), S(3)], 2, 2)));
	println("subrange([S(0), S(1), S(2), S(3)], 2, 3): " + toString(subrange([S(0), S(1), S(2), S(3)], 2, 3)));

	println("toLowerCase(\"A strin with Caps and CAPS\"): " + toLowerCase("A strin with Caps and CAPS"));
	println("toUpperCase(\"A strin with Caps and CAPS\"): " + toUpperCase("A strin with Caps and CAPS"));

	println("substring(\"A strin with Caps and CAPS\", 2, 5): " + substring("A strin with Caps and CAPS", 2, 5));
	println("substring(\"A strin with Caps and CAPS\", 0, 100): " + substring("A strin with Caps and CAPS", 0, 100));
	println("substring(\"A strin with Caps and CAPS\", 5, -2): " + substring("A strin with Caps and CAPS", 5, -2));
	println("substring(\"A strin with Caps and CAPS\", -2, 5): " + substring("A strin with Caps and CAPS", -2, 5));

	println("find([S(0), S(1), S(2), S(3)], \\x -> x.a % 2 == 1): " + toString(find([S(0), S(1), S(2), S(3)], \x -> x.a % 2 == 1)));
	println("find([S(0), S(1), S(2), S(3)], \\x -> x.a % 2 == 2): " + toString(find([S(0), S(1), S(2), S(3)], \x -> x.a % 2 == 2)));

	println("exists([S(0), S(1), S(2), S(3)], \\x -> x.a % 2 == 1): " + toString(exists([S(0), S(1), S(2), S(3)], \x -> x.a % 2 == 1)));
	println("exists([S(0), S(1), S(2), S(3)], \\x -> x.a % 2 == 2): " + toString(exists([S(0), S(1), S(2), S(3)], \x -> x.a % 2 == 2)));

	println("elemIndex([S(0), S(1), S(2), S(3)], S(2), -3): " + toString(elemIndex([S(0), S(1), S(2), S(3)], S(2), -3)));
	println("elemIndex([S(0), S(1), S(2), S(3)], S(-2), -4): " + toString(elemIndex([S(0), S(1), S(2), S(3)], S(-2), -4)));

	println("removeIndex([S(0), S(1), S(2), S(3)], 0): " + toString(removeIndex([S(0), S(1), S(2), S(3)], 0)));
	println("removeIndex([S(0), S(1), S(2), S(3)], -1): " + toString(removeIndex([S(0), S(1), S(2), S(3)], -1)));
	println("removeIndex([S(0), S(1), S(2), S(3)], 2): " + toString(removeIndex([S(0), S(1), S(2), S(3)], 2)));
	println("removeIndex([S(0), S(1), S(2), S(3)], 3): " + toString(removeIndex([S(0), S(1), S(2), S(3)], 3)));
	println("removeIndex([S(0), S(1), S(2), S(3)], 4): " + toString(removeIndex([S(0), S(1), S(2), S(3)], 4)));


	fma1 = [S(0), S(1), S(2), S(3)];
	println("(A) filtermapi([S(0), S(1), S(2), S(3)],...): " +
		toString(filtermapi(fma1, \i, x -> 
			if (x.a % 2 == 0) Some(S(x.a + 1)) else None()
		))
	);
	println("(B) filtermapi([S(0), S(1), S(2), S(3)],...): " +
		toString(filtermapi(fma1, \i, x -> 
			if (x.a % 2 == 0) Some(S(x.a + 1)) else None()
		))
	);
	println("filtermapi([S(0), S(1), S(2), S(3)],...): " +
		toString(filtermapi([S(0), S(1), S(2), S(3)], \i, x -> 
			if (x.a % 2 == 2) Some(S(x.a + 1)) else None()
		))
	);
	println("filtermapi([S(0), S(1), S(2), S(3)],...): " +
		toString(filtermapi([S(0), S(1), S(2), S(3)], \i, x -> 
			if (x.a < 100) Some(S(x.a + 1)) else None()
		))
	);
	quit(0);
}