// Test case for pipe binding with function applications
import string;
import runtime;

addExclamation(s : string) -> string {
	s + "!"
}

toUpper(s : string) -> string {
	toUpperCase(s);
}

main() {
	// This works as expected due to function call binding rules
	addExclamation("hello") |> toUpper |> println;
	
	// This is especially interesting with conditional function arguments
	// This parses as: addExclamation(if (true) "hello" else ("world" |> toUpper))
	addExclamation(if (true) "hello" else "world" |> toUpper) |> println;
	
	// The clearer way to write the last example would be:
	addExclamation(if (true) "hello" else ("world" |> toUpper)) |> println;
	// Or to apply toUpper to the result of the entire if-expression:
	addExclamation((if (true) "hello" else "world") |> toUpper) |> println;
}