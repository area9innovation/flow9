import fusion;
import algorithms;

TripleStruct(
	customFirst : int,
	second : string,
	third : string
);

PairStruct(
	triple : TripleStruct,
	someStr : string,
);

TestSortByValue(getValueFn : (?) -> ??);

testCase(data : Transform<[?]>) -> void {
	// place of problem
	sortByValue = Some(TestSortByValue(\d : Pair<PairStruct, int> -> d.first.triple.customFirst));

	result = fselect(data, FLift(\dat : [?] -> {
		eitherFn(
			sortByValue,
			\sInfo ->
				map(
					sortCustom(
						mapi(dat, \j, r -> Pair(sInfo.getValueFn(r), j)),
						firstOfPair,
						true
					),
					secondOfPair
				),
			\-> []
		)
	}));
}

main() {
	data = generate(0, 10, \i -> TripleStruct(i, "aaa", "bbb"));

	testCase(const(data));
}