Maybe<?> ::= None, Some<?>;
None();
Some(value : ?);

native length : ([?]) -> int = Native.length;

native iteriUntil : ([?], (int, ?)->bool) -> int = Native.iteriUntil;

exists(a : [?], fn : (?) -> bool) -> bool {
	foundIndex = iteriUntil(a, \i, e -> fn(e));
	foundIndex != length(a);
}

OneStructWithTopicId : (
	id :int
);
SecondStructWithTopicId : (
	id : Maybe<int>
);

main() {
	struct1 = OneStructWithTopicId(3);
	structArray = [
		SecondStructWithTopicId(Some(1)),
		SecondStructWithTopicId(Some(2)),
		SecondStructWithTopicId(Some(3)),
	];
	existCheck = exists(structArray, \elem -> elem.id == struct1.id);
}

