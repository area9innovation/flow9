// Test case for pipe binding with complex expressions
import runtime;

// Function that returns a string to ensure type consistency
uppercase(s : string) -> string {
	toUpperCase(s);
}

// Function that returns an int to ensure type consistency
increment(i : int) -> int {
	i + 1;
}

main() {
	// Complex case with if and concatenation
	// This will be parsed as: if (true) "hello" else ("world" + ("!" |> uppercase))
	if (true) "hello" else "world" + "!" |> uppercase |> println;
	
	// Complex case with nested if expressions
	// This is interpreted in a confusing way with the pipe binding only to the innermost else
	if (true) if (false) 1 else 2 else 3 |> increment |> println;
	
	// The proper way to write these expressions
	(if (true) "hello" else "world" + "!") |> uppercase |> println;
	(if (true) if (false) 1 else 2 else 3) |> increment |> println;
}