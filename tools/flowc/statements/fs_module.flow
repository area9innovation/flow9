import tools/flowc/incremental/fiprogram;
import tools/flowc/statements/fs_exp;

export {
	// Mirrors FiModule, except we get rid of excessive stuff and keep it as tight as we can

	FsModule(
		fileinfo : FiFileInfo,
		imports: [FiImport], // unresolved paths to included modules
		exports: [string], // names of unions, structs, functions, values, natives
		structs : [FiTypeStruct],
		unions : [FiTypeUnion],
		functions: [FsFunctionDec],
		globalVars: [FsGlobalVar],
		natives: [FsNativeDec],
		// Safe initialization order of globals and functions.
		initOrder : [string]
	);

	dummyFsModule = FsModule(dummyFiFileInfo, [], [], [], [], [], [], [], []);

	FsToplevel ::= FsDeclaration, FiStructOrUnion;
	FsDeclaration ::= FsFunctionDec, FsGlobalVar, FsNativeDec;

	FsFunctionDec(
		name: string,
		lambda: FsLambda,
		type : FiTypeFunction,
		declStart : int,
		defiStart : int
	);

	FsGlobalVar(
		name: string,
		value: FsStat,
		type : FiType,
		declStart : int,
		defiStart : int
	);

	FsNativeDec(
		name: string, 
		io: bool,
		type : FiType,
		nativeName : string,
		declStart : int,
		defiStart : int
	);
}
