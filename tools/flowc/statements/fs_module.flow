import tools/flowc/incremental/fiprogram;
import tools/flowc/statements/fs_exp;

export {
	// Mirrors FiModule, except we get rid of excessive stuff and keep it as tight as we can

	FsModule(
		name: string,
		imports: [FiImport],
		structs : [FiTypeStruct],
		unions : [FiTypeUnion],
		functions: [FsFunctionDec],
		globalVars: [FsGlobalVar],
	);

	FsToplevel ::= FsDeclaration, FiStructOrUnion;
	FsDeclaration ::= FsFunctionDec, FsGlobalVar;

	FsFunctionDec(
		name: string,
		lambda: Maybe<FsLambda>, // None lambda means a native function
		type: FiTypeFunction,
		info: FsFuncInfo,
	);

	FsFuncInfo(
		argSingleton: [bool], // Which of argument variables are singletons
		returnSingleton: bool // is retrun a sigleton or not
	);

	FsGlobalVar(
		name: string,
		value: FsStat,
		type: FiType,
	);
}
