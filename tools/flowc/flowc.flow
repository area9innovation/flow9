import tools/flowc/flowc_local;
import tools/flowc/flowc_remote;
import tools/flowc/flowc_server;

runConfig(config : CompilerConfig, globalEnv : FcTypeEnvGlobal, onRunComplete : (int) -> void) -> void {
	if (isConfigParameterFalse(config.config, "server") || !java) {
		runConfigLocally(config, globalEnv, onRunComplete);
	} else {
		runConfigRemote(
			config, 
			\msg -> fcPrintln(msg, config.threadId), 
			\msg -> fcPrintln(msg, config.threadId), 
			onRunComplete, 
			\__ -> runConfigLocally(config, globalEnv, onRunComplete)
		)
	}
}

main() {
	threadId = s2i(getThreadId());
	fcPrintln("Flow compiler (3rd generation)", threadId);
	fcPrintln("", threadId);

	switch (getCompilerConfig()) {
		Failed(msg): {
			fcPrintln(msg, threadId);
			quit(1);
		}
		Some(config): {
			if (isConfigParameterSet(config.config, "compilefile")) {
				starttime = timestamp();
				compilefile = getConfigParameter(config.config, "compilefile");
				configs = reverseA(readConfigsFormCompileFile(config, compilefile));
				exit_callback = \code -> {
					if (code != 0) fcPrintln("Exit code " + i2s(code), config.threadId);
					fcPrintln("Total batch compilation time: " + d2st((timestamp() - starttime) / 1000.0, 2) + "s", config.threadId);
					quit(0);
				};
				globalEnv = initFcTypeEnvGlobal();
				callback_chain = fold(configs, [exit_callback], \acc, conf -> 
					concat(acc, [
							\code -> {
								if (code != 0) {
									fcPrintln("Exit code " + i2s(code), conf.threadId);
									quit(code);
								}
								fcPrintln("Processing '" + conf.flowfile + "'", conf.threadId);
								clearTimePhases(conf.threadId);
								runConfig(conf, globalEnv, lastElement(acc, \__-> {}))
							}
						]
					)
				);
				lastElement(callback_chain, nop1)(0);
			} else if (isConfigParameterSet(config.config, "http-server-mode")) {
				fcHttpServer(config);
			} else if (isConfigParameterSet(config.config, "lsp-server-mode")) {
				fcProcServer(config);
			} else {
				runConfig(config, initFcTypeEnvGlobal(), 
					\code -> {
						if (code != 0) fcPrintln("Exit code " + i2s(code), config.threadId);
						quit(code);
					}
				);
			}
		}
	}
}
