import tools/flowc/fctypeenv;
import tools/flowc/flowc_println;

export {
	printIndent(env : FcTypeEnv, m : string) -> void;
	printStay(env : FcTypeEnv, m : string) -> void;
	printDedent(env : FcTypeEnv, m : string) -> void;

	runIndented(env : FcTypeEnv, fn : () -> ?) -> ?;
}

printIndent(env : FcTypeEnv, m : string) -> void {
	i = ^(env.local.debugIndentation);
	fcPrintln(i + m, env.program.acc.config.threadId);
	env.local.debugIndentation := i + "  ";
}

printStay(env : FcTypeEnv, m : string) -> void {
	i = ^(env.local.debugIndentation);
	fcPrintln(i + m, env.program.acc.config.threadId);
}

printDedent(env : FcTypeEnv, m : string) -> void {
	i = strRight(^(env.local.debugIndentation), 2);
	fcPrintln(i + m, env.program.acc.config.threadId);
	env.local.debugIndentation := i;
}

runIndented(env : FcTypeEnv, fn : () -> ?) -> ? {
	i = ^(env.local.debugIndentation);
	env.local.debugIndentation := i + "  ";
	r = fn();
	env.local.debugIndentation := i;
	r;
}
