import net/url_parameter;

export {
	// In server mode this function transfers argument to the http
	// response buffer as well ass to the console output.
	fcPrintln(str : string) -> void;

	// In server mode this function transfers argument to the http
	// response buffer as well ass to the console output.
	fcPrintBinary(str : string) -> void;

	// Returns accumulated output string (buffer).
	fcOutput() -> string;

	// Returns accumulated binary buffer
	fcBinary() -> string;

	// Clears the output buffer.
	clearFcOutput() -> void;

	// When is true, all printing with fcPrintln is ignored.
	// Is used when we want to skip some messages from the output
	fcSkipPrinting = ref false;
}

fcOutputBuffer = ref "";

fcBinaryBuffer = ref "";

fcPrintln(str : string) -> void {
	if (!^fcSkipPrinting) {
		if (getUrlParameterDef("server-mode", "") != "") {
			fcOutputBuffer := ^fcOutputBuffer + str + "\n";
		}
		println(str);
	}
}

fcPrintBinary(str : string) -> void {
	if (getUrlParameterDef("server-mode", "") != "") {
		fcBinaryBuffer := ^fcBinaryBuffer + str;
	}
}

fcOutput() -> string {
	^fcOutputBuffer;
}

fcBinary() -> string {
	^fcBinaryBuffer;
}

clearFcOutput() -> void {
	fcOutputBuffer := "";
	fcBinaryBuffer := "";
}
