import tools/flowc/backends/cpp2/fi2cpp_compile;
import tools/flowc/backends/common;

export {
	fi2cpp2(program : FiProgram, cfg : FcCpp2Config, callback : () -> void) -> void;
}

fi2cpp2(program : FiProgram, cfg : FcCpp2Config, callback : () -> void) -> void {
	if (cfg.verbose > 0) {
		fcPrintln("Making cpp2 '" + cfg.flowfile + "'...");
		
		fcPrintln("outputFile: " + cfg.outputFile);
		fcPrintln("outputDir: " + cfg.outputDir);
	}
	// Translate global functions
	switch (lookupTree(program.names.toplevel, "main")) {
		None(): cpp2_error("No main() function.");
		Some(main): {
			switch (main) {
				FiFunctionDec(__,__,__,__,__): {
					writer = cpp2Writer(cfg, program, main);
					cpp2WriterTranslateGlobalFunctions(writer);
					cpp2WriterTranslateGlobalVariables(writer);
					cpp2WriterEmitCommonAndTables(writer);
					cpp2writeSources(writer);
				}
				default: cpp2_error("main must be a function.");
			}
		}
	}
	callback();
}
