import tools/flowc/backends/cpp2/fi2cpp2_defines;

export {

cpp2_meta_fields = [
	"tag", "type", "struct_size", "struct_id",
	"known_fields", "known_compares",
	"struct_ptr_gcid", "struct_ptr_types"
];

cpp2_GLOBALS = "getSelf(RUNNER)->globals[";
cpp2_LOCALS = "locals[";
cpp2_TEMPS = "temps[";
cpp2_RUNNER_ARG = "RUNNER_ARG(";
cpp2_FUNCTIONS = "getSelf(RUNNER)->functions[";
cpp2_GET_ASPTR = " = RUNNER->GetArraySlotPtr(";
cpp2_GET_SPTR = "*)RUNNER->GetStructPtr(";
cpp2_GET_CSPTR = "*)RUNNER->GetClosureStructPtr(";
cpp2_CHECK_ERROR = "CHECK_ERROR(";
cpp2_STACKSLOT_MAKE = "StackSlot::Make";
cpp2_STACKSLOT_SET = "StackSlot::Set";
cpp2_STACKSLOT_INTERNAL_MAKE = "StackSlot::internalMake";
cpp2_STACKSLOT_INTERNAL_SET = "StackSlot::internalSet";
cpp2_CALL_WITH_RETSLOT = "CALL_WITH_RETSLOT(";

cpp2_int_80000000 = 0x80000000;
cpp2_CVoid   = 0x00; // ( --> void)
cpp2_CBool   = 0x01; // value : byte ( --> bool)
cpp2_CInt    = 0x02; // value : int ( --> int)
cpp2_CDouble = 0x03; // value : double ( --> double)
cpp2_CString = 0x04; // length : int, utf8chars : byte[length] ( --> string)
cpp2_CArray  = 0x05; // length : int ( v1 ... vn --> constantarray ) 
cpp2_CStruct = 0x06;
cpp2_CRefTo  = 0x1F;
cpp2_CFlow   = 0xFF; 
cpp2_CTypedArray  = 0x41;
cpp2_CTypedStruct = 0x42;
cpp2_CTypedRefTo  = 0x43;
cpp2_CSetMutable  = 0x45;

cpp2_natives = [
	Cpp2NativeDescr("mapi", 2, false, "mapi"),
	Cpp2NativeDescr("map", 2, false, "map"),
	Cpp2NativeDescr("iter", 2, false, "iter"),
	Cpp2NativeDescr("iteri", 2, false, "iteri"),
	Cpp2NativeDescr("fold", 3, false, "fold"),
	Cpp2NativeDescr("foldi", 3, false, "foldi"),
	Cpp2NativeDescr("filter", 2, false, "filter"),
	Cpp2NativeDescr("elemIndex", 3, false, "elemIndex"),
	Cpp2NativeDescr("exists", 2, false, "exists"),
	Cpp2NativeDescr("find", 2, false, "find"),
	Cpp2NativeDescr("subrange", 3, false, "subrange"),
	Cpp2NativeDescr("length", 1, true, "length"),
	Cpp2NativeDescr("strlen", 1, true, "NativeStrlen"),
	Cpp2NativeDescr("strIndexOf", 2, true, "strIndexOf"),
	Cpp2NativeDescr("substring", 3, true, "substring"),
	Cpp2NativeDescr("concat", 2, false, "mapi"),
	Cpp2NativeDescr("replace", 3, false, "replace"),
	Cpp2NativeDescr("bitXor", 2, true, "bitXor"),
	Cpp2NativeDescr("bitOr", 2, true, "bitOr"),
	Cpp2NativeDescr("bitAnd", 2, true, "bitAnd"),
	Cpp2NativeDescr("bitNot", 1, true, "bitNot"),
];

}
