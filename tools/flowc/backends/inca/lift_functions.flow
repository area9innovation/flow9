import tools/flowc/backends/inca/lift_exp;
import text/blueprint;

export {
	// Lift our code to lifted, mutable versions
	liftIncaFunctions(env : IncaEnv) -> string;
}

liftIncaFunctions(env : IncaEnv) -> string {
	blueprint("
		import out/types;

		export {
			%dec%
		}

		%def%
	", [
		"dec", foldTree(env.functions, "", \name, fn, acc -> acc + (if (acc != "") "\n" else "") + name + "_lifted(" + superglue(fn.lambda.args, \a -> a.name + " : IncaValue", ", ") + ") -> IncaValue;"),
		"def", foldTree(env.functions, "", \name, fn, acc -> acc + liftIncaFunction(env, name, fn) + "\n")
	]);
}

liftIncaFunction(env : IncaEnv, name : string, fn : FiFunctionDec) -> string {
	name + "_lifted(" + superglue(fn.lambda.args, \a -> a.name + "_lifted : IncaValue", ", ") + ") -> IncaValue {\n"
	+ liftIncaExp(fn.lambda.body, 1) + ";\n"
	+ "}\n";
}
