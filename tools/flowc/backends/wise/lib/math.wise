
// native exp : (double) -> double = Native.exp;


//-----------------------------------------------------
// PUPLIC
//-----------------------------------------------------

log(v : f64) -> f64 {
	if (v <= 0.0) {
		-1.0;
	} else { 
		c : f64 = 0.693147180559945309417232121458; // 1/lb(e)
		log2(v) * c;
	}
}

bitNot(v : i32) -> i32 {
	v ^ -1;
}

//-----------------------------------------------------
// PRIVATE
//-----------------------------------------------------

// NOTE: low precision, 5 digits
// logarithm with base=2
log2(n : f64) -> f64 {
	xi : i32 = reinterpret<>(demote<>(n));
	ff : f64 = 4294967296.0;
	x : f64 = promote<>(convert_u<>(shl<>(xi, 9))) / ff;
	//r : f32 = (((((0x0n * x + 0xf725303dn) * x + 0x03fd3fben) * x + 0x17a6d13en) * x + 0x4cdc34bfn) * x + 0xd382b83fn) * x + 0xfc888a37n;
	r : f64 = (((((0.0 * x + 0.043004956) * x - 0.1874886) * x + 0.4094703) * x - 0.70648646) * x + 1.4414924) * x + 0.00001651467;
	res : f64 = promote<>(convert_s<>( shr_u<>(xi, 23) - 127 )) + r;
	res;
}
