// include lib/wise/array;
// import fd_write : (i32, i32, i32, i32) -> i32 = wasi_snapshot_preview1.fd_write;

// TODO: encoding. it doesnt work yet // println

// string is an array of bytes (symbol is an unicode value)
// 1 symbol = 2 bytes (UTF-16)

//-----------------------------------------------------
// PUPLIC
//-----------------------------------------------------
// FIX IT!!!!!
// it prints ascii , but we have unicode
printlnStr(s : i32) -> () {
	len : i32 = getLengthArray(s);
	// save the str adr
	store<>(0, s);
	// How many bytes to write
	store<>(4, len * charSize);
	fd_write(1, 0, 1, len * charSize * 8);
	// drop(s);
	printByte(10);
	();
}

strlen(s : i32) -> i32 {
	len : i32 = getLengthArray(s);
	// drop(s);
	len;
}

substring(s : i32, start : i32, length : i32) -> i32 {
	newStr : i32 = subrangeArrayE(s, start, length, charSize);
	// drop(s);
	newStr;
}

createString(length : i32) -> i32 {
	initArray(length, charSize);
}

// ~PROTECTED
setCharString(s : i32, index : i32, value : i32) -> () {
	store16<>(s + charSize * index, value);
}

//-----------------------------------------------------
// PRIVATE
//-----------------------------------------------------
charSize : i32 = 2; // utf-16

getCharString(s : i32, index : i32) -> i32 {
	load16_u<>(s + charSize * index);
}
