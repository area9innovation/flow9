[
Cpp3RuntimePart("hash_map",
"

template<typename K, typename T>
struct FlowHashMap {
	using Map = phmap::flat_hash_map<K, T, Hash<std::size_t, K>, Equal<K>>;
	FlowHashMap(Int capacity): m(capacity) { }
	~FlowHashMap() {
		for (auto p : m) {
			decRc(p.first);
			decRc(p.second);
		}
	}
	Map m;
};

template<typename K, typename T>
struct FlowConcurHashMap {
	using Map = phmap::parallel_flat_hash_map<
		K, T, Hash<std::size_t, K>,
		Equal<K>, std::allocator<std::pair<const K, T>>,
		4, // Optimized for 2^4 = 16 threads
		std::mutex
	>;
	FlowConcurHashMap(Int capacity): m(capacity) { }
	~FlowConcurHashMap() {
		for (auto p : m) {
			decRc(p.first);
			decRc(p.second);
		}
	}
	Map m;
};

",
"",
"", "", [Cpp3Std(["<phmap.h>", "<mutex>"], [])], false
)
]