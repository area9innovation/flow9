import tools/flowc/backends/cpp3/fi2cpp3_defines;
import sys/process;

export {
	fi2cpp3BuildDirectly(gctx: Cpp3GlobalContext, program: Cpp3CompiledProgram, callback : (int) -> void) -> void;
}

fi2cpp3BuildDirectly(gctx: Cpp3GlobalContext, program: Cpp3CompiledProgram, callback : (int) -> void) -> void {
	cpp_sources = filter(program.sources, \path -> endsWith(path, ".cpp"));
	debug_param = getConfigParameterDef(gctx.program.config.config, "cpp-debug", "");
	debug = if (debug_param == "") [] else {
		["-O0", "-ggdb" + debug_param]
	}
	opt_param = getConfigParameterDef(gctx.program.config.config, "cpp-optimize", "");
	optimize = if (opt_param == "" || debug_param != "") [] else {
		["-O" + opt_param]
	}
	args = concatA([cpp_sources, debug, optimize, ["-std=c++20", "-o", changeFileExt(gctx.config.config.flowfile, ".exe")]]);
	if (gctx.config.config.verbose > 0) {
		fcPrintln("Compiling with cpp3: 'g++ " + strGlue(args, " ") + "', dir: " + gctx.packagePath + "...", gctx.config.config.threadId);
	}
	result = execSystemProcessOutput("g++", args, gctx.packagePath);
	if (gctx.config.config.verbose > 0 || result.exitCode != 0) {
		if (!isSpace(result.stdall)) {
			fcPrintln(result.stdall, gctx.program.config.threadId);
		}
	}
	if (result.exitCode == 0) callback(0) else callback(5);	
}
