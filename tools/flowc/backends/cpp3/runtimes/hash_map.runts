[
Cpp3RuntimePart("hash_map", 
"template<typename K, typename T>
struct FlowHashMap {
	struct Hash {
		Hash(Fun<Int, K>* h): hash(h) { }
		Int operator() (K k) const {
			incRc(k);
			return hash->callRc1(k);
		}
		Fun<Int, K>* hash;
	};
	struct Equal {
		bool operator() (K k1, K k2) const {
			incRc(k1);
			incRc(k2);
			return equalRc(k1, k2);
		}
		Fun<Int, K>* hash;
	};
	FlowHashMap(Int capacity, Fun<Int, K>* h): m(capacity, Hash(h)), hash(h) { }
	~FlowHashMap() {
		decRc(hash);
		for (auto p : m) {
			decRc(p.first);
			decRc(p.second);
		}
	}
	std::unordered_map<K, T, Hash, Equal> m;
	Fun<Int, K>* hash;
};\n",
"",
"", "", [Cpp3Std(["<unordered_map>"], [])], false
)
]