[

Cpp3Native("extractStruct", true,
"template<typename T1, typename T2> T2 $F_1(extractStruct)(Vec<T1>* a, T2 e);\n",
"template<typename T1, typename T2> inline T2 $F_1(extractStruct)(Vec<T1>* a, T2 e) {
	for (T1 x : *a) {
		if (x->typeId() == e->typeId()) {
			incRc(x);
			decRc(a);
			decRc(e);
			return castRc<T1, T2>(x);
		}
	}
	decRc(a);
	return e;
}\n", Cpp3Inline(true, ""), [], []),

Cpp3Native("extractStructMany", true,
"template<typename T1, typename T2> Vec<T2>* $F_1(extractStructMany)(Vec<T1>* a, T2 e);\n",
"template<typename T1, typename T2> inline Vec<T2>* $F_1(extractStructMany)(Vec<T1>* a, T2 e) {
	Vec<T2>* ret = Vec<T2>::make({});
	for (T1 x : *a) {
		if (x->typeId() == e->typeId()) {
			incRc(x);
			ret->pushBack(castRc<T1, T2>(x));
		}
	}
	decRc(a);
	decRc(e);
	return ret;
}\n", Cpp3Inline(true, ""), [], [])

]
