[

Cpp3Native("makeHttpRequest", false,
"Void $F_1(makeHttpRequest)(
	String* url, 
	Bool post,
	Vec<Vec<String*>*>* headers,
	Vec<Vec<String*>*>* params,
	Fun<Void, String*>* onData,
	Fun<Void, String*>* onError, 
	Fun<Void, Int>* onStatus);\n",
"Void $F_1(makeHttpRequest)(
	String* url, 
	Bool post,
	Vec<Vec<String*>*>* headers,
	Vec<Vec<String*>*>* params,
	Fun<Void, String*>* onData,
	Fun<Void, String*>* onError, 
	Fun<Void, Int>* onStatus) {
	// TODO: fill in the stub
	onStatus->callRc1(500);

	decRc(url);
	decRc(headers);
	decRc(params);
	decRc(onData);
	decRc(onError);
	decRc(onStatus);

	return void_value;
}\n", Cpp3Inline(true, ""), [], []),

Cpp3Native("httpCustomRequestNative", false,
"Void $F_1(httpCustomRequestNative)(
	String* url,
	String* method,
	Vec<Vec<String*>*>* headers,
	Vec<Vec<String*>*>* parameters,
	String* data,
	String* responseEncoding,
	Fun<Void, Int, String*, Vec<Vec<String*>*>*>* onResponse,
	Bool async
);\n",
"Void $F_1(httpCustomRequestNative)(
	String* url,
	String* method,
	Vec<Vec<String*>*>* headers,
	Vec<Vec<String*>*>* parameters,
	String* data,
	String* responseEncoding,
	Fun<Void, Int, String*, Vec<Vec<String*>*>*>* response,
	Bool async
) {
	// TODO: fill in the stub
	decRc(url);
	decRc(method);
	decRc(headers);
	decRc(parameters);
	decRc(data);
	decRc(responseEncoding);
	decRc(response);
	
	return void_value;
}\n", Cpp3Inline(true, ""), [], [])

]