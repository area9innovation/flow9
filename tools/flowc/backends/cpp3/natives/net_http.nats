[

Cpp3NativePlain("makeHttpRequest", false,
"Void $F_1(makeHttpRequest)(
	String url, 
	Bool post,
	Vec<Vec<String>> headers,
	Vec<Vec<String>> params,
	Fun<Void, String> onData,
	Fun<Void, String> onError, 
	Fun<Void, Int>* onStatus);\n",
"Void $F_1(makeHttpRequest)(
	String url, 
	Bool post,
	Vec<Vec<String>> headers,
	Vec<Vec<String>> params,
	Fun<Void, String> onData,
	Fun<Void, String> onError, 
	Fun<Void, Int> onStatus) {
	// TODO: fill in the stub
	onStatus->callRc1(500);

	url->decRC();
	headers->decRC();
	params->decRC();
	onData->decRC();
	onError->decRC();
	onStatus->decRC();

	return void_value;
}\n", "", [], []),

Cpp3NativePlain("httpCustomRequestNative", false,
"Void $F_1(httpCustomRequestNative)(
	String url,
	String method,
	Vec<Vec<String>> headers,
	Vec<Vec<String>> parameters,
	String data,
	String responseEncoding,
	Fun<Void, Int, String, Vec<Vec<String>>> onResponse,
	Bool async
);\n",
"Void $F_1(httpCustomRequestNative)(
	String url,
	String method,
	Vec<Vec<String>> headers,
	Vec<Vec<String>> parameters,
	String data,
	String responseEncoding,
	Fun<Void, Int, String, Vec<Vec<String>>> responseEncoding,
	Bool async
) {
	// TODO: fill in the stub
	url->decRC();
	method->decRC();
	headers->decRC();
	parameters->decRC();
	data->decRC();
	responseEncoding->decRC();
	responseEncoding->decRC();
	
	return void_value;
}\n", "", [], [])

]