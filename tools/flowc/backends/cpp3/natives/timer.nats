[

Cpp3Native("timer", false,
"Void $F_1(timer)(Int delay, Fun<Void>* cb);\n",
"Void $F_1(timer)(Int delay, Fun<Void>* cb) {
	if (RuntimeStatus::isReady()) {
		//ThreadPool::push<void>(ThreadPool::Shutdown::Block, [delay, cb]() {
		ThreadPool::push<void>(ThreadPool::Shutdown::Skip, [delay, cb]() {
			std::this_thread::sleep_for(std::chrono::milliseconds(delay));
			if (RuntimeStatus::isReady()) {
				cb->callRc();
			} else {
				decRc(cb);
			}
		});
	}
	return void_value;
}\n", "", [Cpp3Std(["<chrono>", "<thread>"], [])], [])

]