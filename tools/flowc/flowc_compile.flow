import tools/flowc/incremental/fiprogram;
import tools/flowc/flowc_remote;

export {
	// Compile an expression on a remote flowc instance
	compileFiExp(conf : CompilerConfig, e : string, onOk : (FiExp) -> void, onError : (string) -> void) -> void;

	// Compile an program on a remote flowc instance
	compileFiProgram(conf : CompilerConfig, path : string, onOk : (FiProgram) -> void, onError : (string) -> void) -> void;
}

compileFiExp(conf : CompilerConfig, e : string, onOk : (FiExp) -> void, onError : (string) -> void) -> void {
	task_conf = CompilerConfig(conf with
		config = setTree(conf.config, "compile-expression", e)
	);
	runConfigRemote(task_conf, \data -> onOk(cast(data : flow -> FiExp)), onError, nop1, \status-> onError("Server connection error " + i2s(status)))
}

compileFiProgram(conf : CompilerConfig, path : string, onOk : (FiProgram) -> void, onError : (string) -> void) -> void {
	task_conf = CompilerConfig(conf with
		config = setTree(conf.config, "dump-program", "1"),
		flowfile = path
	);
	runConfigRemote(task_conf, \data -> onOk(cast(data : flow -> FiProgram)), onError, nop1, \status-> onError("Server connection error " + i2s(status)))
}
