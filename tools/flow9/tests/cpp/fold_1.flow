native fold : (xs : [?], init : ??, fn : (??, ?)->??) -> ?? = Native.fold;

native println : io (?) -> void = Native.println;
native quit : io (code : int) -> void = Native.quit;

Struct(val : ?);

main() -> void {
	println("Test3.2 1:");
	init1 = Struct(0);
	arr1 = [1, 2, 3, 4];
	res1 = fold(arr1, init1, \acc, v -> {println(v); println(acc.val); Struct(acc.val + 1);});
	println(if (init1.val == 0) "true" else "false");
	println(if (res1.val == 4) "true" else "false");
	println("Test3.2 2:");
	arr2 = ["a", "b", "c"];
	init2 = Struct(1.1);
	res2 = fold(arr2, init2, \acc, v -> {println(v); println(acc.val); Struct(acc.val * 2.)});
	println(if (init2.val == 1.1) "true" else "false");
	println(if (res2.val == 8.8) "true" else "false");
	quit(0);
}