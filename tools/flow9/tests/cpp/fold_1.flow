native fold : (xs : [?], init : ??, fn : (??, ?)->??) -> ?? = Native.fold;

native println : io (?) -> void = Native.println;
native quit : io (code : int) -> void = Native.quit;

Struct(val : ?);

main() -> void {
	println("Test3.2 1:");
	init1 = Struct(0);
	arr1 = [Struct(1), Struct(2), Struct(3), Struct(4)];
	res1 = fold(arr1, init1, \acc, v -> {println(v.val); println(acc.val); Struct(acc.val + 1);});
	println(if (init1.val == 0) "true" else "false");
	println(if (res1.val == 4) "true" else "false");
	println("Test3.2 2:");
	arr2 = [Struct("a"), Struct("b"), Struct("c")];
	init2 = Struct("b");
	res2 = fold(arr2, init2, \acc, v -> {println(v.val); println(v.val == acc.val); Struct(acc.val)});
	println("Res");
	println(if (res2.val == "b") "true" else "false");
	quit(0);
}