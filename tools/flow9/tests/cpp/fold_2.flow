native fold : (xs : [?], init : ??, fn : (??, ?)->??) -> ?? = Native.fold;

native println : io (?) -> void = Native.println;
native quit : io (code : int) -> void = Native.quit;

Struct(val : ?);

testFold(arr : [?], init : Struct<??>, inc : (??) -> ??) -> void {
	res1 = fold(arr, init, \acc, v -> {println(v); println(acc.val); Struct(inc(acc.val));});
	println("Init:");
	println(init.val);
	println("Res:");
	println(res1.val);
}

main() -> void {
	println("Test3.2    1:");
	testFold([1, 2, 3, 4], Struct(0), \v -> v + 1);
	println("Test3.2    2:");
	testFold(["a", "b", "c"], Struct(0.5), \v -> v * 2.);

	quit(0);
}