native println2 : io (?) -> void = Native.println;
native i2s : (int) -> string = Native.i2s;
native isSameStructType : (value1 : ?, value2 : ??) -> bool = Native.isSameStructType;
native extractStruct : (a : [?], e : ??) -> ?? = Native.extractStruct;

changeVal(val : int) -> int {
	val * 20
}

mapval(val : ?, fn1 : (?) -> ??, fn2 : (??) -> ???) -> ??? {
	fn2(fn1(val))
}

mapval2(val : ?, val2 : ??, fn : (?, ??) -> ???) -> ??? {
	fn(val, val2)
}

mapval3(val : [?], val2 : ??, fn : ([?], ??) -> ??) -> ?? {
	fn(val, val2)
}


S1();
S2();

U ::= S1, S2;

main() {
	println2(mapval(10, changeVal, i2s));
	println2(mapval(10, \v -> v + 1, \v2 -> "res " + i2s(v2)));

	println2(mapval(S1(), \v -> v, \v -> isSameStructType(v, S2())));

	println2(mapval3([S1(), S2()], S2(), extractStruct));
	
	println2(mapval2(S1(), S2(), isSameStructType));
	// workaround. add to cpp.flow ?
	println2(mapval2(S1(), S2(), \v1, v2 -> isSameStructType(v1, v2)));
}
