native println2 : io (flow) -> void = Native.println;

Struct1(v1 : int, v2 : ref int);
Struct2(v : int);
extractor(v : Struct1) -> ref int {
    v.v2
}

getRefAlias(v : ref int) -> ref int {
    v
}

mapper(v : Struct1, extr : (Struct1) -> Struct1) -> Struct1 {
    extr(v)
}

makeStruct1(init1 : int, init2 : int) -> Struct1 {
    Struct1(init1, ref init2)
}

updateStruct(s : Struct1, newVal : int) -> Struct1 {
    s.v2 := newVal;
    s;
}

main() {

    // TODO: later
    s1 = Struct1(10, ref 11);
    s1.v2 := 12;
    println2(^(s1.v2)); // 12
    r1 : ref int = extractor(s1);
    println2(^r1); // 12
    r1 := 13;
    println2(^(s1.v2)); // 13

    r3 = ref 50;
    r4 = getRefAlias(r3);
    r4 := 15;
    println2(^r3); // 15
    println2(^r4); // 15

    r3 := 16;
    println2(^r3); // 16

    println2(^r1); // 13
    r2 = mapper(s1, \a -> a);
    println2(^(r2.v2)); // 13
    r2.v2 := 14;
    println2(^(s1.v2)); // 14
    println2(^(r2.v2)); // 14


    s2 = makeStruct1(10, 20);
    println2(^(s2.v2)); // 20
    updateStruct(s2, 100);
    println2(^(s2.v2)); // 100


    s3 = ref Struct2(33);
    s3 := Struct2(34);
    println2((^s3).v); // 34
}
