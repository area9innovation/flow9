Foo(id : int);
Bar();
FreeStruct();

Union1 ::= Foo, Bar;
Union2 ::= Foo;

native println : io (?) -> void = Native.println;

native isSameStructType : (value1 : ?, value2 : ??) -> bool = Native.isSameStructType;

// the order is important. why?? (fn -> main)
compareUnions(union1 : Union1, union2 : Union2) -> bool {
	isSameStructType(union1, union2)
}

compareUnions2(union1 : Union1, union2 : Union1) -> bool {
	isSameStructType(union1, union2)
}

compareUnions3(union1 : Union1, union2 : Foo) -> bool {
	isSameStructType(union1, union2)
}

compareUnions4(union1 : Foo, union2 : Union1) -> bool {
	isSameStructType(union1, union2)
}

main() {
	println(compareUnions(Bar(), Foo(0)));	// false
	println(compareUnions(Foo(1), Foo(0)));	// true

	println(compareUnions2(Bar(), Foo(0))); // false
	println(compareUnions2(Foo(1), Foo(0))); // true

	println(compareUnions3(Bar(), Foo(0)));	// false
	println(compareUnions3(Foo(1), Foo(0))); // true

	println(compareUnions4(Foo(1), Bar()));	// false
	println(compareUnions4(Foo(1), Foo(0))); // true
}
