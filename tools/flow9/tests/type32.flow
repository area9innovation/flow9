Maybe<?> ::= None, Some<?>;
	None();
	Some(value : ?);

isSome(m : Maybe<?>) -> bool {
	switch (m : Maybe) {
		None(): false;
		Some(__): true;
	}
}

native map : ([?], (?) -> ??) -> [??] = Native.map;
native mapi : ([?], (int, ?) -> ??) -> [??] = Native.mapi;
native filter : (a : [?], test : (?) -> bool) -> [?] = Native.filter;

filtermapi(a : [?], test : (int, ?) -> Maybe<??>) -> [??] {
	mapped : [Maybe<??>] = mapi(a, test);
	filtered = filter(mapped, isSome);
	map(filtered, \v : Maybe<??> ->
		cast(v : Maybe<??> -> Some<??>).value
	);
}
