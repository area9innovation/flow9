native println2 : io (flow) -> void = Native.println;

Struct(val : int);
// ------------------------------------------------------------------------------------------
bar(v : Struct) -> void {
	//
}
// ------------------------------------------------------------------------------------------
foo1() -> void {
	a = Struct(1);
	b = a;
	bar(a);
	bar(b);
}
// ------------------------------------------------------------------------------------------
foo2() -> void {
	c = Struct(2);
	d = c;
}
// ------------------------------------------------------------------------------------------
foo3() -> void {
	c = Struct(3);
	d = c;
	c;
	{}
}
// ------------------------------------------------------------------------------------------
foo4() -> void {
	e = Struct(4);
	f = e.val; // drop() after use
}
// ------------------------------------------------------------------------------------------
makeStruct() -> Struct {
	Struct(5);
}
foo5() -> void {
	f = makeStruct(); // alias // nothing
}
// ------------------------------------------------------------------------------------------
foo6() -> void {
	a = makeStruct().val; // not alias // drop() after use
	{}
}
// ------------------------------------------------------------------------------------------
foo7() -> void {
	makeStruct(); // dangling result // drop(result) // fn arg in the future
	{}
}
// ------------------------------------------------------------------------------------------
updateStruct(v : Struct) -> Struct {
	v;
}
foo8() -> void {
	a = Struct(5);
	f = updateStruct(a); // alias // nothing
	{}
}
// ------------------------------------------------------------------------------------------
foo9() -> void {
	a = Struct(1);
	bar(a);
	bar(a);
	2;
	{}
}
// ------------------------------------------------------------------------------------------
foo10() -> void {
	a = Struct(1);
	bar(a);
	2;
	{}
}
// ------------------------------------------------------------------------------------------
foo11() -> void {
	a = Struct(1);
	b = a;
	bar(a);
	2;
	{}
}
// ------------------------------------------------------------------------------------------
foo12() -> void {
	e = Struct(4);
	f = e.val; // drop() after use
	e;
	{}
}

// ------------------------------------------------------------------------------------------
main() {
	foo1();
	foo2();
	foo3();
	// std::cout<<"_____________" <<std::endl;
	foo4();
	foo5();
	foo6();
	foo7();
	foo8();
	foo9();
	foo10();
	foo11();
	foo12();
}

/*
	a = Struct(1);
   timer(1000, \ -> bar(a));
*/