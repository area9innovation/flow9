native println2 : io (flow) -> void = Native.println;
native extractStruct : (a : [?], e : ??) -> ?? = Native.extractStruct;

Struct1(i : int);
Struct2();

Union1 ::= Struct1, Struct2;


// ------------------------------------------------------------------------------------------
foo1() -> void {
	v = Struct2();
	arr = [v, Struct1(10)];
	v;
	{}
}
// ------------------------------------------------------------------------------------------
foo2() -> void {
	v = Struct2();
	arr = [v, Struct1(10)];
	{}
}
// ------------------------------------------------------------------------------------------
foo3() -> void {
	v = Struct2();
	arr = [v, Struct1(10)];
	arr;
	{}
}
// ------------------------------------------------------------------------------------------
foo4() -> void {
	v = Struct2();
	arr = [v, Struct1(10), v];
	{}
}
// ------------------------------------------------------------------------------------------
foo5() -> void {
	a = extractStruct([Struct1(10), Struct2()], Struct1(20));
	{}
}
// ------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------
main() {
	foo1();
	foo2();
	foo3();
	foo4();
	foo5();
	{}
	// std::cout<<"_____________" <<std::endl;
}