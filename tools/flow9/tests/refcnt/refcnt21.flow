native println2 : io (flow) -> void = Native.println;
native isSameStructType : (value1 : ?, value2 : ??) -> bool = Native.isSameStructType;
native extractStruct : (a : [?], e : ??) -> ?? = Native.extractStruct;

Struct1(v : Union1);
Struct2(v : Union1, s : string);
Struct3();

Union1 ::= Struct1, Struct2, Struct3;

Struct4(v : int);
Struct5();

Union2 ::= Struct4, Struct5;

// ------------------------------------------------------------------------------------------
foo1() -> void {
	s : Union2 = Struct4(10);

	switch (s : Union2) {
		Struct4(v2) : {v2; {}}
		Struct5() : {}
	}
}
// ------------------------------------------------------------------------------------------
foo2() -> void {
	a = extractStruct([Struct1(Struct2(Struct3(), "s1")), Struct3()], Struct1(Struct3()));
}
// ------------------------------------------------------------------------------------------
foo3() -> void {
	v = Struct1(Struct2(Struct3(), "s2"));

	switch (v.v : Union1) {
		Struct1(v2) :println2(if (isSameStructType(v2, Struct3())) "s1 : yes" else "s1 : no");
		Struct2(v2, s) : println2((if (isSameStructType(v2, Struct3())) "s2 : yes <= " else "s2 : no <= ") + s);
		Struct3() : println2("st3");
	} // s2 : yes
	{}
}
// ------------------------------------------------------------------------------------------
bar(v : Union1) -> void {}
foo4() -> void {
	v = Struct1(Struct2(Struct3(), "s2"));

	switch (v.v : Union1) {
		Struct1(v2) : bar(v2);
		Struct2(v2, __) : bar(v2);
		Struct3() : {}
	}
}
// ------------------------------------------------------------------------------------------
foo5() -> void {
	v : Union1 = Struct1(Struct3());
	switch (v : Union1) {
		//Struct1(v2) : {a = if (isSameStructType(v2, Struct3())) 1 else 2;}
		Struct1(v2) : {
			b = Struct3();
			if (isSameStructType(v2, b)) {} else {c = b;}
			{}
		}
		Struct2(__, __) : {}
		Struct3() : {}
	}
	{}
}
// ------------------------------------------------------------------------------------------
bar6(a1 : Union1, a2 : Struct3) -> bool {
	false
}
foo6() -> void {
	v : Union1 = Struct3();
	if (bar6(v, Struct3())) {} else {}
}
// ------------------------------------------------------------------------------------------
main() {
	foo1(); // ok
	foo2(); // todo array
	foo3(); // +-
	foo4(); // ok
	foo5(); //ok
	foo6(); // ok
	{}
	// std::cout<<"_____________" <<std::endl;
}