native println2 : io (?) -> void = Native.println;

native strlen : (string) -> int = Native.strlen;
native substring : (s : string, start : int, length : int) -> string = Native.substring;

// ------------------------------------------------------------------------------------------
foo1(s : string) -> void {	
	l = strlen(s);
	l2 = strlen(s);
	{}
}
// ------------------------------------------------------------------------------------------
fn2(s : string) -> int { 1}
foo2(s1 : string) -> void {	
	s2="dd";
	l = fn2(s2);
	l2 = fn2(s2);

	l3 = fn2(s1);
	l4 = fn2(s1);
	{}
}
// ------------------------------------------------------------------------------------------
foo3(s : string) -> void {	
	l = strlen(s);
	if (l < 10) {
		""
	} else {
		s
	}
	{}
}
// ------------------------------------------------------------------------------------------
foo4(s : string) -> void {	
	l = strlen(s);
	if (l < 10) {
		1
	} else {
		strlen(s);
	}
	{}
}
// ------------------------------------------------------------------------------------------
Struct3();
fn5(a1 : Struct3, a2 : Struct3) -> bool {
	false
}
foo5() -> void {
	v = Struct3();
	if (fn5(v, Struct3())) {} else {}
}
// ------------------------------------------------------------------------------------------
foo6() -> void {
	s = "dggfhskjal";
	(1 == 2) && 2==3 && (strlen(s) > 0);
	{}
}
// ------------------------------------------------------------------------------------------
foo7() -> void {
	s = "dgjal";
	first = strlen(s) + 1;
	last = strlen(s) + 2;
	(first == last) && (strlen(s) > 0);
	{}
}
// ------------------------------------------------------------------------------------------
fn7_1() -> string { "dkdk" }
fn7_2(s : string) -> bool { false }
foo8() -> void {
	if ((1 < 10) || fn7_2(fn7_1())) {} else {}
	if (true || fn7_2("sbs")) {} else {}
	{}
}
// ------------------------------------------------------------------------------------------
foo9() -> void {
	s = "dgjal";
	if ((strlen(s) > 0) && (strlen(s) + 1) == (strlen(s) + 2)) {} else {}
	{}
}
// ------------------------------------------------------------------------------------------
foo10() -> void {
	s = "363829";
	//if ((strlen(s) + 1) == (strlen(s) + 2) && (strlen(s) > 0)) {} else {}
	if (false || (strlen(s)) == (strlen(s))) {} else {}

	s2 = "text";
	if ((strlen(s2)) == (strlen(s2)) && true) {} else {}

	s3 = "texts";
	if (if (strlen(s3) == strlen(s3)) {true} else {false}) {} else {}
}
// ------------------------------------------------------------------------------------------
foo11() -> void {
	s = "dgjal";
	if (strlen(s) == strlen(s)) {} else {}
	{}
}
// ------------------------------------------------------------------------------------------
foo12() -> void {
	s = "dgjal";
	b = (strlen(s) + 10) == (strlen(s) + 20);
}
// ------------------------------------------------------------------------------------------
//fn13(s: string) -> string{"x"}
foo13() -> void {
	first = "d";
	last = "a";
	//fn13(first) == last && true;
	first == last && true;
	last;
	{}
}
// ------------------------------------------------------------------------------------------
Struct(v : int);
fn14(v : Struct) -> bool { true; }
foo14() -> void {
	start = Struct(10);
	if (start.v <= 3) { start; {} } else { }

	a = Struct(11);
	if (fn14(a)) { a; {} } else { }
	
	b = Struct(12);
	if (b.v <= 3) { } else { }
}
// ------------------------------------------------------------------------------------------
foo15() -> void {
	acc = Struct(10);
	if (acc.v % 2 == 0) {
		acc;
		{}
	} else {
		acc;
		{}
	}

	{}
}
// ------------------------------------------------------------------------------------------
fn16(a1 : Struct, a2 : Struct) -> Struct { Struct(16); } // error
fn16_2(a1 : Struct) -> Struct { Struct(16); } // ok if 1 arg or simple types
foo16() -> int {
	fn16(Struct(1), Struct(2)).v;
	
	// fn16_2(Struct(3)).v;
	// fn16(Struct(4), Struct(5)).v;

	3;
}
// ------------------------------------------------------------------------------------------

main() {
	// // call
	// foo1("fddgj");
	// foo2("fddgj");
	// // if
	// foo3("text");
	// foo4("text2");
	// foo5();
	// // lazy evaluation
	// foo6();
	// foo7();
	// foo8();

	// foo9();
	// foo10();
	// foo11();
	// foo12();
	// foo13();

	// foo14();
	// foo15();
	foo16();

	{}
}
