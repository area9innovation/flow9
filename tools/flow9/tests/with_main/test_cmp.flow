native println2 : io (flow) -> void = Native.println;
native quit : io (code : int) -> void = Native.quit;
native toString2 : (flow) -> string = Native.toString;
native iter : ([?], (?)->void) -> void = Native.iter;

Un ::= A, B, C;

A(a : int);
C(s : string);
B(l : Un, r : [Un]);

a = B(
	B(C("xyz"), [A(1), B(A(3), [C("A")])]), 
	[B(C("123"), [B(C("#"), [B(A(-1), [])]), A(5)]), A(123)]
);
b = B(
	B(C("xyz"), [A(1), B(A(3), [C("A")])]), 
	[B(C("123"), [B(C("#"), [B(A(-1), [])]), A(5)]), A(123)]
);
c = B(
	B(C("xyz"), [A(1), B(A(3), [C("A")])]), 
	[B(C("123"), [B(C("#"), [B(A(-2), [])]), A(5)]), A(123)]
);

Test(left : flow, right : flow);

tests = [
	Test(1, 1),
	Test(1, 2),
	Test(2, 1),
	Test(1.2, 1.2),
	Test(1.2, 2.1),
	Test(2.1, 1.2),
	Test(true, true),
	Test(true, false),
	Test(false, true),
	Test("abc", "abc"),
	Test("abc", "xyz"),
	Test("xyz", "abc"),
	Test([1, 2, 3], [1, 2, 3]),
	Test([1, 2, 3], [1, 2, 2]),
	Test([1, 2, 2], [1, 2, 3]),
	Test([1, 2, 3], [1, 2, 5]),
	Test([1, 1, 3], [1, 2, 3]),
	Test([1, 5, 3], [1, 2, 3]),
	Test([1, 2, 3], [1, 2, 3, 4]),
	Test([1, 2, 3, 4], [1, 2, 3]),
	Test("abc", "abc"),
	Test("abc", "abcd"),
	Test("abcd", "abc"),
	Test("axcd", "abc"),
	Test("abx", "abc"),
	Test("abc", "axc"),
	Test(a, b),
	Test(a, c),
	Test(c, a),
];

main() -> void {
	println2("Test on comparisons ...");
	iter(tests, \test -> {
		left : flow = test.left;
		right : flow = test.right;
		compare : bool = left < right;
		equal : bool = left == right;
		println2(
			toString2(left) + " < "  + toString2(right) + " = " + toString2(compare) + "\n" + 
			toString2(left) + " == " + toString2(right) + " = " + toString2(equal) + "\n"
		)
	});
	/*println2(toString([1, 2, 3]) + " < " + toString () + toString2([2] < [2]));
	a = B(
		B(C("xyz"), [A(1), B(A(3), [C("A")])]), 
		[B(C("123"), [B(C("#"), [B(A(-1), [])]), A(5)]), A(123)]
	);
	b = B(
		B(C("xyz"), [A(1), B(A(3), [C("A")])]), 
		[B(C("123"), [B(C("#"), [B(A(-1), [])]), A(5)]), A(123)]
	);
	c = B(
		B(C("xyz"), [A(1), B(A(3), [C("A")])]), 
		[B(C("123"), [B(C("#"), [B(A(-2), [])]), A(5)]), A(123)]
	);
	println2(a < b);
	println2(a < c);
	println2(c < a);*/
	quit(0);
}
