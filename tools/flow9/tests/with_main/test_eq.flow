native println2 : io (flow) -> void = Native.println;
native quit : io (code : int) -> void = Native.quit;

Un ::= A, B, C;

A(arg : int);
C(str : string);
B(left : Un, right : [Un]);

main() -> void {
	println2("Test on deep equality ...");
	println2([2] == [2]);
	println2([1, 2, 3] == [1, 2, 3]);
	a = B(
		B(C("xyz"), [A(1), B(A(3), [C("A")])]), 
		[B(C("123"), [B(C("#"), [B(A(-1), [])]), A(5)]), A(123)]
	);
	b = B(
		B(C("xyz"), [A(1), B(A(3), [C("A")])]), 
		[B(C("123"), [B(C("#"), [B(A(-1), [])]), A(5)]), A(123)]
	);
	c = B(
		B(C("xyz"), [A(1), B(A(3), [C("A")])]), 
		[B(C("123"), [B(C("#"), [B(A(-2), [])]), A(5)]), A(123)]
	);
	println2(a == b);
	println2(a == c);
	quit(0);
}
