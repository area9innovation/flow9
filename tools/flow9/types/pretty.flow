import tools/flow9/types/type;
import text/blueprint;

export {
	// Use prettyTTypeNode if you need to resolve eclasses as well
	prettyTType(t : TType) -> string;
}

prettyTType(t : TType) -> string {
	switch (t) {
		TTypeEClass(id): "e" + i2s(id);
		TTypeName(id, typars): id + (if (typars == []) "" else "<" + superglue(typars, prettyTType, ", ") + ">");
		TTypeFunction(args, returnType): "(" + superglue(args, prettyTType, ", ") + ") -> " + prettyTType(returnType);
		TTypeOverload(typar, overloads): "overloads{" + superglue(overloads, prettyTType, ", ") + "}";
		TTypeSupertype(unique, subtypes, maxed): "supertype" + i2s(unique) + "{" + superglue(subtypes, prettyTType, if (maxed) " & " else ", ") + "}";
	}
}
