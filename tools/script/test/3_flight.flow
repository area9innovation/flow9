flight() lines(
	dropdown(flightType := 0, "Pick flight", ["one-way flight", "return flight"]),
	hide(startDate := formatString2date(strReplace(startDateText, ".", "-"), "%M%D%YYYY")),
	input(startDateText := getCurrentDate(), error(
		if (startDate == None()) "Invalid date"
		else if (invalidDates) "Start date has to before leave date"
		else ""
	)),
	hide(endDate := formatString2date(strReplace(endDateText, ".", "-"), "%M%D%YYYY")),
	input(endDateText := getCurrentDate(), 
		enabled(flightType == 1),
		error(if(endDate == None()) "Invalid date" else "")
	),
	hide(invalidDates := flightType == 1 && 
		eitherMap(startDate, \s : Date -> {
			eitherMap(endDate, \e : Date -> s > e, true)
		}, true)
	),
	button(
		"BOOK",
		confirmation(
			"Confirmation", "OK", "enter",
			"You have booked a "
			+ (if (flightType == 0) "one-way" else "return")
			+ " flight on " + startDateText
			+ (if (flightType == 1) " returning " + endDateText else "")
		),
		enabled(
			startDate != None() && endDate != None() && !invalidDates
		)
	)
)
