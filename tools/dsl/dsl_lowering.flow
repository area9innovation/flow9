import tools/dsl/dsl_rules;
import tools/dsl/dsl_eval;
import tools/dsl/dsl_runtime_common;

export {
	// Define a lowering from a given language to another, running the "to" program in the given language
	defineDslLowering(from : DslGrammar, to : DslGrammar, sep : string, rules : string) -> DslLowering;
}

defineDslLowering(from : DslGrammar, to : DslGrammar, sep : string, rules : string) -> DslLowering {
	trules = parseRules(from, to, rules, sep);
	patterns : List<DslReplacement> = mapList(getDslList(trules.rules), \rule -> {
		node = getDslNode(rule);
		pattern = node.args[0];
		replacement = node.args[1];
		DslReplacement(pattern, replacement);
	});

	DslLowering(patterns, "lambda");
}

