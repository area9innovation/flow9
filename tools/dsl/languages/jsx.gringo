jsx = element | fragment;

element = selfclosing 
	| opening children closing;

	selfclosing = "<" ws elementname attributes? "/>" ws;

	opening = "<" ws elementname attributes? ">" ws;
	closing = "</" ws elementname ">" ws;

	fragment = "<>" ws children "</>" ws;

elementname = id | namespacedname | memberexpression;

	namespacedname = id ":" ws id;
	memberexpression = id ("." ws id)+;

attributes = spreadattribute attributes?
	| attribute+;

	spreadattribute = "{" ws "..." ws assignmentexpression "}" ws;

	attribute = attributename ("=" ws attributevalue)?;

	attributename = id | namespacedname;

	attributevalue = '"' (!'"' onechar)* '"'
		| "'" (!"'" onechar)* "'"
		| "{" ws assignmentexpression "}" ws
		| element
		| fragment;

children = child*;

	child = text | element | fragment | "{" ws childexpression? "}" ws;
	text = (!("{" | "<" | "}" | ">") onechar)+;
	childexpression = assignmentexpression | "..." ws assignmentexpression;


// This comes from JS - make this an argument to this grammer extender
assignmentexpression = expr;


onechar = "&#" '0'-'9'+ ";"
	| "&#x" ('0'-'9' | 'a' - 'f' | 'A' - 'F')+ ";"
	| "&" id ";"
	| anychar;

id = $bid ws;

bid = ('a'-'z' | 'A'-'Z' | '_') (letterOrDigit)*;

letterOrDigit = 'a'-'z'
	| 'A'-'Z'
	| '_'
	| '0'-'9';

anychar = '0x0000'-'0xffff';

ws = s*;
s = cs+;

cs = " " | "\t" | "\n" | "\r"; // TODO: Add HTML comments

