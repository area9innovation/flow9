import tools/dsl/dsl_parse;

export {
	// Adds syntax like
	// a.first 		=> first(a);
	// b.method(1) 	=> method(b, 1);
	defineDot(language : DslLanguage) -> DslLanguage;
}

defineDot(language : DslLanguage) -> DslLanguage {
	// OK, extend this language with the "dot" syntax
	dot = extendGrammar(language.grammar, << 
		postfix = postfix | "." ws $"nil" $"swap" $"cons" id $"var_1" $"swap" ( "(" ws mexps ")" ws)? $"call_2" ;
		mexps = exp $"cons" ("," ws exp $"cons")* ("," ws)?;
	>>);
	DslLanguage(language with name = "dot", grammar = dot);
}
