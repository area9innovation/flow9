import tools/dsl/dsl_parse;

export {
	// The natural syntax for the DSL AST nodes
	defineDslAst() -> DslLanguage;
}

defineDslAst() -> DslLanguage {
	dslast = defineGrammar("pattern", <<
		dslast = 
			"true" !letterOrDigit ws $"true"
			| "false" !letterOrDigit ws $"false"
			| id "(" ws args ")" ws $"make_node"
			| "[" ws args "]" ws
			| "$" ws id $"bind_1"
			| double
			| int
			| string;

		args = $"nil" dslast $"cons" ("," ws dslast $"cons")*
			| $"nil";
		ws dslast

	>>,  ["ws", "id", "int", "double", "string"]);

	// println(prettyDsl(parseProgram("test", dslast, "datafun($e, [datafun_in($id, $c)])")));

	DslLanguage("dslast", dslast, None(), None(), [], None());
}
