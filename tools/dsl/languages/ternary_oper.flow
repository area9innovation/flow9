import tools/dsl/dsl_parse;
import tools/dsl/dsl_rewrite;
import tools/dsl/dsl_lowering;
import tools/dsl/dsl_runtime_common;
import tools/dsl/languages/ast_syntax;

export {
	// Adds 'cond ? then : else' so called ternary operator.
	// Basically it is just a shortening for 'if (cond) then ... else'.
	defineTernaryOperator(language : DslLanguage) -> DslLanguage;
}

defineTernaryOperator(language : DslLanguage) -> DslLanguage {
	grammar = extendGrammar(language.grammar, <<
		postfix = postfix | ternary;
		ternary = "?" ws exp ":" ws exp $"ternary_3";
	>>);

	desugaring = defineDslRewriting(defineDslAst().grammar, defineDslAst().grammar, ";", <<
			ternary($cond, $pos, $neg) => ifelse($cond, $pos, $neg);
		>>, <<
			ternary => 10000 ;
		>>,
		<< 0 >>
	);
	DslLanguage("trenaryoper",
		grammar,
		Some(desugaring),
		None(), // lowering
		None(), // optimization
		makeTree(), // runtime
		[], // compilers
		Some(language)
	);
}
