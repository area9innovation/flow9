import tools/dsl/dsl_parse;
import tools/dsl/dsl_rewrite;
import tools/dsl/dsl_runtime_common;

export {
	// Adds range syntax like:  1..5 for an array [1,2,3,4,5]
	defineRange(language : DslLanguage) -> DslLanguage;
}

defineRange(language : DslLanguage) -> DslLanguage {
	// OK, extend this language with the ".." syntax
	grammar = extendGrammar(language.grammar, <<
		atom = atom | range;
		range = '[' ws exp ".." ws exp ']' ws $"range_2";
	>>);

	desugaring = defineDslRewriting(grammar, language.grammar, ";", <<
			[ $e1 .. $e2 ] => range($e1, $e2);
		>>, <<
			range => 1000000;
		>>,
		<< 0 >>
	);

	DslLanguage("range",
		grammar,
		Some(desugaring),
		None(), // lowering
		None(), // optimization
		addCommonDslRuntime(["range"], makeTree()), // runtime
		[], // compilers
		Some(language)
	);
}
