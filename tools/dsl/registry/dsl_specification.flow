import string;
import tools/dsl/dsl_language;

export {
	matchDslSpecification(language : DslLanguage, suffix : DslLanguage) -> bool;

	resultDslTransformation(language : DslLanguage, suffix : DslLanguage) -> DslLanguage;
}

matchDslSpecification(language : DslLanguage, suffix : DslLanguage) -> bool {
	endsWith(language.language, suffix.language);
}

// Calculate the effect of this specification to this language
// See dsl_transformation.flow for a description of these specs
// and their effects
resultDslTransformation(language : DslLanguage, suffix : DslLanguage) -> DslLanguage {
	trail = "+" + suffix.language;
	if (endsWith(language.language, trail)) {
		// OK, it matches
		DslLanguage(takeBefore(language.language, trail, language.language))
	} else if (endsWith(language.language, suffix.language)) {
		DslLanguage(takeBefore(language.language, suffix.language, language.language))
	} else language;
}
