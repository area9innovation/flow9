import string;

export {
	matchDslSpecification(language : string, suffix : string) -> bool;

	resultDslTransformation(language : string, suffix : string) -> string;
}

matchDslSpecification(language : string, suffix : string) -> bool {
	endsWith(language, suffix);
}

// Calculate the effect of this specification to this language
// See dsl_transformation.flow for a description of these specs
// and their effects
resultDslTransformation(language : string, suffix : string) -> string {
	trail = "+" + suffix;
	if (endsWith(language, trail)) {
		// OK, it matches
		takeBefore(language, trail, language)
	} else if (endsWith(language, suffix)) {
		takeBefore(language, suffix, language)
	} else language;
}
