import tools/dsl/registry/dsl_run;
import tools/dsl/registry/dsl_lowering;
import tools/dsl/registry/dsl_populate;

main() {
	populateDsls();

	if (false) {
		// We start with a program in text
		input = DslAstEnv(parseDslLanguage("lambda"), DslString(" @1 "), makeTree(), makeDslEGraph(), 0, "");
		printDslAstEnv(input);

		// Then parse it
		output = performDslTransformations("parse", "lambda", input);
		printDslAstEnv(output);

		// The desugar it
		output2 = performDslTransformations("desugar", "lambda", output);
		printDslAstEnv(output2);
	}

	println(prettyDsl(evalDslProgram(makeDslEnv(), "lambda", << 
		a = 5;
		@1+$a
	>>)));

	quit(0);
}

printDslAstEnv(e : DslAstEnv) -> void {
	println(dslLanguage2string(e.language) + ": " + e.error);
	println(prettyDsl(e.ast));
	println("");
}
