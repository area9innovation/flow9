import tools/dsl/dsl_eval;
import tools/dsl/dsl_replace;
import tools/dsl/dsl_eval;
import tools/dsl/registry/dsl_run;

export {
	// Evaluate a program rightSide in the language "rightLanguage" with this
	// environment. languageRuntime is "datafun" or similar extension
	evalDslRightSide(env : DslAstEnv, bindings : Tree<string, DslAst>, 
		languageRuntime : string, rightLanguage : string, rightSide : DslAst) -> DslAst;
}

evalDslRightSide(aenv : DslAstEnv, bindings : Tree<string, DslAst>, 
	runtimeLanguage : string, rightLanguage : string, rightSide : DslAst) -> DslAst {
	if (rightLanguage == "ast") {
		replaceDsl(bindings, rightSide)
	} else if (startsWith(rightLanguage, "lambda")) {
		astEnv = DslAstEnv(aenv with language = rightLanguage, ast = rightSide);
		desugared = performDslTransformations("desugar", "lambda", astEnv);
		// println(prettyDsl(desugared.ast));

		env = makeDslEnv();
		runtime = getDslLanguageRuntime(runtimeLanguage);
		nenv = DslEnv(env 
			with globals = mapTree(desugared.env, \a -> [a]), 
			locals = mergeTree(mergeTree(astEnv.env, bindings), runtime)
		);

		evaluateDsl(nenv, desugared.ast);
	} else {
		println("Unknown right hand side language: " + rightLanguage);
		rightSide;
	}
}
