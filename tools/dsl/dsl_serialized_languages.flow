import tools/dsl/dsl_language;

export {
	getDslGrammarsPairs() -> [Pair<string, DslGrammar>];
}

dslGrammarsM : ref Maybe<[Pair<string, DslGrammar>]> = ref None();

getDslGrammarsPairs() -> [Pair<string, DslGrammar>] {
	onlyOnce(dslGrammarsM, \ -> {
		[Pair("ast", DslGrammar(GRule("ws", GStar(GVar("s")), GRule("s", GPlus(GVar("cs")), GRule("anychar", GRange(0, 65535), GRule("cs", GChoice(GString(" "), GChoice(GString("\t"), GChoice(GString("\n"), GChoice(GSeq(GSeq(GString("//"), GStar(GSeq(GNegate(GString("\n")), GVar("anychar")))), GString("\n")), GChoice(GSeq(GSeq(GString("/*"), GStar(GSeq(GNegate(GString("*/")), GVar("anychar")))), GString("*/")), GString("\u000d")))))), GRule("int", GSeq(GSeq(GUnquote(GVar("digits")), GVar("ws")), GUnquote(GString("s2i"))), GRule("double", GChoice(GSeq(GSeq(GUnquote(GSeq(GSeq(GSeq(GVar("digits"), GString(".")), GNegate(GString("."))), GOpt(GVar("digits")))), GVar("ws")), GUnquote(GString("s2d"))), GSeq(GSeq(GUnquote(GSeq(GString("."), GVar("digits"))), GVar("ws")), GUnquote(GString("s2d")))), GRule("digits", GPlus(GRange(48, 57)), GRule("string", GSeq(GSeq(GUnquote(GSeq(GSeq(GString("\""), GStar(GVar("onechar_"))), GString("\""))), GUnquote(GString("unescape"))), GVar("ws")), GRule("onechar_", GChoice(GSeq(GVar("backslash"), GChoice(GSeq(GSeq(GSeq(GSeq(GString("u"), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GChoice(GSeq(GSeq(GString("x"), GVar("hexdigit")), GVar("hexdigit")), GVar("escapedchar_")))), GSeq(GSeq(GNegate(GString("\"")), GNegate(GVar("backslash"))), GVar("anychar"))), GRule("hexdigit", GChoice(GRange(48, 57), GChoice(GRange(97, 102), GRange(65, 70))), GRule("escapedchar_", GChoice(GVar("backslash"), GChoice(GString("\""), GChoice(GString("n"), GChoice(GString("t"), GString("r"))))), GRule("backslash", GString("\\"), GRule("id", GSeq(GUnquote(GSeq(GChoice(GRange(97, 122), GChoice(GRange(65, 90), GString("_"))), GStar(GVar("letterOrDigit")))), GVar("ws")), GRule("letterOrDigit", GChoice(GRange(97, 122), GChoice(GRange(65, 90), GChoice(GString("_"), GRange(48, 57)))), GRule("dslast", GChoice(GSeq(GSeq(GSeq(GString("true"), GNegate(GVar("letterOrDigit"))), GVar("ws")), GUnquote(GString("true"))), GChoice(GSeq(GSeq(GSeq(GString("false"), GNegate(GVar("letterOrDigit"))), GVar("ws")), GUnquote(GString("false"))), GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("id"), GString("(")), GVar("ws")), GVar("args")), GString(")")), GVar("ws")), GUnquote(GString("make_node"))), GChoice(GSeq(GSeq(GSeq(GSeq(GString("["), GVar("ws")), GVar("args")), GString("]")), GVar("ws")), GChoice(GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("id")), GUnquote(GString("bind_1"))), GChoice(GVar("double"), GChoice(GVar("int"), GVar("string")))))))), GRule("args", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GVar("dslast"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("dslast")), GUnquote(GString("cons"))))))), GSeq(GVar("ws"), GVar("dslast")))))))))))))))))))), Pair("blueprint", DslGrammar(GRule("ws", GStar(GVar("s")), GRule("s", GPlus(GVar("cs")), GRule("anychar", GRange(0, 65535), GRule("cs", GChoice(GString(" "), GChoice(GString("\t"), GChoice(GString("\n"), GChoice(GSeq(GSeq(GString("//"), GStar(GSeq(GNegate(GString("\n")), GVar("anychar")))), GString("\n")), GChoice(GSeq(GSeq(GString("/*"), GStar(GSeq(GNegate(GString("*/")), GVar("anychar")))), GString("*/")), GString("\u000d")))))), GRule("int", GSeq(GSeq(GUnquote(GPlus(GRange(48, 57))), GVar("ws")), GUnquote(GString("s2i"))), GRule("string", GSeq(GSeq(GUnquote(GSeq(GSeq(GString("\""), GStar(GVar("onechar_"))), GString("\""))), GUnquote(GString("unescape"))), GVar("ws")), GRule("onechar_", GChoice(GSeq(GVar("backslash"), GChoice(GSeq(GSeq(GSeq(GSeq(GString("u"), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GChoice(GSeq(GSeq(GString("x"), GVar("hexdigit")), GVar("hexdigit")), GVar("escapedchar_")))), GSeq(GSeq(GNegate(GString("\"")), GNegate(GVar("backslash"))), GVar("anychar"))), GRule("hexdigit", GChoice(GRange(48, 57), GChoice(GRange(97, 102), GRange(65, 70))), GRule("escapedchar_", GChoice(GVar("backslash"), GChoice(GString("\""), GChoice(GString("n"), GChoice(GString("t"), GString("r"))))), GRule("backslash", GString("\\"), GRule("id", GSeq(GUnquote(GSeq(GChoice(GRange(97, 122), GChoice(GRange(65, 90), GString("_"))), GStar(GVar("letterOrDigit")))), GVar("ws")), GRule("letterOrDigit", GChoice(GRange(97, 122), GChoice(GRange(65, 90), GChoice(GString("_"), GRange(48, 57)))), GRule("output", GSeq(GSeq(GSeq(GVar("ws"), GUnquote(GString("nil"))), GStar(GSeq(GVar("blueprint"), GUnquote(GString("cons"))))), GUnquote(GString("blueprint_1"))), GRule("blueprint", GChoice(GVar("glue"), GChoice(GVar("bind"), GSeq(GVar("string"), GUnquote(GString("string_1"))))), GRule("glue", GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GString("$glue"), GVar("ws")), GString("(")), GVar("id")), GString(",")), GVar("ws")), GVar("string")), GString(")")), GVar("ws")), GUnquote(GString("glue_2"))), GRule("bind", GSeq(GSeq(GString("$"), GVar("id")), GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("int")), GString(")")), GVar("ws")), GUnquote(GString("bind_2"))), GSeq(GSeq(GUnquote(GString("0")), GUnquote(GString("s2i"))), GUnquote(GString("bind_2"))))), GVar("output"))))))))))))))))))), Pair("gringo", DslGrammar(GRule("ws", GStar(GVar("s")), GRule("s", GPlus(GVar("cs")), GRule("anychar", GRange(0, 65535), GRule("cs", GChoice(GString(" "), GChoice(GString("\t"), GChoice(GString("\n"), GChoice(GSeq(GSeq(GString("//"), GStar(GSeq(GNegate(GString("\n")), GVar("anychar")))), GString("\n")), GChoice(GSeq(GSeq(GString("/*"), GStar(GSeq(GNegate(GString("*/")), GVar("anychar")))), GString("*/")), GString("\u000d")))))), GRule("id", GSeq(GUnquote(GSeq(GChoice(GRange(97, 122), GChoice(GRange(65, 90), GString("_"))), GStar(GVar("letterOrDigit")))), GVar("ws")), GRule("letterOrDigit", GChoice(GRange(97, 122), GChoice(GRange(65, 90), GChoice(GString("_"), GRange(48, 57)))), GRule("term", GSeq(GVar("term1"), GOpt(GSeq(GSeq(GSeq(GString("|>"), GVar("ws")), GVar("term")), GUnquote(GString("GPrecedence_2"))))), GRule("term1", GSeq(GVar("term2"), GOpt(GSeq(GSeq(GSeq(GString("|"), GVar("ws")), GVar("term1")), GUnquote(GString("GChoice_2"))))), GRule("term2", GSeq(GVar("term3"), GOpt(GSeq(GVar("term2"), GUnquote(GString("GSeq_2"))))), GRule("term3", GChoice(GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("term3")), GUnquote(GString("GUnquote_1"))), GVar("term4")), GRule("term4", GChoice(GSeq(GSeq(GSeq(GString("<"), GVar("ws")), GVar("term4")), GUnquote(GString("GLower_1"))), GVar("term5")), GRule("term5", GChoice(GSeq(GSeq(GSeq(GString("#"), GVar("ws")), GVar("term5")), GUnquote(GString("GError_1"))), GVar("term6")), GRule("term6", GSeq(GVar("term7"), GOpt(GSeq(GSeq(GString("*"), GVar("ws")), GUnquote(GString("GStar_1"))))), GRule("term7", GSeq(GVar("term8"), GOpt(GSeq(GSeq(GString("+"), GVar("ws")), GUnquote(GString("GPlus_1"))))), GRule("term8", GSeq(GVar("term9"), GOpt(GSeq(GSeq(GString("?"), GVar("ws")), GUnquote(GString("GOpt_1"))))), GRule("term9", GChoice(GSeq(GSeq(GSeq(GString("!"), GVar("ws")), GVar("term9")), GUnquote(GString("GNegate_1"))), GVar("term10")), GRule("term10", GChoice(GSeq(GSeq(GString("@"), GVar("id")), GUnquote(GString("bind_1"))), GVar("term11")), GRule("term11", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GString("list("), GVar("ws")), GVar("term")), GString(")")), GVar("ws")), GUnquote(GString("GList_1"))), GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GString("listof("), GVar("ws")), GVar("term")), GString(",")), GVar("ws")), GVar("term")), GString(")")), GVar("ws")), GUnquote(GString("GListOf_2"))), GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GString("keyword("), GVar("ws")), GVar("term")), GString(")")), GVar("ws")), GUnquote(GString("GKeyword_1"))), GChoice(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("term")), GString(")")), GVar("ws")), GChoice(GSeq(GSeq(GSeq(GSeq(GString("\""), GVar("string")), GString("\"")), GVar("ws")), GUnquote(GString("GString_1"))), GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GString("'"), GVar("char")), GString("'")), GVar("ws")), GString("-")), GVar("ws")), GString("'")), GVar("char")), GString("'")), GVar("ws")), GUnquote(GString("GRange_2"))), GChoice(GSeq(GSeq(GSeq(GSeq(GString("'"), GVar("stringq")), GString("'")), GVar("ws")), GUnquote(GString("GString_1"))), GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("id"), GString("=")), GVar("ws")), GVar("term")), GString(";")), GVar("ws")), GVar("term")), GUnquote(GString("GRule_3"))), GSeq(GVar("id"), GUnquote(GString("GVar_1"))))))))))), GRule("string", GUnquote(GStar(GSeq(GNegate(GString("\"")), GVar("anychar")))), GRule("stringq", GUnquote(GStar(GSeq(GNegate(GString("'")), GVar("anychar")))), GRule("char", GChoice(GUnquote(GSeq(GString("0x"), GPlus(GVar("hexdigit")))), GUnquote(GVar("anychar"))), GRule("hexdigit", GChoice(GRange(97, 102), GChoice(GRange(65, 70), GRange(48, 57))), GRule("grammar", GSeq(GVar("ws"), GVar("term")), GVar("grammar")))))))))))))))))))))))))), Pair("lambda", DslGrammar(GRule("ws", GStar(GVar("s")), GRule("s", GPlus(GVar("cs")), GRule("anychar", GRange(0, 65535), GRule("cs", GChoice(GString(" "), GChoice(GString("\t"), GChoice(GString("\n"), GChoice(GSeq(GSeq(GString("//"), GStar(GSeq(GNegate(GString("\n")), GVar("anychar")))), GString("\n")), GChoice(GSeq(GSeq(GString("/*"), GStar(GSeq(GNegate(GString("*/")), GVar("anychar")))), GString("*/")), GString("\u000d")))))), GRule("int", GSeq(GSeq(GUnquote(GVar("digits")), GVar("ws")), GUnquote(GString("s2i"))), GRule("double", GChoice(GSeq(GSeq(GUnquote(GSeq(GSeq(GSeq(GVar("digits"), GString(".")), GNegate(GString("."))), GOpt(GVar("digits")))), GVar("ws")), GUnquote(GString("s2d"))), GSeq(GSeq(GUnquote(GSeq(GString("."), GVar("digits"))), GVar("ws")), GUnquote(GString("s2d")))), GRule("digits", GPlus(GRange(48, 57)), GRule("string", GSeq(GSeq(GUnquote(GSeq(GSeq(GString("\""), GStar(GVar("onechar_"))), GString("\""))), GUnquote(GString("unescape"))), GVar("ws")), GRule("onechar_", GChoice(GSeq(GVar("backslash"), GChoice(GSeq(GSeq(GSeq(GSeq(GString("u"), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GChoice(GSeq(GSeq(GString("x"), GVar("hexdigit")), GVar("hexdigit")), GVar("escapedchar_")))), GSeq(GSeq(GNegate(GString("\"")), GNegate(GVar("backslash"))), GVar("anychar"))), GRule("hexdigit", GChoice(GRange(48, 57), GChoice(GRange(97, 102), GRange(65, 70))), GRule("escapedchar_", GChoice(GVar("backslash"), GChoice(GString("\""), GChoice(GString("n"), GChoice(GString("t"), GString("r"))))), GRule("backslash", GString("\\"), GRule("id", GSeq(GUnquote(GSeq(GChoice(GRange(97, 122), GChoice(GRange(65, 90), GString("_"))), GStar(GVar("letterOrDigit")))), GVar("ws")), GRule("letterOrDigit", GChoice(GRange(97, 122), GChoice(GRange(65, 90), GChoice(GString("_"), GRange(48, 57)))), GRule("exp", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("idbind"), GString("=")), GVar("ws")), GVar("exp")), GString(";")), GVar("ws")), GVar("expsemi")), GUnquote(GString("brace_1"))), GUnquote(GString("let_3"))), GVar("exp1")), GRule("exp1", GSeq(GVar("exp2"), GOpt(GSeq(GSeq(GSeq(GString("||"), GVar("ws")), GVar("exp1")), GUnquote(GString("or_2"))))), GRule("exp2", GSeq(GVar("exp3"), GOpt(GSeq(GSeq(GSeq(GString("&&"), GVar("ws")), GVar("exp2")), GUnquote(GString("and_2"))))), GRule("exp3", GSeq(GVar("exp4"), GChoice(GSeq(GSeq(GSeq(GString("=="), GVar("ws")), GVar("exp3")), GUnquote(GString("equal_2"))), GOpt(GSeq(GSeq(GSeq(GString("!="), GVar("ws")), GVar("exp3")), GUnquote(GString("not_equal_2")))))), GRule("exp4", GSeq(GVar("exp5"), GOpt(GChoice(GSeq(GSeq(GSeq(GString("<="), GVar("ws")), GVar("exp4")), GUnquote(GString("less_equal_2"))), GChoice(GSeq(GSeq(GSeq(GString("<"), GVar("ws")), GVar("exp4")), GUnquote(GString("less_2"))), GChoice(GSeq(GSeq(GSeq(GString(">="), GVar("ws")), GVar("exp4")), GUnquote(GString("greater_equal_2"))), GSeq(GSeq(GSeq(GString(">"), GVar("ws")), GVar("exp4")), GUnquote(GString("greater_2")))))))), GRule("exp5", GSeq(GVar("exp6"), GStar(GChoice(GSeq(GSeq(GSeq(GString("+"), GVar("ws")), GVar("exp6")), GUnquote(GString("add_2"))), GSeq(GSeq(GSeq(GString("-"), GVar("ws")), GVar("exp6")), GUnquote(GString("sub_2")))))), GRule("exp6", GSeq(GVar("exp7"), GStar(GChoice(GSeq(GSeq(GSeq(GString("*"), GVar("ws")), GVar("exp6")), GUnquote(GString("mul_2"))), GChoice(GSeq(GSeq(GSeq(GString("/"), GVar("ws")), GVar("exp6")), GUnquote(GString("div_2"))), GSeq(GSeq(GSeq(GString("%"), GVar("ws")), GVar("exp6")), GUnquote(GString("mod_2"))))))), GRule("exp7", GChoice(GSeq(GSeq(GSeq(GString("!"), GVar("ws")), GVar("exp7")), GUnquote(GString("not_1"))), GChoice(GSeq(GSeq(GSeq(GString("-"), GVar("ws")), GVar("exp7")), GUnquote(GString("negate_1"))), GChoice(GVar("lambda"), GChoice(GSeq(GVar("exp8"), GStar(GVar("postfix"))), GVar("exp8"))))), GRule("exp8", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GString("{"), GVar("ws")), GVar("expsemi")), GString("}")), GVar("ws")), GUnquote(GString("brace_1"))), GVar("exp9")), GRule("exp9", GChoice(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("exp")), GString(")")), GVar("ws")), GVar("atom")), GRule("lambda", GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("backslash"), GVar("ws")), GVar("lambdaargs")), GString("->")), GVar("ws")), GVar("exp")), GString("")), GUnquote(GString("lambda_2"))), GRule("lambdaargs", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GVar("idbind"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("idbind")), GUnquote(GString("cons"))))))), GRule("postfix", GSeq(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("exps")), GString(")")), GVar("ws")), GUnquote(GString("call_2"))), GRule("atom", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GString("if"), GNegate(GVar("letterOrDigit"))), GVar("ws")), GVar("exp")), GVar("exp")), GString("else")), GVar("ws")), GVar("exp")), GUnquote(GString("ifelse_3"))), GChoice(GSeq(GSeq(GSeq(GString("true"), GNegate(GVar("letterOrDigit"))), GUnquote(GString("true"))), GVar("ws")), GChoice(GSeq(GSeq(GSeq(GString("false"), GNegate(GVar("letterOrDigit"))), GUnquote(GString("false"))), GVar("ws")), GChoice(GSeq(GVar("id"), GUnquote(GString("var_1"))), GChoice(GSeq(GVar("string"), GUnquote(GString("string_1"))), GChoice(GSeq(GVar("double"), GUnquote(GString("double_1"))), GChoice(GSeq(GVar("int"), GUnquote(GString("int_1"))), GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("id")), GUnquote(GString("bind_1")))))))))), GRule("exps", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GSeq(GVar("exp"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("exp")), GUnquote(GString("cons"))))), GOpt(GSeq(GString(","), GVar("ws")))))), GRule("expsemi", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GSeq(GVar("exp"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(";"), GVar("ws")), GVar("exp")), GUnquote(GString("cons"))))), GOpt(GSeq(GString(";"), GVar("ws")))))), GRule("idbind", GChoice(GVar("id"), GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("id")), GUnquote(GString("bind_1")))), GSeq(GVar("ws"), GVar("exp"))))))))))))))))))))))))))))))))))), Pair("lambda+array", DslGrammar(GRule("ws", GStar(GVar("s")), GRule("string", GSeq(GSeq(GUnquote(GSeq(GSeq(GString("\""), GStar(GVar("onechar_"))), GString("\""))), GUnquote(GString("unescape"))), GVar("ws")), GRule("s", GPlus(GVar("cs")), GRule("postfix", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("exps")), GString(")")), GVar("ws")), GUnquote(GString("call_2"))), GSeq(GSeq(GSeq(GSeq(GSeq(GString("["), GVar("ws")), GVar("exp")), GString("]")), GVar("ws")), GUnquote(GString("array_index_2")))), GRule("onechar_", GChoice(GSeq(GVar("backslash"), GChoice(GSeq(GSeq(GSeq(GSeq(GString("u"), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GChoice(GSeq(GSeq(GString("x"), GVar("hexdigit")), GVar("hexdigit")), GVar("escapedchar_")))), GSeq(GSeq(GNegate(GString("\"")), GNegate(GVar("backslash"))), GVar("anychar"))), GRule("letterOrDigit", GChoice(GRange(97, 122), GChoice(GRange(65, 90), GChoice(GString("_"), GRange(48, 57)))), GRule("lambdaargs", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GVar("idbind"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("idbind")), GUnquote(GString("cons"))))))), GRule("lambda", GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("backslash"), GVar("ws")), GVar("lambdaargs")), GString("->")), GVar("ws")), GVar("exp")), GString("")), GUnquote(GString("lambda_2"))), GRule("int", GSeq(GSeq(GUnquote(GVar("digits")), GVar("ws")), GUnquote(GString("s2i"))), GRule("idbind", GChoice(GVar("id"), GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("id")), GUnquote(GString("bind_1")))), GRule("id", GSeq(GUnquote(GSeq(GChoice(GRange(97, 122), GChoice(GRange(65, 90), GString("_"))), GStar(GVar("letterOrDigit")))), GVar("ws")), GRule("hexdigit", GChoice(GRange(48, 57), GChoice(GRange(97, 102), GRange(65, 70))), GRule("expsemi", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GSeq(GVar("exp"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(";"), GVar("ws")), GVar("exp")), GUnquote(GString("cons"))))), GOpt(GSeq(GString(";"), GVar("ws")))))), GRule("exps", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GSeq(GVar("exp"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("exp")), GUnquote(GString("cons"))))), GOpt(GSeq(GString(","), GVar("ws")))))), GRule("exp9", GChoice(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("exp")), GString(")")), GVar("ws")), GVar("atom")), GRule("exp8", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GString("{"), GVar("ws")), GVar("expsemi")), GString("}")), GVar("ws")), GUnquote(GString("brace_1"))), GVar("exp9")), GRule("exp7", GChoice(GSeq(GSeq(GSeq(GString("!"), GVar("ws")), GVar("exp7")), GUnquote(GString("not_1"))), GChoice(GSeq(GSeq(GSeq(GString("-"), GVar("ws")), GVar("exp7")), GUnquote(GString("negate_1"))), GChoice(GVar("lambda"), GChoice(GSeq(GVar("exp8"), GStar(GVar("postfix"))), GVar("exp8"))))), GRule("exp6", GSeq(GVar("exp7"), GStar(GChoice(GSeq(GSeq(GSeq(GString("*"), GVar("ws")), GVar("exp6")), GUnquote(GString("mul_2"))), GChoice(GSeq(GSeq(GSeq(GString("/"), GVar("ws")), GVar("exp6")), GUnquote(GString("div_2"))), GSeq(GSeq(GSeq(GString("%"), GVar("ws")), GVar("exp6")), GUnquote(GString("mod_2"))))))), GRule("exp5", GSeq(GVar("exp6"), GStar(GChoice(GSeq(GSeq(GSeq(GString("+"), GVar("ws")), GVar("exp6")), GUnquote(GString("add_2"))), GSeq(GSeq(GSeq(GString("-"), GVar("ws")), GVar("exp6")), GUnquote(GString("sub_2")))))), GRule("exp4", GSeq(GVar("exp5"), GOpt(GChoice(GSeq(GSeq(GSeq(GString("<="), GVar("ws")), GVar("exp4")), GUnquote(GString("less_equal_2"))), GChoice(GSeq(GSeq(GSeq(GString("<"), GVar("ws")), GVar("exp4")), GUnquote(GString("less_2"))), GChoice(GSeq(GSeq(GSeq(GString(">="), GVar("ws")), GVar("exp4")), GUnquote(GString("greater_equal_2"))), GSeq(GSeq(GSeq(GString(">"), GVar("ws")), GVar("exp4")), GUnquote(GString("greater_2")))))))), GRule("exp3", GSeq(GVar("exp4"), GChoice(GSeq(GSeq(GSeq(GString("=="), GVar("ws")), GVar("exp3")), GUnquote(GString("equal_2"))), GOpt(GSeq(GSeq(GSeq(GString("!="), GVar("ws")), GVar("exp3")), GUnquote(GString("not_equal_2")))))), GRule("exp2", GSeq(GVar("exp3"), GOpt(GSeq(GSeq(GSeq(GString("&&"), GVar("ws")), GVar("exp2")), GUnquote(GString("and_2"))))), GRule("exp1", GSeq(GVar("exp2"), GOpt(GSeq(GSeq(GSeq(GString("||"), GVar("ws")), GVar("exp1")), GUnquote(GString("or_2"))))), GRule("exp", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("idbind"), GString("=")), GVar("ws")), GVar("exp")), GString(";")), GVar("ws")), GVar("expsemi")), GUnquote(GString("brace_1"))), GUnquote(GString("let_3"))), GVar("exp1")), GRule("escapedchar_", GChoice(GVar("backslash"), GChoice(GString("\""), GChoice(GString("n"), GChoice(GString("t"), GString("r"))))), GRule("double", GChoice(GSeq(GSeq(GUnquote(GSeq(GSeq(GSeq(GVar("digits"), GString(".")), GNegate(GString("."))), GOpt(GVar("digits")))), GVar("ws")), GUnquote(GString("s2d"))), GSeq(GSeq(GUnquote(GSeq(GString("."), GVar("digits"))), GVar("ws")), GUnquote(GString("s2d")))), GRule("digits", GPlus(GRange(48, 57)), GRule("cs", GChoice(GString(" "), GChoice(GString("\t"), GChoice(GString("\n"), GChoice(GSeq(GSeq(GString("//"), GStar(GSeq(GNegate(GString("\n")), GVar("anychar")))), GString("\n")), GChoice(GSeq(GSeq(GString("/*"), GStar(GSeq(GNegate(GString("*/")), GVar("anychar")))), GString("*/")), GString("\u000d")))))), GRule("backslash", GString("\\"), GRule("atom", GChoice(GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GString("if"), GNegate(GVar("letterOrDigit"))), GVar("ws")), GVar("exp")), GVar("exp")), GString("else")), GVar("ws")), GVar("exp")), GUnquote(GString("ifelse_3"))), GChoice(GSeq(GSeq(GSeq(GString("true"), GNegate(GVar("letterOrDigit"))), GUnquote(GString("true"))), GVar("ws")), GChoice(GSeq(GSeq(GSeq(GString("false"), GNegate(GVar("letterOrDigit"))), GUnquote(GString("false"))), GVar("ws")), GChoice(GSeq(GVar("id"), GUnquote(GString("var_1"))), GChoice(GSeq(GVar("string"), GUnquote(GString("string_1"))), GChoice(GSeq(GVar("double"), GUnquote(GString("double_1"))), GChoice(GSeq(GVar("int"), GUnquote(GString("int_1"))), GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("id")), GUnquote(GString("bind_1")))))))))), GSeq(GSeq(GSeq(GSeq(GSeq(GString("["), GVar("ws")), GVar("exps")), GString("]")), GVar("ws")), GUnquote(GString("array_1")))), GRule("anychar", GRange(0, 65535), GSeq(GVar("ws"), GVar("exp"))))))))))))))))))))))))))))))))))), Pair("lambda+datafun", DslGrammar(GRule("ws", GStar(GVar("s")), GRule("string", GSeq(GSeq(GUnquote(GSeq(GSeq(GString("\""), GStar(GVar("onechar_"))), GString("\""))), GUnquote(GString("unescape"))), GVar("ws")), GRule("s", GPlus(GVar("cs")), GRule("postfix", GSeq(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("exps")), GString(")")), GVar("ws")), GUnquote(GString("call_2"))), GRule("onechar_", GChoice(GSeq(GVar("backslash"), GChoice(GSeq(GSeq(GSeq(GSeq(GString("u"), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GChoice(GSeq(GSeq(GString("x"), GVar("hexdigit")), GVar("hexdigit")), GVar("escapedchar_")))), GSeq(GSeq(GNegate(GString("\"")), GNegate(GVar("backslash"))), GVar("anychar"))), GRule("letterOrDigit", GChoice(GRange(97, 122), GChoice(GRange(65, 90), GChoice(GString("_"), GRange(48, 57)))), GRule("lambdaargs", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GVar("idbind"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("idbind")), GUnquote(GString("cons"))))))), GRule("lambda", GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("backslash"), GVar("ws")), GVar("lambdaargs")), GString("->")), GVar("ws")), GVar("exp")), GString("")), GUnquote(GString("lambda_2"))), GRule("int", GSeq(GSeq(GUnquote(GVar("digits")), GVar("ws")), GUnquote(GString("s2i"))), GRule("idbind", GChoice(GVar("id"), GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("id")), GUnquote(GString("bind_1")))), GRule("id", GSeq(GUnquote(GSeq(GChoice(GRange(97, 122), GChoice(GRange(65, 90), GString("_"))), GStar(GVar("letterOrDigit")))), GVar("ws")), GRule("hexdigit", GChoice(GRange(48, 57), GChoice(GRange(97, 102), GRange(65, 70))), GRule("expsemi", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GSeq(GVar("exp"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(";"), GVar("ws")), GVar("exp")), GUnquote(GString("cons"))))), GOpt(GSeq(GString(";"), GVar("ws")))))), GRule("exps", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GSeq(GVar("exp"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("exp")), GUnquote(GString("cons"))))), GOpt(GSeq(GString(","), GVar("ws")))))), GRule("exp9", GChoice(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("exp")), GString(")")), GVar("ws")), GVar("atom")), GRule("exp8", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GString("{"), GVar("ws")), GVar("expsemi")), GString("}")), GVar("ws")), GUnquote(GString("brace_1"))), GVar("exp9")), GRule("exp7", GChoice(GSeq(GSeq(GSeq(GString("!"), GVar("ws")), GVar("exp7")), GUnquote(GString("not_1"))), GChoice(GSeq(GSeq(GSeq(GString("-"), GVar("ws")), GVar("exp7")), GUnquote(GString("negate_1"))), GChoice(GVar("lambda"), GChoice(GSeq(GVar("exp8"), GStar(GVar("postfix"))), GVar("exp8"))))), GRule("exp6", GSeq(GVar("exp7"), GStar(GChoice(GSeq(GSeq(GSeq(GString("*"), GVar("ws")), GVar("exp6")), GUnquote(GString("mul_2"))), GChoice(GSeq(GSeq(GSeq(GString("/"), GVar("ws")), GVar("exp6")), GUnquote(GString("div_2"))), GSeq(GSeq(GSeq(GString("%"), GVar("ws")), GVar("exp6")), GUnquote(GString("mod_2"))))))), GRule("exp5", GSeq(GVar("exp6"), GStar(GChoice(GSeq(GSeq(GSeq(GString("+"), GVar("ws")), GVar("exp6")), GUnquote(GString("add_2"))), GSeq(GSeq(GSeq(GString("-"), GVar("ws")), GVar("exp6")), GUnquote(GString("sub_2")))))), GRule("exp4", GSeq(GVar("exp5"), GOpt(GChoice(GSeq(GSeq(GSeq(GString("<="), GVar("ws")), GVar("exp4")), GUnquote(GString("less_equal_2"))), GChoice(GSeq(GSeq(GSeq(GString("<"), GVar("ws")), GVar("exp4")), GUnquote(GString("less_2"))), GChoice(GSeq(GSeq(GSeq(GString(">="), GVar("ws")), GVar("exp4")), GUnquote(GString("greater_equal_2"))), GSeq(GSeq(GSeq(GString(">"), GVar("ws")), GVar("exp4")), GUnquote(GString("greater_2")))))))), GRule("exp3", GSeq(GVar("exp4"), GChoice(GSeq(GSeq(GSeq(GString("=="), GVar("ws")), GVar("exp3")), GUnquote(GString("equal_2"))), GOpt(GSeq(GSeq(GSeq(GString("!="), GVar("ws")), GVar("exp3")), GUnquote(GString("not_equal_2")))))), GRule("exp2", GSeq(GVar("exp3"), GOpt(GSeq(GSeq(GSeq(GString("&&"), GVar("ws")), GVar("exp2")), GUnquote(GString("and_2"))))), GRule("exp1", GSeq(GVar("exp2"), GOpt(GSeq(GSeq(GSeq(GString("||"), GVar("ws")), GVar("exp1")), GUnquote(GString("or_2"))))), GRule("exp", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("idbind"), GString("=")), GVar("ws")), GVar("exp")), GString(";")), GVar("ws")), GVar("expsemi")), GUnquote(GString("brace_1"))), GUnquote(GString("let_3"))), GVar("exp1")), GRule("escapedchar_", GChoice(GVar("backslash"), GChoice(GString("\""), GChoice(GString("n"), GChoice(GString("t"), GString("r"))))), GRule("double", GChoice(GSeq(GSeq(GUnquote(GSeq(GSeq(GSeq(GVar("digits"), GString(".")), GNegate(GString("."))), GOpt(GVar("digits")))), GVar("ws")), GUnquote(GString("s2d"))), GSeq(GSeq(GUnquote(GSeq(GString("."), GVar("digits"))), GVar("ws")), GUnquote(GString("s2d")))), GRule("digits", GPlus(GRange(48, 57)), GRule("datafun_exps", GSeq(GSeq(GSeq(GUnquote(GString("nil")), GVar("datafun_exp")), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("datafun_exp")), GUnquote(GString("cons"))))), GRule("datafun_exp", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("idbind"), GVar("ws")), GString("in")), GVar("ws")), GVar("exp")), GUnquote(GString("datafun_in_2"))), GSeq(GVar("exp"), GUnquote(GString("datafun_filter_1")))), GRule("datafun", GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GString("["), GVar("ws")), GVar("exp")), GString("|")), GVar("ws")), GVar("datafun_exps")), GString("]")), GVar("ws")), GUnquote(GString("datafun_2"))), GRule("cs", GChoice(GString(" "), GChoice(GString("\t"), GChoice(GString("\n"), GChoice(GSeq(GSeq(GString("//"), GStar(GSeq(GNegate(GString("\n")), GVar("anychar")))), GString("\n")), GChoice(GSeq(GSeq(GString("/*"), GStar(GSeq(GNegate(GString("*/")), GVar("anychar")))), GString("*/")), GString("\u000d")))))), GRule("backslash", GString("\\"), GRule("atom", GChoice(GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GString("if"), GNegate(GVar("letterOrDigit"))), GVar("ws")), GVar("exp")), GVar("exp")), GString("else")), GVar("ws")), GVar("exp")), GUnquote(GString("ifelse_3"))), GChoice(GSeq(GSeq(GSeq(GString("true"), GNegate(GVar("letterOrDigit"))), GUnquote(GString("true"))), GVar("ws")), GChoice(GSeq(GSeq(GSeq(GString("false"), GNegate(GVar("letterOrDigit"))), GUnquote(GString("false"))), GVar("ws")), GChoice(GSeq(GVar("id"), GUnquote(GString("var_1"))), GChoice(GSeq(GVar("string"), GUnquote(GString("string_1"))), GChoice(GSeq(GVar("double"), GUnquote(GString("double_1"))), GChoice(GSeq(GVar("int"), GUnquote(GString("int_1"))), GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("id")), GUnquote(GString("bind_1")))))))))), GVar("datafun")), GRule("anychar", GRange(0, 65535), GSeq(GVar("ws"), GVar("exp")))))))))))))))))))))))))))))))))))))), Pair("lambda+quotestring", DslGrammar(GRule("ws", GStar(GVar("s")), GRule("string", GSeq(GSeq(GUnquote(GSeq(GSeq(GString("\""), GStar(GVar("onechar_"))), GString("\""))), GUnquote(GString("unescape"))), GVar("ws")), GRule("s", GPlus(GVar("cs")), GRule("postfix", GSeq(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("exps")), GString(")")), GVar("ws")), GUnquote(GString("call_2"))), GRule("onechar_", GChoice(GSeq(GVar("backslash"), GChoice(GSeq(GSeq(GSeq(GSeq(GString("u"), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GChoice(GSeq(GSeq(GString("x"), GVar("hexdigit")), GVar("hexdigit")), GVar("escapedchar_")))), GSeq(GSeq(GNegate(GString("\"")), GNegate(GVar("backslash"))), GVar("anychar"))), GRule("letterOrDigit", GChoice(GRange(97, 122), GChoice(GRange(65, 90), GChoice(GString("_"), GRange(48, 57)))), GRule("lambdaargs", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GVar("idbind"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("idbind")), GUnquote(GString("cons"))))))), GRule("lambda", GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("backslash"), GVar("ws")), GVar("lambdaargs")), GString("->")), GVar("ws")), GVar("exp")), GString("")), GUnquote(GString("lambda_2"))), GRule("int", GSeq(GSeq(GUnquote(GVar("digits")), GVar("ws")), GUnquote(GString("s2i"))), GRule("idbind", GChoice(GVar("id"), GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("id")), GUnquote(GString("bind_1")))), GRule("id", GSeq(GUnquote(GSeq(GChoice(GRange(97, 122), GChoice(GRange(65, 90), GString("_"))), GStar(GVar("letterOrDigit")))), GVar("ws")), GRule("hexdigit", GChoice(GRange(48, 57), GChoice(GRange(97, 102), GRange(65, 70))), GRule("expsemi", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GSeq(GVar("exp"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(";"), GVar("ws")), GVar("exp")), GUnquote(GString("cons"))))), GOpt(GSeq(GString(";"), GVar("ws")))))), GRule("exps", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GSeq(GVar("exp"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("exp")), GUnquote(GString("cons"))))), GOpt(GSeq(GString(","), GVar("ws")))))), GRule("exp9", GChoice(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("exp")), GString(")")), GVar("ws")), GVar("atom")), GRule("exp8", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GString("{"), GVar("ws")), GVar("expsemi")), GString("}")), GVar("ws")), GUnquote(GString("brace_1"))), GVar("exp9")), GRule("exp7", GChoice(GSeq(GSeq(GSeq(GString("!"), GVar("ws")), GVar("exp7")), GUnquote(GString("not_1"))), GChoice(GSeq(GSeq(GSeq(GString("-"), GVar("ws")), GVar("exp7")), GUnquote(GString("negate_1"))), GChoice(GVar("lambda"), GChoice(GSeq(GVar("exp8"), GStar(GVar("postfix"))), GVar("exp8"))))), GRule("exp6", GSeq(GVar("exp7"), GStar(GChoice(GSeq(GSeq(GSeq(GString("*"), GVar("ws")), GVar("exp6")), GUnquote(GString("mul_2"))), GChoice(GSeq(GSeq(GSeq(GString("/"), GVar("ws")), GVar("exp6")), GUnquote(GString("div_2"))), GSeq(GSeq(GSeq(GString("%"), GVar("ws")), GVar("exp6")), GUnquote(GString("mod_2"))))))), GRule("exp5", GSeq(GVar("exp6"), GStar(GChoice(GSeq(GSeq(GSeq(GString("+"), GVar("ws")), GVar("exp6")), GUnquote(GString("add_2"))), GSeq(GSeq(GSeq(GString("-"), GVar("ws")), GVar("exp6")), GUnquote(GString("sub_2")))))), GRule("exp4", GSeq(GVar("exp5"), GOpt(GChoice(GSeq(GSeq(GSeq(GString("<="), GVar("ws")), GVar("exp4")), GUnquote(GString("less_equal_2"))), GChoice(GSeq(GSeq(GSeq(GString("<"), GVar("ws")), GVar("exp4")), GUnquote(GString("less_2"))), GChoice(GSeq(GSeq(GSeq(GString(">="), GVar("ws")), GVar("exp4")), GUnquote(GString("greater_equal_2"))), GSeq(GSeq(GSeq(GString(">"), GVar("ws")), GVar("exp4")), GUnquote(GString("greater_2")))))))), GRule("exp3", GSeq(GVar("exp4"), GChoice(GSeq(GSeq(GSeq(GString("=="), GVar("ws")), GVar("exp3")), GUnquote(GString("equal_2"))), GOpt(GSeq(GSeq(GSeq(GString("!="), GVar("ws")), GVar("exp3")), GUnquote(GString("not_equal_2")))))), GRule("exp2", GSeq(GVar("exp3"), GOpt(GSeq(GSeq(GSeq(GString("&&"), GVar("ws")), GVar("exp2")), GUnquote(GString("and_2"))))), GRule("exp1", GSeq(GVar("exp2"), GOpt(GSeq(GSeq(GSeq(GString("||"), GVar("ws")), GVar("exp1")), GUnquote(GString("or_2"))))), GRule("exp", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("idbind"), GString("=")), GVar("ws")), GVar("exp")), GString(";")), GVar("ws")), GVar("expsemi")), GUnquote(GString("brace_1"))), GUnquote(GString("let_3"))), GVar("exp1")), GRule("escapedchar_", GChoice(GVar("backslash"), GChoice(GString("\""), GChoice(GString("n"), GChoice(GString("t"), GString("r"))))), GRule("double", GChoice(GSeq(GSeq(GUnquote(GSeq(GSeq(GSeq(GVar("digits"), GString(".")), GNegate(GString("."))), GOpt(GVar("digits")))), GVar("ws")), GUnquote(GString("s2d"))), GSeq(GSeq(GUnquote(GSeq(GString("."), GVar("digits"))), GVar("ws")), GUnquote(GString("s2d")))), GRule("digits", GPlus(GRange(48, 57)), GRule("cs", GChoice(GString(" "), GChoice(GString("\t"), GChoice(GString("\n"), GChoice(GSeq(GSeq(GString("//"), GStar(GSeq(GNegate(GString("\n")), GVar("anychar")))), GString("\n")), GChoice(GSeq(GSeq(GString("/*"), GStar(GSeq(GNegate(GString("*/")), GVar("anychar")))), GString("*/")), GString("\u000d")))))), GRule("backslash", GString("\\"), GRule("atom", GChoice(GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GString("if"), GNegate(GVar("letterOrDigit"))), GVar("ws")), GVar("exp")), GVar("exp")), GString("else")), GVar("ws")), GVar("exp")), GUnquote(GString("ifelse_3"))), GChoice(GSeq(GSeq(GSeq(GString("true"), GNegate(GVar("letterOrDigit"))), GUnquote(GString("true"))), GVar("ws")), GChoice(GSeq(GSeq(GSeq(GString("false"), GNegate(GVar("letterOrDigit"))), GUnquote(GString("false"))), GVar("ws")), GChoice(GSeq(GVar("id"), GUnquote(GString("var_1"))), GChoice(GSeq(GVar("string"), GUnquote(GString("string_1"))), GChoice(GSeq(GVar("double"), GUnquote(GString("double_1"))), GChoice(GSeq(GVar("int"), GUnquote(GString("int_1"))), GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("id")), GUnquote(GString("bind_1")))))))))), GSeq(GSeq(GSeq(GString("<<"), GUnquote(GStar(GSeq(GNegate(GString(">>")), GVar("anychar"))))), GString(">>")), GVar("ws"))), GRule("anychar", GRange(0, 65535), GSeq(GVar("ws"), GVar("exp"))))))))))))))))))))))))))))))))))), Pair("lambda+quotestring+array", DslGrammar(GRule("ws", GStar(GVar("s")), GRule("string", GSeq(GSeq(GUnquote(GSeq(GSeq(GString("\""), GStar(GVar("onechar_"))), GString("\""))), GUnquote(GString("unescape"))), GVar("ws")), GRule("s", GPlus(GVar("cs")), GRule("postfix", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("exps")), GString(")")), GVar("ws")), GUnquote(GString("call_2"))), GSeq(GSeq(GSeq(GSeq(GSeq(GString("["), GVar("ws")), GVar("exp")), GString("]")), GVar("ws")), GUnquote(GString("array_index_2")))), GRule("onechar_", GChoice(GSeq(GVar("backslash"), GChoice(GSeq(GSeq(GSeq(GSeq(GString("u"), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GChoice(GSeq(GSeq(GString("x"), GVar("hexdigit")), GVar("hexdigit")), GVar("escapedchar_")))), GSeq(GSeq(GNegate(GString("\"")), GNegate(GVar("backslash"))), GVar("anychar"))), GRule("letterOrDigit", GChoice(GRange(97, 122), GChoice(GRange(65, 90), GChoice(GString("_"), GRange(48, 57)))), GRule("lambdaargs", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GVar("idbind"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("idbind")), GUnquote(GString("cons"))))))), GRule("lambda", GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("backslash"), GVar("ws")), GVar("lambdaargs")), GString("->")), GVar("ws")), GVar("exp")), GString("")), GUnquote(GString("lambda_2"))), GRule("int", GSeq(GSeq(GUnquote(GVar("digits")), GVar("ws")), GUnquote(GString("s2i"))), GRule("idbind", GChoice(GVar("id"), GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("id")), GUnquote(GString("bind_1")))), GRule("id", GSeq(GUnquote(GSeq(GChoice(GRange(97, 122), GChoice(GRange(65, 90), GString("_"))), GStar(GVar("letterOrDigit")))), GVar("ws")), GRule("hexdigit", GChoice(GRange(48, 57), GChoice(GRange(97, 102), GRange(65, 70))), GRule("expsemi", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GSeq(GVar("exp"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(";"), GVar("ws")), GVar("exp")), GUnquote(GString("cons"))))), GOpt(GSeq(GString(";"), GVar("ws")))))), GRule("exps", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GSeq(GVar("exp"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("exp")), GUnquote(GString("cons"))))), GOpt(GSeq(GString(","), GVar("ws")))))), GRule("exp9", GChoice(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("exp")), GString(")")), GVar("ws")), GVar("atom")), GRule("exp8", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GString("{"), GVar("ws")), GVar("expsemi")), GString("}")), GVar("ws")), GUnquote(GString("brace_1"))), GVar("exp9")), GRule("exp7", GChoice(GSeq(GSeq(GSeq(GString("!"), GVar("ws")), GVar("exp7")), GUnquote(GString("not_1"))), GChoice(GSeq(GSeq(GSeq(GString("-"), GVar("ws")), GVar("exp7")), GUnquote(GString("negate_1"))), GChoice(GVar("lambda"), GChoice(GSeq(GVar("exp8"), GStar(GVar("postfix"))), GVar("exp8"))))), GRule("exp6", GSeq(GVar("exp7"), GStar(GChoice(GSeq(GSeq(GSeq(GString("*"), GVar("ws")), GVar("exp6")), GUnquote(GString("mul_2"))), GChoice(GSeq(GSeq(GSeq(GString("/"), GVar("ws")), GVar("exp6")), GUnquote(GString("div_2"))), GSeq(GSeq(GSeq(GString("%"), GVar("ws")), GVar("exp6")), GUnquote(GString("mod_2"))))))), GRule("exp5", GSeq(GVar("exp6"), GStar(GChoice(GSeq(GSeq(GSeq(GString("+"), GVar("ws")), GVar("exp6")), GUnquote(GString("add_2"))), GSeq(GSeq(GSeq(GString("-"), GVar("ws")), GVar("exp6")), GUnquote(GString("sub_2")))))), GRule("exp4", GSeq(GVar("exp5"), GOpt(GChoice(GSeq(GSeq(GSeq(GString("<="), GVar("ws")), GVar("exp4")), GUnquote(GString("less_equal_2"))), GChoice(GSeq(GSeq(GSeq(GString("<"), GVar("ws")), GVar("exp4")), GUnquote(GString("less_2"))), GChoice(GSeq(GSeq(GSeq(GString(">="), GVar("ws")), GVar("exp4")), GUnquote(GString("greater_equal_2"))), GSeq(GSeq(GSeq(GString(">"), GVar("ws")), GVar("exp4")), GUnquote(GString("greater_2")))))))), GRule("exp3", GSeq(GVar("exp4"), GChoice(GSeq(GSeq(GSeq(GString("=="), GVar("ws")), GVar("exp3")), GUnquote(GString("equal_2"))), GOpt(GSeq(GSeq(GSeq(GString("!="), GVar("ws")), GVar("exp3")), GUnquote(GString("not_equal_2")))))), GRule("exp2", GSeq(GVar("exp3"), GOpt(GSeq(GSeq(GSeq(GString("&&"), GVar("ws")), GVar("exp2")), GUnquote(GString("and_2"))))), GRule("exp1", GSeq(GVar("exp2"), GOpt(GSeq(GSeq(GSeq(GString("||"), GVar("ws")), GVar("exp1")), GUnquote(GString("or_2"))))), GRule("exp", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("idbind"), GString("=")), GVar("ws")), GVar("exp")), GString(";")), GVar("ws")), GVar("expsemi")), GUnquote(GString("brace_1"))), GUnquote(GString("let_3"))), GVar("exp1")), GRule("escapedchar_", GChoice(GVar("backslash"), GChoice(GString("\""), GChoice(GString("n"), GChoice(GString("t"), GString("r"))))), GRule("double", GChoice(GSeq(GSeq(GUnquote(GSeq(GSeq(GSeq(GVar("digits"), GString(".")), GNegate(GString("."))), GOpt(GVar("digits")))), GVar("ws")), GUnquote(GString("s2d"))), GSeq(GSeq(GUnquote(GSeq(GString("."), GVar("digits"))), GVar("ws")), GUnquote(GString("s2d")))), GRule("digits", GPlus(GRange(48, 57)), GRule("cs", GChoice(GString(" "), GChoice(GString("\t"), GChoice(GString("\n"), GChoice(GSeq(GSeq(GString("//"), GStar(GSeq(GNegate(GString("\n")), GVar("anychar")))), GString("\n")), GChoice(GSeq(GSeq(GString("/*"), GStar(GSeq(GNegate(GString("*/")), GVar("anychar")))), GString("*/")), GString("\u000d")))))), GRule("backslash", GString("\\"), GRule("atom", GChoice(GChoice(GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GString("if"), GNegate(GVar("letterOrDigit"))), GVar("ws")), GVar("exp")), GVar("exp")), GString("else")), GVar("ws")), GVar("exp")), GUnquote(GString("ifelse_3"))), GChoice(GSeq(GSeq(GSeq(GString("true"), GNegate(GVar("letterOrDigit"))), GUnquote(GString("true"))), GVar("ws")), GChoice(GSeq(GSeq(GSeq(GString("false"), GNegate(GVar("letterOrDigit"))), GUnquote(GString("false"))), GVar("ws")), GChoice(GSeq(GVar("id"), GUnquote(GString("var_1"))), GChoice(GSeq(GVar("string"), GUnquote(GString("string_1"))), GChoice(GSeq(GVar("double"), GUnquote(GString("double_1"))), GChoice(GSeq(GVar("int"), GUnquote(GString("int_1"))), GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("id")), GUnquote(GString("bind_1")))))))))), GSeq(GSeq(GSeq(GString("<<"), GUnquote(GStar(GSeq(GNegate(GString(">>")), GVar("anychar"))))), GString(">>")), GVar("ws"))), GSeq(GSeq(GSeq(GSeq(GSeq(GString("["), GVar("ws")), GVar("exps")), GString("]")), GVar("ws")), GUnquote(GString("array_1")))), GRule("anychar", GRange(0, 65535), GSeq(GVar("ws"), GVar("exp"))))))))))))))))))))))))))))))))))), Pair("lambda+range", DslGrammar(GRule("ws", GStar(GVar("s")), GRule("string", GSeq(GSeq(GUnquote(GSeq(GSeq(GString("\""), GStar(GVar("onechar_"))), GString("\""))), GUnquote(GString("unescape"))), GVar("ws")), GRule("s", GPlus(GVar("cs")), GRule("postfix", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("exps")), GString(")")), GVar("ws")), GUnquote(GString("call_2"))), GSeq(GSeq(GSeq(GString(".."), GVar("ws")), GVar("exp")), GUnquote(GString("range_2")))), GRule("onechar_", GChoice(GSeq(GVar("backslash"), GChoice(GSeq(GSeq(GSeq(GSeq(GString("u"), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GVar("hexdigit")), GChoice(GSeq(GSeq(GString("x"), GVar("hexdigit")), GVar("hexdigit")), GVar("escapedchar_")))), GSeq(GSeq(GNegate(GString("\"")), GNegate(GVar("backslash"))), GVar("anychar"))), GRule("letterOrDigit", GChoice(GRange(97, 122), GChoice(GRange(65, 90), GChoice(GString("_"), GRange(48, 57)))), GRule("lambdaargs", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GVar("idbind"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("idbind")), GUnquote(GString("cons"))))))), GRule("lambda", GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("backslash"), GVar("ws")), GVar("lambdaargs")), GString("->")), GVar("ws")), GVar("exp")), GString("")), GUnquote(GString("lambda_2"))), GRule("int", GSeq(GSeq(GUnquote(GVar("digits")), GVar("ws")), GUnquote(GString("s2i"))), GRule("idbind", GChoice(GVar("id"), GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("id")), GUnquote(GString("bind_1")))), GRule("id", GSeq(GUnquote(GSeq(GChoice(GRange(97, 122), GChoice(GRange(65, 90), GString("_"))), GStar(GVar("letterOrDigit")))), GVar("ws")), GRule("hexdigit", GChoice(GRange(48, 57), GChoice(GRange(97, 102), GRange(65, 70))), GRule("expsemi", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GSeq(GVar("exp"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(";"), GVar("ws")), GVar("exp")), GUnquote(GString("cons"))))), GOpt(GSeq(GString(";"), GVar("ws")))))), GRule("exps", GSeq(GUnquote(GString("nil")), GOpt(GSeq(GSeq(GSeq(GVar("exp"), GUnquote(GString("cons"))), GStar(GSeq(GSeq(GSeq(GString(","), GVar("ws")), GVar("exp")), GUnquote(GString("cons"))))), GOpt(GSeq(GString(","), GVar("ws")))))), GRule("exp9", GChoice(GSeq(GSeq(GSeq(GSeq(GString("("), GVar("ws")), GVar("exp")), GString(")")), GVar("ws")), GVar("atom")), GRule("exp8", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GString("{"), GVar("ws")), GVar("expsemi")), GString("}")), GVar("ws")), GUnquote(GString("brace_1"))), GVar("exp9")), GRule("exp7", GChoice(GSeq(GSeq(GSeq(GString("!"), GVar("ws")), GVar("exp7")), GUnquote(GString("not_1"))), GChoice(GSeq(GSeq(GSeq(GString("-"), GVar("ws")), GVar("exp7")), GUnquote(GString("negate_1"))), GChoice(GVar("lambda"), GChoice(GSeq(GVar("exp8"), GStar(GVar("postfix"))), GVar("exp8"))))), GRule("exp6", GSeq(GVar("exp7"), GStar(GChoice(GSeq(GSeq(GSeq(GString("*"), GVar("ws")), GVar("exp6")), GUnquote(GString("mul_2"))), GChoice(GSeq(GSeq(GSeq(GString("/"), GVar("ws")), GVar("exp6")), GUnquote(GString("div_2"))), GSeq(GSeq(GSeq(GString("%"), GVar("ws")), GVar("exp6")), GUnquote(GString("mod_2"))))))), GRule("exp5", GSeq(GVar("exp6"), GStar(GChoice(GSeq(GSeq(GSeq(GString("+"), GVar("ws")), GVar("exp6")), GUnquote(GString("add_2"))), GSeq(GSeq(GSeq(GString("-"), GVar("ws")), GVar("exp6")), GUnquote(GString("sub_2")))))), GRule("exp4", GSeq(GVar("exp5"), GOpt(GChoice(GSeq(GSeq(GSeq(GString("<="), GVar("ws")), GVar("exp4")), GUnquote(GString("less_equal_2"))), GChoice(GSeq(GSeq(GSeq(GString("<"), GVar("ws")), GVar("exp4")), GUnquote(GString("less_2"))), GChoice(GSeq(GSeq(GSeq(GString(">="), GVar("ws")), GVar("exp4")), GUnquote(GString("greater_equal_2"))), GSeq(GSeq(GSeq(GString(">"), GVar("ws")), GVar("exp4")), GUnquote(GString("greater_2")))))))), GRule("exp3", GSeq(GVar("exp4"), GChoice(GSeq(GSeq(GSeq(GString("=="), GVar("ws")), GVar("exp3")), GUnquote(GString("equal_2"))), GOpt(GSeq(GSeq(GSeq(GString("!="), GVar("ws")), GVar("exp3")), GUnquote(GString("not_equal_2")))))), GRule("exp2", GSeq(GVar("exp3"), GOpt(GSeq(GSeq(GSeq(GString("&&"), GVar("ws")), GVar("exp2")), GUnquote(GString("and_2"))))), GRule("exp1", GSeq(GVar("exp2"), GOpt(GSeq(GSeq(GSeq(GString("||"), GVar("ws")), GVar("exp1")), GUnquote(GString("or_2"))))), GRule("exp", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GVar("idbind"), GString("=")), GVar("ws")), GVar("exp")), GString(";")), GVar("ws")), GVar("expsemi")), GUnquote(GString("brace_1"))), GUnquote(GString("let_3"))), GVar("exp1")), GRule("escapedchar_", GChoice(GVar("backslash"), GChoice(GString("\""), GChoice(GString("n"), GChoice(GString("t"), GString("r"))))), GRule("double", GChoice(GSeq(GSeq(GUnquote(GSeq(GSeq(GSeq(GVar("digits"), GString(".")), GNegate(GString("."))), GOpt(GVar("digits")))), GVar("ws")), GUnquote(GString("s2d"))), GSeq(GSeq(GUnquote(GSeq(GString("."), GVar("digits"))), GVar("ws")), GUnquote(GString("s2d")))), GRule("digits", GPlus(GRange(48, 57)), GRule("cs", GChoice(GString(" "), GChoice(GString("\t"), GChoice(GString("\n"), GChoice(GSeq(GSeq(GString("//"), GStar(GSeq(GNegate(GString("\n")), GVar("anychar")))), GString("\n")), GChoice(GSeq(GSeq(GString("/*"), GStar(GSeq(GNegate(GString("*/")), GVar("anychar")))), GString("*/")), GString("\u000d")))))), GRule("backslash", GString("\\"), GRule("atom", GChoice(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GSeq(GString("if"), GNegate(GVar("letterOrDigit"))), GVar("ws")), GVar("exp")), GVar("exp")), GString("else")), GVar("ws")), GVar("exp")), GUnquote(GString("ifelse_3"))), GChoice(GSeq(GSeq(GSeq(GString("true"), GNegate(GVar("letterOrDigit"))), GUnquote(GString("true"))), GVar("ws")), GChoice(GSeq(GSeq(GSeq(GString("false"), GNegate(GVar("letterOrDigit"))), GUnquote(GString("false"))), GVar("ws")), GChoice(GSeq(GVar("id"), GUnquote(GString("var_1"))), GChoice(GSeq(GVar("string"), GUnquote(GString("string_1"))), GChoice(GSeq(GVar("double"), GUnquote(GString("double_1"))), GChoice(GSeq(GVar("int"), GUnquote(GString("int_1"))), GSeq(GSeq(GSeq(GString("$"), GVar("ws")), GVar("id")), GUnquote(GString("bind_1")))))))))), GRule("anychar", GRange(0, 65535), GSeq(GVar("ws"), GVar("exp")))))))))))))))))))))))))))))))))))]
	})
}
