Tree<?, ??> ::= TreeNode<?, ??>, TreeEmpty;
	TreeNode : (key : ?, value : ??, left : Tree<?, ??>, right : Tree<?, ??>, depth : int);
	TreeEmpty : ();

// Make an empty tree
makeTree : () -> Tree<?, ??>;

makeTree() {
	TreeEmpty();
}

flow(i : ?) -> flow {
	cast(i : ? -> flow);
}

initConcurrentHashMap() -> native {
	r : ref Tree<flow, flow> = ref makeTree();
	flow(r)
}
