Tree<?, ??> ::= TreeNode<?, ??>, TreeEmpty;
		TreeNode : (key : ?, value : ??, left : Tree<?, ??>, right : Tree<?, ??>, depth : int);
		TreeEmpty : ();


makeTree1(key : ?, value : ??) -> TreeNode<?, ??> {
	TreeNode(key, value, TreeEmpty(), TreeEmpty(), 1);
}

// bug 1
treeSwitch(tree : Tree<?, ??>) -> Tree<?, ??> {
	switch (tree : Tree) {
		TreeEmpty(): tree;
		TreeNode(k, v, left, right, depth): tree;
	}
}

// bug 2
// fn works fine without IF (switch ...)
treeSwitch2(k : ?, v : ??, tree : Tree<?, ??>) -> Tree<?, ??> {
	cond = 0;
	if (cond < 0) {
		tree
	} else {
		switch (tree : Tree) {
			TreeEmpty(): makeTree1(k, v);
			TreeNode(rk, rv, rl, rr, rdepth): makeTree1(rk, rv);
		}
	}
}

main() {
	v : Tree<int, string> = makeTree1(1, "1");
	treeSwitch(v);
	treeSwitch2(2, "2", v);
}