Struct1(v : Union1);
Struct2(v : Union1, arr : [string]);
Struct3();

Union1 ::= Struct1, Struct2, Struct3;

native isSameStructType : (value1 : ?, value2 : ??) -> bool = Native.isSameStructType;
native extractStruct : (a : [?], e : ??) -> ?? = Native.extractStruct;
native println2 : io (?) -> void = Native.println;

main() {

	v = Struct1(Struct2(Struct3(), ["s1", "s2"]));

	switch (v.v : Union1) {
		Struct1(v2) : println2(if (isSameStructType(v2, Struct3())) "s1 : yes" else "s1 : no");
		Struct2(v2, v3) : println2((if (isSameStructType(v2, Struct3())) "s2 : yes <= " else "s2 : no <= ") + v3[0]);
		Struct3() : println2("st3");
	} // s2 : yes
}