import string;
native println : io (?) -> void = Native.println;

fn1(start : int, acc : int) -> int {
	if (start == 1000) {
		acc
	} else {
		fn1(start + 1, acc + start)
	}
}

fn2(end : int, acc : int) -> void {
	println("fn2");
	if (acc < 0 || acc > 10) {
		println(end);
	} else {
		println(acc);
		fn2(end, acc + 1)
	}
}

fn3(end : int, acc : int) -> void {
	if (acc < 0 || acc > 10) {
		println("fn3 END");
	} else {
		println("start fn4 from "+ i2s(end));
		fn4(end, \-> fn3(end - 1, acc + 1))
	}
}

fn4(v : int, callback : () -> void) -> void {
	if (v > 0) {
		fn4(v -1, callback)
	} else {
		println("done fn4");
		callback()
	}
}

main() -> void {
	println("result tail");
	println(fn1(900, 0));
	println("void tail");
	fn2(-1, 0);
	println("foldRange");
	println(foldRange(1, 5, 0, \v, i -> v + i));

	println("2 fn");
	fn3(10, 0);
}