import tools/flow9/types/cgraph/cmap;
import text/blueprint;

export {	
	prettyCNode(cmap : CMap, node : CNode) -> string;

	prettyCEClass(cmap : CMap, eclass : int) -> string;
}

prettyCNode(cmap : CMap, node : CNode) -> string {
	switch (node) {
		CEpsilon(): "Îµ";
		CName(name, typars, reason): name + (if (typars == []) "" else {
			"<" + superglue(typars, \tp : int -> prettyCEClass(cmap, tp), ", ") + ">"
		});
		CFunction(args, return, reason): "(" + superglue(args, \tp : int -> prettyCEClass(cmap, tp), ", ") + ") -> " + prettyCEClass(cmap, return);
		COverload(unique, options, reason): {
			"overload_" + superglue(set2array(unique), i2s, "|") + "{"
			+ superglue(set2array(options), \opt -> prettyCEClass(cmap, opt), ",")
			+ "}"
		}
	}
}

prettyCEClass(cmap : CMap, eclass : int) -> string {
	node : CNode = getUnionMapValue(cmap.cmap, eclass);
	"e" + i2s(eclass)
	+ (if (node != CEpsilon()) "=" + prettyCNode(cmap, node) else "")
}
