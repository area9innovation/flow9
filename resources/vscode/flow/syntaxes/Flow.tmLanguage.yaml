fileTypes:
    - flow
name: Flow
patterns:
    -
        include: '#comments'
    -
        include: '#constants'
    -
        match: (\b(if|else|switch|default|native|with)\b)|(^(import|forbid|export)\b)
        name: keyword.control.untitled
    -
        begin: '"'
        end: '"'
        name: string.quoted.double.untitled
        patterns:
            -
                match: \\.
                name: constant.character.escape.untitled
            -
                include: '#blueprint'
    -
        begin: (?<=/\*sql\*/)<<
        end: '>>'
        name: meta.embedded.inline.sql
        patterns:
            -
                include: source.sql
    -
        begin: (?<=/\*flow\*/)<<
        end: '>>'
        name: Flow
        patterns:
            -
                include: source.flow
    -
        begin: '<<'
        end: '>>'
        name: string.quoted.double.untitled
        patterns:
            -
                include: '#blueprint'
    -
        match: '(\b(bool|double|int|void|string|io|ref|flow|mutable)\b)|\?|\{|\}'
        name: storage.type.flow
    -
        match: '\+|\*|\-|\!|\%|\:|/|\:=|==|=|\''|\\|!=|<=|>=|<|>|&&|\|\||\:\:=|\|>|->|\.|\^|with'
        name: keyword.operator.flow
    -
        match: ';|\[|\]|\{|\}'
        name: keyword.control.untitled
    -
        match: '^(\w+\W*)\s*(\(|=)'
        captures:
            '1':
                name: support.class.js
repository:
    comments:
        patterns:
            -
                captures:
                    '0': {name: punctuation.definition.comment.flow}
                match: '/\*\*/'
                name: comment.block.empty.flow
            -
                include: '#comments-inline'
    comments-inline:
        patterns:
            -
                begin: '/\*'
                captures:
                    '0': {name: punctuation.definition.comment.flow}
                end: '\*/'
                name: comment.block.flow
            -
                captures:
                    '1': {name: comment.line.double-slash.flow}
                    '2': {name: punctuation.definition.comment.flow}
                match: '\s*((//).*$\n?)'
    constants:
        patterns:
            -
                match: \b(true|false)\b
                name: constant.language.flow
            -
                match: '\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b'
                name: constant.numeric.flow
    blueprint:
        patterns:
            -
                match: '%\s*([a-zA-Z_]\w*|if\s+!?\w+)\s*%'
                name: constant.character.escape.untitled

scopeName: source.flow
uuid: 82D8B721-3D72-4D0C-948C-30B7232BF8B8
