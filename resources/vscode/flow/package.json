{
	"name": "flow",
	"displayName": "flow",
	"description": "Support for the flow, lingo, and flowschema languages",
	"version": "0.3.6",
	"publisher": "area9",
	"engines": {
		"vscode": "^1.30.0"
	},
	"categories": [
		"Programming Languages",
		"Snippets",
		"Debuggers"
	],
	"activationEvents": [
		"onLanguage:flow",
		"onLanguage:lingo",
		"onLanguage:flowschema",
		"onLanguage:sharekey",
		"onDebug",
		"onCommand:flow.run"
	],
	"main": "./out/extension",
	"contributes": {
		"commands": [
			{
				"command": "flow.flowcpp",
				"title": "Compile flow file"
			},
			{
				"command": "flow.compileNeko",
				"title": "Compile flow file with neko compiler"
			},
			{
				"command": "flow.run",
				"title": "Run flow file with flowcpp"
			},
			{
				"command": "flow.GetFlowCompiler",
				"title": "Returns flow compiler to use"
			},
			{
				"command": "flow.updateFlowRepo",
				"title": "Update flow9 repository along with stopping and starting flowc server"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Flow configuration",
			"properties": {
				"flow.root": {
					"type": "string",
					"default": "c:/area9/flow9",
					"description": "Path to flow folder"
				},
				"flow.compiler": {
					"type": "string",
					"default": "flowc",
					"description": "Compiler to use by default. Uses flowc1 now."
				},
				"flow.compilerBackend": {
					"type": "string",
					"enum": [
						"flowcpp",
						"java",
						"auto",
						"manual"
					],
					"default": "auto",
					"description": "Compiler backend to choose, applicable to flowcpp and flowc. Auto means best practice, manual means exactly as specified"
				},
				"flow.projectRoot": {
					"type": "string",
					"description": "Project root to run compiler against. Useful for multi-root workspaces"
				},
				"flow.useCompilerServer": {
					"type": "boolean",
					"default": "true",
					"scope": "resource",
					"description": "Whether to use compiler server to speed up compiles, or run from scratch all the time. Defaults to use server."
				},
				"flow.outline": {
					"type": "boolean",
					"default": "false",
					"scope": "resource",
					"description": "Whether to enable on-the-fly code outline generation"
				}
			}
		},
		"keybindings": [
			{
				"command": "flow.flowcpp",
				"key": "F7",
				"when": "editorLangId==flow"
			},
			{
				"command": "flow.compileNeko",
				"key": "Ctrl+F7",
				"when": "editorLangId==flow"
			},
			{
				"command": "flow.run",
				"key": "Shift+F7",
				"when": "editorLangId==flow"
			}
		],
		"languages": [
			{
				"id": "flow",
				"aliases": [
					"Flow",
					"flow"
				],
				"extensions": [
					".flow"
				],
				"configuration": "./flow-language-configuration.json"
			},
			{
				"id": "lingo",
				"aliases": [
					"Lingo",
					"lingo"
				],
				"extensions": [
					".lingo"
				],
				"configuration": "./lingo-language-configuration.json"
			},
			{
				"id": "flowschema",
				"aliases": [
					"FlowSchema",
					"flowschema"
				],
				"extensions": [
					".flowschema"
				],
				"configuration": "./flowschema-language-configuration.json"
			},
			{
				"id": "sharekey",
				"aliases": [
					"ShareKey",
					"shareKey"
				],
				"extensions": [
					".sharekey"
				],
				"configuration": "./sharekey-language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "flow",
				"scopeName": "source.flow",
				"path": "./syntaxes/Flow.tmLanguage"
			},
			{
				"language": "lingo",
				"scopeName": "source.lingo",
				"path": "./syntaxes/Lingo.tmLanguage"
			},
			{
				"language": "flowschema",
				"scopeName": "source.flow",
				"path": "./syntaxes/Flow.tmLanguage"
			},
			{
				"language": "sharekey",
				"scopeName": "source.flow",
				"path": "./syntaxes/Flow.tmLanguage"
			}
		],
		"snippets": [
			{
				"language": "flow",
				"path": "./snippets/snippets.json"
			}
		],
		"problemMatchers": [
			{
				"name": "flowc",
				"owner": "flow",
				"fileLocation": [
					"absolute"
				],
				"pattern": {
					"regexp": "^(.*):(\\d+):(\\d+):\\s*(.*)$",
					"file": 1,
					"line": 2,
					"column": 3,
					"message": 4
				},
				"severity": "error"
			},
			{
				"name": "flowcompiler",
				"owner": "flow",
				"fileLocation": [
					"absolute"
				],
				"pattern": {
					"regexp": "^(.*)\\((\\d+):(\\d+)\\)\\s:\\s+(.*)$",
					"file": 1,
					"line": 2,
					"column": 3,
					"message": 4
				},
				"severity": "error"
			}
		],
		"breakpoints": [
			{
				"language": "flow"
			}
		],
		"debuggers": [
			{
				"type": "flow",
				"extensions": [],
				"program": "./out/flowcpp_adapter.js",
				"runtime": "node",
				"label": "Flow",
				"configurationAttributes": {
					"launch": {
						"required": [
							"target",
							"runner_path"
						],
						"properties": {
							"target": {
								"type": "string",
								"description": "Path of flow file to run"
							},
							"arguments": {
								"type": "string",
								"description": "Arguments to append after the executable."
							},
							"cwd": {
								"type": "string",
								"description": "Path of project",
								"default": "${workspaceRoot}"
							},
							"runner_path": {
								"type": "string",
								"description": "Path to the QtByteRunner executable",
								"default": "flowcpp"
							},
							"env": {
								"type": "object",
								"description": "Environment overriding the QtByteRunner (and in turn also the process) environment",
								"default": null
							},
							"debugger_args": {
								"type": "string",
								"description": "Additional arguments to pass to QtByteRunner",
								"default": ""
							},
							"print_calls": {
								"type": "boolean",
								"description": "Prints all QtByteRunner calls to the console",
								"default": false
							},
							"showDevDebugOutput": {
								"type": "boolean",
								"description": "Prints all QtByteRunner responses to the console",
								"default": false
							},
							"compiler": {
								"type": "string",
								"description": "Flow compiler to use, values - nekocompiler, flowcompiler, flowc, flowc1",
								"default": "${command:FlowCompiler}"
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"name": "Debug",
						"type": "flow",
						"request": "launch",
						"target": "sandbox/hello.flow",
						"cwd": "${workspaceRoot}",
						"runner_path": "${config:flow.root}/bin/flowcpp",
						"compiler": "${command:FlowCompiler}"
					}
				],
				"configurationSnippets": [
					{
						"label": "Flow: Debug Program",
						"description": "Starts the program using flowcpp debug mode",
						"body": {
							"type": "flow",
							"request": "launch",
							"name": "${2:Debug Program}",
							"target": "${1:sandbox/hello.flow}",
							"cwd": "^\"\\${workspaceRoot}\"",
							"runner_path": "^\"\\${config:flow.root}/bin/flowcpp\"",
							"compiler": "^\"\\${command:FlowCompiler}\""
						}
					}
				],
				"variables": {
					"FlowCompiler": "flow.GetFlowCompiler"
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "node ./node_modules/typescript/bin/tsc -p ./",
		"watch": "node ./node_modules/typescript/bin/tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install"
	},
	"devDependencies": {
		"@types/node": "^8.10.39",
		"@types/properties-reader": "^0.0.1",
		"typescript": "^3.2.4",
		"vsce": "^1.55.0",
		"vscode": "^1.1.28"
	},
	"dependencies": {
		"arr-flatten": "^1.1.0",
		"child_process": "^1.0.2",
		"properties-reader": "^0.0.16",
		"simple-git": "^1.107.0",
		"vscode-debugadapter": "^1.33.0",
		"vscode-debugprotocol": "^1.33.0",
		"vscode-languageclient": "^5.2.1",
		"vscode-languageserver": "^5.2.1",
		"vscode-uri": "^1.0.6"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/area9innovation/flow9/tree/master/resources/vscode/flow"
	}
}
